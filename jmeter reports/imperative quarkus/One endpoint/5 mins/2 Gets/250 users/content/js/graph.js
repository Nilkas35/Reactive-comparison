/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 568.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 5.0], [5.8, 5.0], [5.9, 5.0], [6.0, 5.0], [6.1, 5.0], [6.2, 5.0], [6.3, 5.0], [6.4, 5.0], [6.5, 5.0], [6.6, 5.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 6.0], [9.3, 6.0], [9.4, 6.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 6.0], [10.8, 6.0], [10.9, 6.0], [11.0, 6.0], [11.1, 6.0], [11.2, 6.0], [11.3, 6.0], [11.4, 6.0], [11.5, 6.0], [11.6, 6.0], [11.7, 6.0], [11.8, 6.0], [11.9, 6.0], [12.0, 6.0], [12.1, 6.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 7.0], [13.0, 7.0], [13.1, 7.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 7.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 7.0], [17.6, 7.0], [17.7, 7.0], [17.8, 7.0], [17.9, 7.0], [18.0, 7.0], [18.1, 7.0], [18.2, 7.0], [18.3, 7.0], [18.4, 7.0], [18.5, 7.0], [18.6, 7.0], [18.7, 7.0], [18.8, 7.0], [18.9, 7.0], [19.0, 7.0], [19.1, 7.0], [19.2, 7.0], [19.3, 7.0], [19.4, 7.0], [19.5, 8.0], [19.6, 8.0], [19.7, 8.0], [19.8, 8.0], [19.9, 8.0], [20.0, 8.0], [20.1, 8.0], [20.2, 8.0], [20.3, 8.0], [20.4, 8.0], [20.5, 8.0], [20.6, 8.0], [20.7, 8.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 8.0], [21.8, 8.0], [21.9, 8.0], [22.0, 8.0], [22.1, 8.0], [22.2, 8.0], [22.3, 8.0], [22.4, 8.0], [22.5, 8.0], [22.6, 8.0], [22.7, 8.0], [22.8, 8.0], [22.9, 8.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 8.0], [23.5, 8.0], [23.6, 8.0], [23.7, 8.0], [23.8, 8.0], [23.9, 8.0], [24.0, 8.0], [24.1, 8.0], [24.2, 8.0], [24.3, 8.0], [24.4, 8.0], [24.5, 8.0], [24.6, 8.0], [24.7, 8.0], [24.8, 8.0], [24.9, 8.0], [25.0, 8.0], [25.1, 8.0], [25.2, 8.0], [25.3, 8.0], [25.4, 8.0], [25.5, 8.0], [25.6, 8.0], [25.7, 8.0], [25.8, 8.0], [25.9, 8.0], [26.0, 8.0], [26.1, 8.0], [26.2, 8.0], [26.3, 8.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 8.0], [27.2, 8.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 9.0], [29.6, 9.0], [29.7, 9.0], [29.8, 9.0], [29.9, 9.0], [30.0, 9.0], [30.1, 9.0], [30.2, 9.0], [30.3, 9.0], [30.4, 9.0], [30.5, 9.0], [30.6, 9.0], [30.7, 9.0], [30.8, 9.0], [30.9, 9.0], [31.0, 9.0], [31.1, 9.0], [31.2, 9.0], [31.3, 9.0], [31.4, 9.0], [31.5, 9.0], [31.6, 9.0], [31.7, 9.0], [31.8, 9.0], [31.9, 9.0], [32.0, 9.0], [32.1, 9.0], [32.2, 9.0], [32.3, 9.0], [32.4, 9.0], [32.5, 9.0], [32.6, 9.0], [32.7, 9.0], [32.8, 9.0], [32.9, 9.0], [33.0, 9.0], [33.1, 9.0], [33.2, 9.0], [33.3, 9.0], [33.4, 9.0], [33.5, 9.0], [33.6, 9.0], [33.7, 9.0], [33.8, 9.0], [33.9, 9.0], [34.0, 9.0], [34.1, 9.0], [34.2, 9.0], [34.3, 9.0], [34.4, 9.0], [34.5, 9.0], [34.6, 9.0], [34.7, 9.0], [34.8, 9.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 9.0], [38.0, 9.0], [38.1, 9.0], [38.2, 9.0], [38.3, 9.0], [38.4, 9.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 10.0], [42.3, 10.0], [42.4, 10.0], [42.5, 10.0], [42.6, 10.0], [42.7, 10.0], [42.8, 10.0], [42.9, 10.0], [43.0, 10.0], [43.1, 10.0], [43.2, 10.0], [43.3, 10.0], [43.4, 10.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 10.0], [48.1, 10.0], [48.2, 10.0], [48.3, 10.0], [48.4, 10.0], [48.5, 10.0], [48.6, 10.0], [48.7, 10.0], [48.8, 10.0], [48.9, 10.0], [49.0, 10.0], [49.1, 10.0], [49.2, 10.0], [49.3, 10.0], [49.4, 10.0], [49.5, 10.0], [49.6, 10.0], [49.7, 10.0], [49.8, 10.0], [49.9, 10.0], [50.0, 10.0], [50.1, 10.0], [50.2, 10.0], [50.3, 10.0], [50.4, 10.0], [50.5, 10.0], [50.6, 10.0], [50.7, 10.0], [50.8, 10.0], [50.9, 10.0], [51.0, 10.0], [51.1, 10.0], [51.2, 10.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 11.0], [53.9, 11.0], [54.0, 11.0], [54.1, 11.0], [54.2, 11.0], [54.3, 11.0], [54.4, 11.0], [54.5, 11.0], [54.6, 11.0], [54.7, 11.0], [54.8, 11.0], [54.9, 11.0], [55.0, 11.0], [55.1, 11.0], [55.2, 11.0], [55.3, 11.0], [55.4, 11.0], [55.5, 11.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 11.0], [56.0, 11.0], [56.1, 11.0], [56.2, 11.0], [56.3, 11.0], [56.4, 11.0], [56.5, 11.0], [56.6, 11.0], [56.7, 11.0], [56.8, 11.0], [56.9, 11.0], [57.0, 11.0], [57.1, 11.0], [57.2, 11.0], [57.3, 11.0], [57.4, 11.0], [57.5, 11.0], [57.6, 11.0], [57.7, 11.0], [57.8, 11.0], [57.9, 11.0], [58.0, 11.0], [58.1, 11.0], [58.2, 11.0], [58.3, 11.0], [58.4, 11.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 11.0], [59.2, 11.0], [59.3, 11.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 11.0], [60.0, 11.0], [60.1, 11.0], [60.2, 11.0], [60.3, 11.0], [60.4, 11.0], [60.5, 11.0], [60.6, 11.0], [60.7, 11.0], [60.8, 11.0], [60.9, 11.0], [61.0, 11.0], [61.1, 11.0], [61.2, 11.0], [61.3, 11.0], [61.4, 12.0], [61.5, 12.0], [61.6, 12.0], [61.7, 12.0], [61.8, 12.0], [61.9, 12.0], [62.0, 12.0], [62.1, 12.0], [62.2, 12.0], [62.3, 12.0], [62.4, 12.0], [62.5, 12.0], [62.6, 12.0], [62.7, 12.0], [62.8, 12.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 12.0], [63.9, 12.0], [64.0, 12.0], [64.1, 12.0], [64.2, 12.0], [64.3, 12.0], [64.4, 12.0], [64.5, 12.0], [64.6, 12.0], [64.7, 12.0], [64.8, 12.0], [64.9, 12.0], [65.0, 12.0], [65.1, 12.0], [65.2, 12.0], [65.3, 12.0], [65.4, 12.0], [65.5, 12.0], [65.6, 12.0], [65.7, 12.0], [65.8, 12.0], [65.9, 12.0], [66.0, 12.0], [66.1, 12.0], [66.2, 12.0], [66.3, 13.0], [66.4, 13.0], [66.5, 13.0], [66.6, 13.0], [66.7, 13.0], [66.8, 13.0], [66.9, 13.0], [67.0, 13.0], [67.1, 13.0], [67.2, 13.0], [67.3, 13.0], [67.4, 13.0], [67.5, 13.0], [67.6, 13.0], [67.7, 13.0], [67.8, 13.0], [67.9, 13.0], [68.0, 13.0], [68.1, 13.0], [68.2, 13.0], [68.3, 13.0], [68.4, 13.0], [68.5, 13.0], [68.6, 13.0], [68.7, 13.0], [68.8, 13.0], [68.9, 13.0], [69.0, 13.0], [69.1, 13.0], [69.2, 13.0], [69.3, 13.0], [69.4, 13.0], [69.5, 13.0], [69.6, 13.0], [69.7, 14.0], [69.8, 14.0], [69.9, 14.0], [70.0, 14.0], [70.1, 14.0], [70.2, 14.0], [70.3, 14.0], [70.4, 14.0], [70.5, 14.0], [70.6, 14.0], [70.7, 14.0], [70.8, 14.0], [70.9, 14.0], [71.0, 14.0], [71.1, 14.0], [71.2, 14.0], [71.3, 14.0], [71.4, 14.0], [71.5, 14.0], [71.6, 14.0], [71.7, 14.0], [71.8, 14.0], [71.9, 14.0], [72.0, 14.0], [72.1, 14.0], [72.2, 14.0], [72.3, 14.0], [72.4, 14.0], [72.5, 15.0], [72.6, 15.0], [72.7, 15.0], [72.8, 15.0], [72.9, 15.0], [73.0, 15.0], [73.1, 15.0], [73.2, 15.0], [73.3, 15.0], [73.4, 15.0], [73.5, 15.0], [73.6, 15.0], [73.7, 15.0], [73.8, 15.0], [73.9, 15.0], [74.0, 15.0], [74.1, 15.0], [74.2, 15.0], [74.3, 15.0], [74.4, 15.0], [74.5, 15.0], [74.6, 15.0], [74.7, 15.0], [74.8, 15.0], [74.9, 16.0], [75.0, 16.0], [75.1, 16.0], [75.2, 16.0], [75.3, 16.0], [75.4, 16.0], [75.5, 16.0], [75.6, 16.0], [75.7, 16.0], [75.8, 16.0], [75.9, 16.0], [76.0, 16.0], [76.1, 16.0], [76.2, 16.0], [76.3, 16.0], [76.4, 16.0], [76.5, 16.0], [76.6, 16.0], [76.7, 16.0], [76.8, 16.0], [76.9, 16.0], [77.0, 17.0], [77.1, 17.0], [77.2, 17.0], [77.3, 17.0], [77.4, 17.0], [77.5, 17.0], [77.6, 17.0], [77.7, 17.0], [77.8, 17.0], [77.9, 17.0], [78.0, 17.0], [78.1, 17.0], [78.2, 17.0], [78.3, 17.0], [78.4, 17.0], [78.5, 17.0], [78.6, 17.0], [78.7, 17.0], [78.8, 18.0], [78.9, 18.0], [79.0, 18.0], [79.1, 18.0], [79.2, 18.0], [79.3, 18.0], [79.4, 18.0], [79.5, 18.0], [79.6, 18.0], [79.7, 18.0], [79.8, 18.0], [79.9, 18.0], [80.0, 18.0], [80.1, 18.0], [80.2, 18.0], [80.3, 18.0], [80.4, 18.0], [80.5, 19.0], [80.6, 19.0], [80.7, 19.0], [80.8, 19.0], [80.9, 19.0], [81.0, 19.0], [81.1, 19.0], [81.2, 19.0], [81.3, 19.0], [81.4, 19.0], [81.5, 19.0], [81.6, 19.0], [81.7, 19.0], [81.8, 20.0], [81.9, 20.0], [82.0, 20.0], [82.1, 20.0], [82.2, 20.0], [82.3, 20.0], [82.4, 20.0], [82.5, 20.0], [82.6, 20.0], [82.7, 20.0], [82.8, 20.0], [82.9, 21.0], [83.0, 21.0], [83.1, 21.0], [83.2, 21.0], [83.3, 21.0], [83.4, 21.0], [83.5, 21.0], [83.6, 21.0], [83.7, 21.0], [83.8, 22.0], [83.9, 22.0], [84.0, 22.0], [84.1, 22.0], [84.2, 22.0], [84.3, 22.0], [84.4, 23.0], [84.5, 23.0], [84.6, 23.0], [84.7, 23.0], [84.8, 23.0], [84.9, 24.0], [85.0, 24.0], [85.1, 24.0], [85.2, 24.0], [85.3, 25.0], [85.4, 25.0], [85.5, 26.0], [85.6, 26.0], [85.7, 26.0], [85.8, 27.0], [85.9, 27.0], [86.0, 28.0], [86.1, 29.0], [86.2, 30.0], [86.3, 31.0], [86.4, 32.0], [86.5, 33.0], [86.6, 34.0], [86.7, 34.0], [86.8, 35.0], [86.9, 35.0], [87.0, 35.0], [87.1, 36.0], [87.2, 36.0], [87.3, 36.0], [87.4, 36.0], [87.5, 37.0], [87.6, 37.0], [87.7, 37.0], [87.8, 37.0], [87.9, 37.0], [88.0, 38.0], [88.1, 38.0], [88.2, 38.0], [88.3, 38.0], [88.4, 39.0], [88.5, 39.0], [88.6, 40.0], [88.7, 40.0], [88.8, 40.0], [88.9, 41.0], [89.0, 41.0], [89.1, 41.0], [89.2, 42.0], [89.3, 42.0], [89.4, 43.0], [89.5, 43.0], [89.6, 43.0], [89.7, 43.0], [89.8, 44.0], [89.9, 44.0], [90.0, 44.0], [90.1, 45.0], [90.2, 45.0], [90.3, 45.0], [90.4, 46.0], [90.5, 46.0], [90.6, 46.0], [90.7, 47.0], [90.8, 47.0], [90.9, 47.0], [91.0, 47.0], [91.1, 48.0], [91.2, 48.0], [91.3, 48.0], [91.4, 49.0], [91.5, 49.0], [91.6, 49.0], [91.7, 50.0], [91.8, 50.0], [91.9, 50.0], [92.0, 50.0], [92.1, 51.0], [92.2, 51.0], [92.3, 51.0], [92.4, 52.0], [92.5, 52.0], [92.6, 52.0], [92.7, 53.0], [92.8, 53.0], [92.9, 53.0], [93.0, 54.0], [93.1, 54.0], [93.2, 55.0], [93.3, 55.0], [93.4, 55.0], [93.5, 56.0], [93.6, 56.0], [93.7, 56.0], [93.8, 57.0], [93.9, 57.0], [94.0, 58.0], [94.1, 58.0], [94.2, 59.0], [94.3, 59.0], [94.4, 60.0], [94.5, 60.0], [94.6, 61.0], [94.7, 61.0], [94.8, 62.0], [94.9, 62.0], [95.0, 63.0], [95.1, 64.0], [95.2, 64.0], [95.3, 65.0], [95.4, 66.0], [95.5, 67.0], [95.6, 68.0], [95.7, 69.0], [95.8, 70.0], [95.9, 71.0], [96.0, 71.0], [96.1, 72.0], [96.2, 73.0], [96.3, 74.0], [96.4, 75.0], [96.5, 76.0], [96.6, 77.0], [96.7, 78.0], [96.8, 79.0], [96.9, 80.0], [97.0, 81.0], [97.1, 82.0], [97.2, 83.0], [97.3, 85.0], [97.4, 86.0], [97.5, 87.0], [97.6, 88.0], [97.7, 89.0], [97.8, 91.0], [97.9, 92.0], [98.0, 94.0], [98.1, 95.0], [98.2, 97.0], [98.3, 99.0], [98.4, 101.0], [98.5, 103.0], [98.6, 106.0], [98.7, 109.0], [98.8, 111.0], [98.9, 114.0], [99.0, 118.0], [99.1, 121.0], [99.2, 125.0], [99.3, 129.0], [99.4, 134.0], [99.5, 140.0], [99.6, 147.0], [99.7, 157.0], [99.8, 171.0], [99.9, 194.0], [100.0, 533.0]], "isOverall": false, "label": "Get Drink 1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 5.0], [5.8, 5.0], [5.9, 5.0], [6.0, 5.0], [6.1, 5.0], [6.2, 5.0], [6.3, 5.0], [6.4, 5.0], [6.5, 5.0], [6.6, 5.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 6.0], [9.3, 6.0], [9.4, 6.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 6.0], [10.8, 6.0], [10.9, 6.0], [11.0, 6.0], [11.1, 6.0], [11.2, 6.0], [11.3, 6.0], [11.4, 6.0], [11.5, 6.0], [11.6, 6.0], [11.7, 6.0], [11.8, 6.0], [11.9, 6.0], [12.0, 6.0], [12.1, 6.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 7.0], [13.0, 7.0], [13.1, 7.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 7.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 7.0], [17.6, 7.0], [17.7, 7.0], [17.8, 7.0], [17.9, 7.0], [18.0, 7.0], [18.1, 7.0], [18.2, 7.0], [18.3, 7.0], [18.4, 7.0], [18.5, 7.0], [18.6, 7.0], [18.7, 7.0], [18.8, 7.0], [18.9, 7.0], [19.0, 7.0], [19.1, 7.0], [19.2, 7.0], [19.3, 7.0], [19.4, 7.0], [19.5, 7.0], [19.6, 8.0], [19.7, 8.0], [19.8, 8.0], [19.9, 8.0], [20.0, 8.0], [20.1, 8.0], [20.2, 8.0], [20.3, 8.0], [20.4, 8.0], [20.5, 8.0], [20.6, 8.0], [20.7, 8.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 8.0], [21.8, 8.0], [21.9, 8.0], [22.0, 8.0], [22.1, 8.0], [22.2, 8.0], [22.3, 8.0], [22.4, 8.0], [22.5, 8.0], [22.6, 8.0], [22.7, 8.0], [22.8, 8.0], [22.9, 8.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 8.0], [23.5, 8.0], [23.6, 8.0], [23.7, 8.0], [23.8, 8.0], [23.9, 8.0], [24.0, 8.0], [24.1, 8.0], [24.2, 8.0], [24.3, 8.0], [24.4, 8.0], [24.5, 8.0], [24.6, 8.0], [24.7, 8.0], [24.8, 8.0], [24.9, 8.0], [25.0, 8.0], [25.1, 8.0], [25.2, 8.0], [25.3, 8.0], [25.4, 8.0], [25.5, 8.0], [25.6, 8.0], [25.7, 8.0], [25.8, 8.0], [25.9, 8.0], [26.0, 8.0], [26.1, 8.0], [26.2, 8.0], [26.3, 8.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 8.0], [27.2, 8.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 9.0], [29.6, 9.0], [29.7, 9.0], [29.8, 9.0], [29.9, 9.0], [30.0, 9.0], [30.1, 9.0], [30.2, 9.0], [30.3, 9.0], [30.4, 9.0], [30.5, 9.0], [30.6, 9.0], [30.7, 9.0], [30.8, 9.0], [30.9, 9.0], [31.0, 9.0], [31.1, 9.0], [31.2, 9.0], [31.3, 9.0], [31.4, 9.0], [31.5, 9.0], [31.6, 9.0], [31.7, 9.0], [31.8, 9.0], [31.9, 9.0], [32.0, 9.0], [32.1, 9.0], [32.2, 9.0], [32.3, 9.0], [32.4, 9.0], [32.5, 9.0], [32.6, 9.0], [32.7, 9.0], [32.8, 9.0], [32.9, 9.0], [33.0, 9.0], [33.1, 9.0], [33.2, 9.0], [33.3, 9.0], [33.4, 9.0], [33.5, 9.0], [33.6, 9.0], [33.7, 9.0], [33.8, 9.0], [33.9, 9.0], [34.0, 9.0], [34.1, 9.0], [34.2, 9.0], [34.3, 9.0], [34.4, 9.0], [34.5, 9.0], [34.6, 9.0], [34.7, 9.0], [34.8, 9.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 9.0], [38.0, 9.0], [38.1, 9.0], [38.2, 9.0], [38.3, 9.0], [38.4, 9.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 10.0], [42.3, 10.0], [42.4, 10.0], [42.5, 10.0], [42.6, 10.0], [42.7, 10.0], [42.8, 10.0], [42.9, 10.0], [43.0, 10.0], [43.1, 10.0], [43.2, 10.0], [43.3, 10.0], [43.4, 10.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 10.0], [48.1, 10.0], [48.2, 10.0], [48.3, 10.0], [48.4, 10.0], [48.5, 10.0], [48.6, 10.0], [48.7, 10.0], [48.8, 10.0], [48.9, 10.0], [49.0, 10.0], [49.1, 10.0], [49.2, 10.0], [49.3, 10.0], [49.4, 10.0], [49.5, 10.0], [49.6, 10.0], [49.7, 10.0], [49.8, 10.0], [49.9, 10.0], [50.0, 10.0], [50.1, 10.0], [50.2, 10.0], [50.3, 10.0], [50.4, 10.0], [50.5, 10.0], [50.6, 10.0], [50.7, 10.0], [50.8, 10.0], [50.9, 10.0], [51.0, 10.0], [51.1, 10.0], [51.2, 10.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 11.0], [53.9, 11.0], [54.0, 11.0], [54.1, 11.0], [54.2, 11.0], [54.3, 11.0], [54.4, 11.0], [54.5, 11.0], [54.6, 11.0], [54.7, 11.0], [54.8, 11.0], [54.9, 11.0], [55.0, 11.0], [55.1, 11.0], [55.2, 11.0], [55.3, 11.0], [55.4, 11.0], [55.5, 11.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 11.0], [56.0, 11.0], [56.1, 11.0], [56.2, 11.0], [56.3, 11.0], [56.4, 11.0], [56.5, 11.0], [56.6, 11.0], [56.7, 11.0], [56.8, 11.0], [56.9, 11.0], [57.0, 11.0], [57.1, 11.0], [57.2, 11.0], [57.3, 11.0], [57.4, 11.0], [57.5, 11.0], [57.6, 11.0], [57.7, 11.0], [57.8, 11.0], [57.9, 11.0], [58.0, 11.0], [58.1, 11.0], [58.2, 11.0], [58.3, 11.0], [58.4, 11.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 11.0], [59.2, 11.0], [59.3, 11.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 11.0], [60.0, 11.0], [60.1, 11.0], [60.2, 11.0], [60.3, 11.0], [60.4, 11.0], [60.5, 11.0], [60.6, 11.0], [60.7, 11.0], [60.8, 11.0], [60.9, 11.0], [61.0, 11.0], [61.1, 11.0], [61.2, 11.0], [61.3, 11.0], [61.4, 12.0], [61.5, 12.0], [61.6, 12.0], [61.7, 12.0], [61.8, 12.0], [61.9, 12.0], [62.0, 12.0], [62.1, 12.0], [62.2, 12.0], [62.3, 12.0], [62.4, 12.0], [62.5, 12.0], [62.6, 12.0], [62.7, 12.0], [62.8, 12.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 12.0], [63.9, 12.0], [64.0, 12.0], [64.1, 12.0], [64.2, 12.0], [64.3, 12.0], [64.4, 12.0], [64.5, 12.0], [64.6, 12.0], [64.7, 12.0], [64.8, 12.0], [64.9, 12.0], [65.0, 12.0], [65.1, 12.0], [65.2, 12.0], [65.3, 12.0], [65.4, 12.0], [65.5, 12.0], [65.6, 12.0], [65.7, 12.0], [65.8, 12.0], [65.9, 12.0], [66.0, 12.0], [66.1, 12.0], [66.2, 13.0], [66.3, 13.0], [66.4, 13.0], [66.5, 13.0], [66.6, 13.0], [66.7, 13.0], [66.8, 13.0], [66.9, 13.0], [67.0, 13.0], [67.1, 13.0], [67.2, 13.0], [67.3, 13.0], [67.4, 13.0], [67.5, 13.0], [67.6, 13.0], [67.7, 13.0], [67.8, 13.0], [67.9, 13.0], [68.0, 13.0], [68.1, 13.0], [68.2, 13.0], [68.3, 13.0], [68.4, 13.0], [68.5, 13.0], [68.6, 13.0], [68.7, 13.0], [68.8, 13.0], [68.9, 13.0], [69.0, 13.0], [69.1, 13.0], [69.2, 13.0], [69.3, 13.0], [69.4, 13.0], [69.5, 13.0], [69.6, 13.0], [69.7, 14.0], [69.8, 14.0], [69.9, 14.0], [70.0, 14.0], [70.1, 14.0], [70.2, 14.0], [70.3, 14.0], [70.4, 14.0], [70.5, 14.0], [70.6, 14.0], [70.7, 14.0], [70.8, 14.0], [70.9, 14.0], [71.0, 14.0], [71.1, 14.0], [71.2, 14.0], [71.3, 14.0], [71.4, 14.0], [71.5, 14.0], [71.6, 14.0], [71.7, 14.0], [71.8, 14.0], [71.9, 14.0], [72.0, 14.0], [72.1, 14.0], [72.2, 14.0], [72.3, 14.0], [72.4, 14.0], [72.5, 15.0], [72.6, 15.0], [72.7, 15.0], [72.8, 15.0], [72.9, 15.0], [73.0, 15.0], [73.1, 15.0], [73.2, 15.0], [73.3, 15.0], [73.4, 15.0], [73.5, 15.0], [73.6, 15.0], [73.7, 15.0], [73.8, 15.0], [73.9, 15.0], [74.0, 15.0], [74.1, 15.0], [74.2, 15.0], [74.3, 15.0], [74.4, 15.0], [74.5, 15.0], [74.6, 15.0], [74.7, 15.0], [74.8, 16.0], [74.9, 16.0], [75.0, 16.0], [75.1, 16.0], [75.2, 16.0], [75.3, 16.0], [75.4, 16.0], [75.5, 16.0], [75.6, 16.0], [75.7, 16.0], [75.8, 16.0], [75.9, 16.0], [76.0, 16.0], [76.1, 16.0], [76.2, 16.0], [76.3, 16.0], [76.4, 16.0], [76.5, 16.0], [76.6, 16.0], [76.7, 16.0], [76.8, 16.0], [76.9, 16.0], [77.0, 17.0], [77.1, 17.0], [77.2, 17.0], [77.3, 17.0], [77.4, 17.0], [77.5, 17.0], [77.6, 17.0], [77.7, 17.0], [77.8, 17.0], [77.9, 17.0], [78.0, 17.0], [78.1, 17.0], [78.2, 17.0], [78.3, 17.0], [78.4, 17.0], [78.5, 17.0], [78.6, 17.0], [78.7, 17.0], [78.8, 18.0], [78.9, 18.0], [79.0, 18.0], [79.1, 18.0], [79.2, 18.0], [79.3, 18.0], [79.4, 18.0], [79.5, 18.0], [79.6, 18.0], [79.7, 18.0], [79.8, 18.0], [79.9, 18.0], [80.0, 18.0], [80.1, 18.0], [80.2, 18.0], [80.3, 18.0], [80.4, 19.0], [80.5, 19.0], [80.6, 19.0], [80.7, 19.0], [80.8, 19.0], [80.9, 19.0], [81.0, 19.0], [81.1, 19.0], [81.2, 19.0], [81.3, 19.0], [81.4, 19.0], [81.5, 19.0], [81.6, 19.0], [81.7, 19.0], [81.8, 20.0], [81.9, 20.0], [82.0, 20.0], [82.1, 20.0], [82.2, 20.0], [82.3, 20.0], [82.4, 20.0], [82.5, 20.0], [82.6, 20.0], [82.7, 20.0], [82.8, 20.0], [82.9, 21.0], [83.0, 21.0], [83.1, 21.0], [83.2, 21.0], [83.3, 21.0], [83.4, 21.0], [83.5, 21.0], [83.6, 21.0], [83.7, 22.0], [83.8, 22.0], [83.9, 22.0], [84.0, 22.0], [84.1, 22.0], [84.2, 22.0], [84.3, 22.0], [84.4, 23.0], [84.5, 23.0], [84.6, 23.0], [84.7, 23.0], [84.8, 24.0], [84.9, 24.0], [85.0, 24.0], [85.1, 24.0], [85.2, 25.0], [85.3, 25.0], [85.4, 25.0], [85.5, 26.0], [85.6, 26.0], [85.7, 27.0], [85.8, 27.0], [85.9, 28.0], [86.0, 29.0], [86.1, 29.0], [86.2, 30.0], [86.3, 31.0], [86.4, 33.0], [86.5, 34.0], [86.6, 34.0], [86.7, 35.0], [86.8, 35.0], [86.9, 35.0], [87.0, 36.0], [87.1, 36.0], [87.2, 36.0], [87.3, 36.0], [87.4, 36.0], [87.5, 37.0], [87.6, 37.0], [87.7, 37.0], [87.8, 37.0], [87.9, 38.0], [88.0, 38.0], [88.1, 38.0], [88.2, 38.0], [88.3, 39.0], [88.4, 39.0], [88.5, 39.0], [88.6, 40.0], [88.7, 40.0], [88.8, 40.0], [88.9, 41.0], [89.0, 41.0], [89.1, 42.0], [89.2, 42.0], [89.3, 42.0], [89.4, 43.0], [89.5, 43.0], [89.6, 43.0], [89.7, 44.0], [89.8, 44.0], [89.9, 44.0], [90.0, 45.0], [90.1, 45.0], [90.2, 45.0], [90.3, 45.0], [90.4, 46.0], [90.5, 46.0], [90.6, 46.0], [90.7, 47.0], [90.8, 47.0], [90.9, 47.0], [91.0, 48.0], [91.1, 48.0], [91.2, 48.0], [91.3, 48.0], [91.4, 49.0], [91.5, 49.0], [91.6, 49.0], [91.7, 50.0], [91.8, 50.0], [91.9, 50.0], [92.0, 51.0], [92.1, 51.0], [92.2, 51.0], [92.3, 52.0], [92.4, 52.0], [92.5, 52.0], [92.6, 53.0], [92.7, 53.0], [92.8, 53.0], [92.9, 54.0], [93.0, 54.0], [93.1, 54.0], [93.2, 55.0], [93.3, 55.0], [93.4, 55.0], [93.5, 56.0], [93.6, 56.0], [93.7, 57.0], [93.8, 57.0], [93.9, 57.0], [94.0, 58.0], [94.1, 58.0], [94.2, 59.0], [94.3, 59.0], [94.4, 60.0], [94.5, 60.0], [94.6, 61.0], [94.7, 61.0], [94.8, 62.0], [94.9, 63.0], [95.0, 63.0], [95.1, 64.0], [95.2, 65.0], [95.3, 65.0], [95.4, 66.0], [95.5, 67.0], [95.6, 68.0], [95.7, 69.0], [95.8, 70.0], [95.9, 71.0], [96.0, 72.0], [96.1, 72.0], [96.2, 73.0], [96.3, 74.0], [96.4, 75.0], [96.5, 76.0], [96.6, 77.0], [96.7, 78.0], [96.8, 79.0], [96.9, 80.0], [97.0, 81.0], [97.1, 82.0], [97.2, 83.0], [97.3, 84.0], [97.4, 86.0], [97.5, 87.0], [97.6, 88.0], [97.7, 89.0], [97.8, 91.0], [97.9, 92.0], [98.0, 94.0], [98.1, 95.0], [98.2, 97.0], [98.3, 99.0], [98.4, 101.0], [98.5, 103.0], [98.6, 106.0], [98.7, 108.0], [98.8, 111.0], [98.9, 114.0], [99.0, 118.0], [99.1, 121.0], [99.2, 125.0], [99.3, 129.0], [99.4, 134.0], [99.5, 140.0], [99.6, 147.0], [99.7, 157.0], [99.8, 170.0], [99.9, 194.0], [100.0, 568.0]], "isOverall": false, "label": "Get Drink 2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 4080845.0, "series": [{"data": [[0.0, 4080845.0], [300.0, 177.0], [100.0, 65967.0], [200.0, 3340.0], [400.0, 9.0], [500.0, 2.0]], "isOverall": false, "label": "Get Drink 1", "isController": false}, {"data": [[0.0, 4077653.0], [300.0, 206.0], [100.0, 65428.0], [200.0, 3329.0], [400.0, 12.0], [500.0, 3.0]], "isOverall": false, "label": "Get Drink 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8296966.0, "series": [{"data": [[0.0, 8296966.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 5.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 151.61655722326404, "minX": 1.65235268E12, "maxY": 250.0, "series": [{"data": [[1.65235268E12, 151.61655722326404], [1.65235285E12, 250.0], [1.65235298E12, 249.64097655530333], [1.65235281E12, 250.0], [1.65235276E12, 250.0], [1.65235293E12, 250.0], [1.65235272E12, 250.0], [1.65235289E12, 250.0], [1.65235271E12, 250.0], [1.65235284E12, 250.0], [1.6523528E12, 250.0], [1.65235297E12, 250.0], [1.65235279E12, 250.0], [1.65235292E12, 250.0], [1.65235275E12, 250.0], [1.65235288E12, 250.0], [1.6523527E12, 250.0], [1.65235287E12, 250.0], [1.65235283E12, 250.0], [1.65235296E12, 250.0], [1.65235278E12, 250.0], [1.65235295E12, 250.0], [1.65235274E12, 250.0], [1.65235291E12, 250.0], [1.65235286E12, 250.0], [1.65235269E12, 250.0], [1.65235282E12, 250.0], [1.65235294E12, 250.0], [1.65235277E12, 250.0], [1.6523529E12, 250.0], [1.65235273E12, 250.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235298E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.33333333333333337, "minX": 9.0, "maxY": 175.0, "series": [{"data": [[32.0, 59.0], [39.0, 66.0], [38.0, 102.5], [43.0, 49.0], [47.0, 35.0], [48.0, 19.294117647058826], [49.0, 1.0], [50.0, 20.777777777777775], [51.0, 20.0], [52.0, 34.0], [53.0, 5.4], [54.0, 5.5625], [55.0, 4.5], [56.0, 5.923076923076923], [57.0, 3.5], [58.0, 10.5], [59.0, 3.0], [60.0, 14.608695652173912], [61.0, 4.7058823529411775], [63.0, 4.300000000000001], [62.0, 61.0], [64.0, 4.090909090909091], [65.0, 10.333333333333334], [66.0, 6.928571428571429], [67.0, 22.22222222222222], [68.0, 11.583333333333336], [69.0, 48.0], [70.0, 3.7142857142857144], [71.0, 6.222222222222222], [72.0, 3.785714285714286], [74.0, 3.9473684210526314], [76.0, 5.793103448275861], [78.0, 4.266666666666667], [79.0, 1.0], [77.0, 175.0], [80.0, 8.368421052631579], [81.0, 10.5], [82.0, 4.045454545454546], [83.0, 4.2], [84.0, 5.583333333333334], [85.0, 2.0], [86.0, 3.3333333333333335], [87.0, 4.0], [88.0, 2.8000000000000003], [91.0, 26.333333333333332], [94.0, 27.0], [95.0, 26.0], [93.0, 25.0], [92.0, 25.0], [98.0, 9.333333333333332], [99.0, 3.0], [100.0, 9.444444444444445], [101.0, 33.0], [102.0, 10.333333333333334], [103.0, 3.5], [104.0, 3.0], [105.0, 4.0], [106.0, 2.0], [107.0, 3.0], [108.0, 7.222222222222222], [109.0, 3.4], [110.0, 2.7272727272727275], [112.0, 7.25], [113.0, 73.4], [114.0, 11.88888888888889], [116.0, 8.1875], [117.0, 3.0], [118.0, 8.565217391304346], [119.0, 20.0], [120.0, 12.897435897435898], [121.0, 1.0], [122.0, 5.09090909090909], [123.0, 1.0], [124.0, 2.052631578947368], [125.0, 1.75], [126.0, 1.8666666666666665], [127.0, 3.4285714285714284], [128.0, 3.633333333333334], [129.0, 12.6], [130.0, 10.153846153846153], [131.0, 3.8333333333333335], [132.0, 5.812499999999999], [133.0, 3.6], [134.0, 7.533333333333333], [135.0, 16.666666666666664], [136.0, 5.3809523809523805], [137.0, 36.0], [138.0, 23.5], [140.0, 31.4], [141.0, 14.0], [142.0, 10.722222222222221], [143.0, 10.999999999999998], [144.0, 6.75], [145.0, 52.5], [147.0, 11.333333333333334], [148.0, 13.095238095238097], [149.0, 10.285714285714285], [150.0, 12.041666666666668], [152.0, 14.666666666666666], [153.0, 9.6875], [154.0, 8.916666666666668], [155.0, 11.857142857142858], [156.0, 17.571428571428577], [157.0, 23.5], [158.0, 25.666666666666668], [159.0, 22.833333333333332], [160.0, 13.0], [161.0, 58.33333333333333], [162.0, 27.09090909090909], [163.0, 26.0], [164.0, 15.249999999999996], [165.0, 8.75], [166.0, 16.393939393939394], [167.0, 28.25], [168.0, 51.4], [172.0, 15.214285714285714], [173.0, 28.4], [174.0, 15.611111111111112], [175.0, 7.75], [176.0, 6.642857142857142], [177.0, 6.0], [178.0, 14.06451612903226], [180.0, 27.8], [179.0, 21.25], [181.0, 59.0], [182.0, 22.230769230769234], [183.0, 16.5], [184.0, 24.69230769230769], [186.0, 16.61764705882353], [187.0, 14.0], [188.0, 8.799999999999999], [190.0, 16.833333333333332], [193.0, 84.0], [200.0, 40.6], [201.0, 1.5], [202.0, 31.083333333333332], [203.0, 14.727272727272728], [204.0, 18.21428571428571], [205.0, 27.111111111111114], [206.0, 30.357142857142854], [207.0, 12.249999999999998], [208.0, 38.0], [209.0, 45.5], [210.0, 45.52173913043478], [211.0, 45.0], [212.0, 41.68], [213.0, 7.0], [214.0, 22.52173913043478], [215.0, 30.551724137931043], [216.0, 13.0], [217.0, 67.57142857142857], [219.0, 58.0], [220.0, 42.95454545454546], [222.0, 41.63636363636363], [223.0, 67.0], [224.0, 43.5], [225.0, 16.0], [226.0, 12.307692307692308], [228.0, 25.77777777777778], [229.0, 20.785714285714285], [230.0, 17.76923076923077], [231.0, 17.782608695652176], [232.0, 17.400000000000002], [234.0, 14.041666666666664], [235.0, 25.4375], [236.0, 29.307692307692307], [237.0, 31.25], [238.0, 21.92], [239.0, 31.0], [240.0, 59.75], [247.0, 59.0], [245.0, 60.0], [242.0, 61.0], [248.0, 52.18181818181819], [250.0, 35.28571428571429], [251.0, 38.20833333333334], [252.0, 27.615384615384613], [253.0, 27.5], [254.0, 18.045454545454543], [255.0, 26.14285714285714], [257.0, 30.25], [256.0, 29.20588235294117], [258.0, 28.437499999999996], [260.0, 31.166666666666668], [261.0, 9.333333333333334], [262.0, 25.571428571428573], [263.0, 59.0], [267.0, 10.833333333333334], [271.0, 8.1875], [269.0, 10.0], [270.0, 13.299999999999999], [268.0, 10.238095238095239], [273.0, 12.714285714285714], [272.0, 8.31578947368421], [274.0, 9.772727272727272], [275.0, 6.5], [276.0, 10.863636363636363], [277.0, 16.357142857142858], [278.0, 16.833333333333332], [279.0, 5.5], [280.0, 8.700000000000001], [285.0, 65.0], [281.0, 15.636363636363637], [282.0, 9.25], [283.0, 66.0], [289.0, 26.250000000000004], [288.0, 21.0], [290.0, 13.263157894736842], [291.0, 21.11111111111111], [292.0, 12.83333333333333], [293.0, 3.0], [294.0, 23.523809523809526], [295.0, 17.72727272727273], [296.0, 10.833333333333332], [300.0, 10.931034482758621], [301.0, 20.875], [297.0, 17.333333333333332], [298.0, 14.17948717948718], [299.0, 3.0], [305.0, 32.75], [304.0, 41.83333333333333], [306.0, 26.133333333333333], [307.0, 24.0], [308.0, 21.700000000000006], [309.0, 33.8], [310.0, 22.333333333333336], [311.0, 36.666666666666664], [312.0, 31.342105263157894], [316.0, 16.68], [318.0, 24.0], [313.0, 39.375], [314.0, 23.210526315789473], [315.0, 54.0], [333.0, 61.0], [330.0, 68.0], [328.0, 63.0], [324.0, 63.0], [351.0, 8.0], [348.0, 41.0], [344.0, 12.0], [343.0, 15.0], [340.0, 42.5], [339.0, 10.0], [338.0, 11.0], [354.0, 101.0], [355.0, 125.76923076923079], [364.0, 56.47826086956522], [365.0, 58.66666666666667], [366.0, 19.840000000000003], [367.0, 10.75], [356.0, 107.31578947368422], [357.0, 79.09090909090908], [358.0, 69.67999999999999], [359.0, 24.5], [353.0, 64.0], [352.0, 168.0], [360.0, 52.785714285714285], [361.0, 36.400000000000006], [362.0, 22.379310344827587], [363.0, 20.22222222222222], [375.0, 5.666666666666667], [371.0, 79.4], [372.0, 67.12000000000002], [373.0, 76.5], [374.0, 7.478260869565215], [376.0, 48.441860465116285], [377.0, 12.333333333333334], [378.0, 58.61904761904762], [379.0, 44.25], [380.0, 82.15625], [381.0, 49.0], [382.0, 38.92857142857144], [383.0, 28.8], [397.0, 29.692307692307693], [384.0, 28.71428571428571], [391.0, 119.77777777777779], [392.0, 43.611111111111114], [394.0, 41.73684210526316], [395.0, 25.11111111111111], [396.0, 23.315789473684212], [387.0, 65.0], [398.0, 16.200000000000006], [399.0, 4.0], [401.0, 3.6666666666666665], [400.0, 15.875], [402.0, 4.000000000000001], [403.0, 21.0], [412.0, 40.30232558139535], [413.0, 34.666666666666664], [414.0, 20.89285714285714], [415.0, 25.872340425531913], [405.0, 64.71428571428571], [404.0, 14.0], [406.0, 52.375], [407.0, 42.75], [408.0, 53.32075471698114], [409.0, 38.23076923076923], [410.0, 36.625], [411.0, 96.0], [429.0, 22.727272727272723], [416.0, 10.23076923076923], [423.0, 9.0], [422.0, 10.666666666666666], [421.0, 5.0], [420.0, 12.0], [417.0, 10.7], [424.0, 38.75], [425.0, 13.5], [426.0, 52.00000000000001], [427.0, 27.18181818181818], [428.0, 22.222222222222218], [418.0, 25.2], [430.0, 13.850000000000001], [431.0, 5.25], [433.0, 16.0], [432.0, 11.787878787878785], [434.0, 20.362068965517246], [435.0, 8.5], [436.0, 24.88888888888889], [437.0, 37.15384615384615], [438.0, 81.31034482758619], [439.0, 47.57575757575758], [440.0, 22.15217391304348], [443.0, 17.75], [441.0, 19.5], [444.0, 18.0], [447.0, 80.28571428571429], [449.0, 24.416666666666668], [448.0, 36.710526315789465], [450.0, 20.357142857142858], [451.0, 28.666666666666664], [452.0, 14.900000000000002], [453.0, 3.999999999999999], [454.0, 6.032258064516129], [455.0, 5.0], [456.0, 8.476190476190478], [462.0, 30.84210526315789], [463.0, 11.0], [460.0, 40.92156862745099], [461.0, 33.03846153846153], [457.0, 10.5], [458.0, 6.8999999999999995], [459.0, 28.0], [466.0, 70.35135135135135], [465.0, 63.5], [464.0, 25.333333333333336], [467.0, 66.08333333333334], [476.0, 22.242424242424246], [478.0, 44.756097560975604], [477.0, 14.666666666666666], [479.0, 16.0], [468.0, 13.0], [469.0, 43.0], [470.0, 46.5], [471.0, 52.78947368421053], [472.0, 24.759999999999998], [473.0, 28.076923076923077], [474.0, 37.64285714285714], [475.0, 30.357142857142858], [481.0, 25.833333333333332], [480.0, 35.42857142857143], [482.0, 22.25000000000001], [483.0, 5.4375], [484.0, 29.499999999999996], [485.0, 26.09090909090909], [486.0, 17.162790697674417], [487.0, 13.166666666666666], [488.0, 50.6], [494.0, 53.00000000000001], [495.0, 22.444444444444443], [492.0, 42.41025641025641], [493.0, 38.58333333333333], [489.0, 74.33333333333334], [491.0, 55.07692307692307], [490.0, 14.736842105263158], [496.0, 37.6], [497.0, 27.27777777777778], [498.0, 13.428571428571429], [499.0, 33.66666666666667], [500.0, 17.96612141867461]], "isOverall": false, "label": "Get Drink 1", "isController": false}, {"data": [[499.77172255766334, 17.976624083807916]], "isOverall": false, "label": "Get Drink 1-Aggregated", "isController": false}, {"data": [[9.0, 45.0], [11.0, 36.0], [16.0, 140.0], [17.0, 35.0], [21.0, 35.5], [23.0, 25.5], [24.0, 37.0], [26.0, 52.0], [27.0, 36.0], [38.0, 96.75], [45.0, 99.0], [47.0, 20.6], [46.0, 7.0], [48.0, 28.562499999999996], [49.0, 37.0], [50.0, 11.750000000000002], [53.0, 5.0], [54.0, 8.692307692307693], [55.0, 11.0], [56.0, 5.333333333333334], [57.0, 1.0], [58.0, 6.666666666666666], [60.0, 10.521739130434781], [61.0, 4.357142857142858], [62.0, 17.625], [63.0, 12.875], [64.0, 3.5454545454545454], [65.0, 9.571428571428571], [66.0, 4.999999999999999], [67.0, 29.5], [68.0, 12.391304347826088], [69.0, 3.0], [70.0, 3.571428571428571], [71.0, 2.6], [72.0, 4.2727272727272725], [73.0, 4.0], [74.0, 9.4375], [75.0, 33.0], [76.0, 5.636363636363637], [78.0, 3.2000000000000006], [79.0, 17.666666666666668], [77.0, 42.625], [80.0, 4.1818181818181825], [81.0, 5.0], [82.0, 3.625], [83.0, 3.0], [84.0, 4.062499999999999], [86.0, 2.857142857142857], [87.0, 3.0], [88.0, 3.3333333333333335], [89.0, 17.0], [91.0, 27.0], [94.0, 27.8], [95.0, 14.0], [93.0, 26.5], [92.0, 25.8], [97.0, 16.5], [98.0, 16.5], [99.0, 12.75], [100.0, 7.588235294117645], [101.0, 7.4], [102.0, 2.454545454545454], [103.0, 6.866666666666667], [104.0, 10.6], [105.0, 8.5], [106.0, 2.0], [108.0, 2.0], [109.0, 8.571428571428571], [110.0, 2.923076923076923], [112.0, 4.947368421052631], [114.0, 19.66666666666667], [116.0, 6.045454545454545], [117.0, 11.4], [118.0, 3.3529411764705888], [119.0, 32.333333333333336], [120.0, 15.73529411764706], [121.0, 2.5], [122.0, 2.2], [123.0, 1.0], [124.0, 1.6923076923076925], [125.0, 16.2], [126.0, 2.3333333333333335], [127.0, 2.3333333333333335], [128.0, 3.6363636363636367], [129.0, 2.5], [130.0, 7.111111111111111], [131.0, 3.5], [132.0, 4.000000000000001], [133.0, 15.000000000000002], [134.0, 9.785714285714285], [135.0, 3.25], [136.0, 6.2857142857142865], [137.0, 10.666666666666668], [138.0, 6.8], [140.0, 26.666666666666668], [142.0, 10.333333333333332], [143.0, 9.399999999999999], [144.0, 18.428571428571427], [145.0, 13.75], [146.0, 23.5], [147.0, 5.0], [148.0, 10.263157894736842], [149.0, 5.120000000000001], [150.0, 9.785714285714283], [151.0, 5.0], [152.0, 28.63636363636364], [153.0, 12.777777777777779], [154.0, 10.285714285714285], [155.0, 24.0], [156.0, 20.454545454545453], [157.0, 4.0], [158.0, 24.035714285714285], [159.0, 37.333333333333336], [160.0, 9.0], [161.0, 16.22222222222222], [162.0, 20.166666666666668], [163.0, 14.333333333333332], [164.0, 16.888888888888893], [165.0, 8.8], [166.0, 14.15], [167.0, 28.0], [168.0, 17.631578947368418], [172.0, 15.272727272727272], [173.0, 8.833333333333332], [174.0, 21.157894736842103], [175.0, 3.3333333333333335], [170.0, 0.33333333333333337], [176.0, 11.457142857142859], [177.0, 21.0], [178.0, 16.625], [180.0, 18.555555555555557], [179.0, 6.5], [181.0, 22.0], [182.0, 15.541666666666666], [183.0, 16.3], [184.0, 13.857142857142854], [185.0, 28.0], [186.0, 10.935483870967742], [187.0, 7.0], [188.0, 16.642857142857142], [190.0, 21.0], [198.0, 49.333333333333336], [197.0, 25.0], [195.0, 21.666666666666664], [193.0, 50.0], [192.0, 1.0], [200.0, 33.36363636363636], [201.0, 1.4], [202.0, 7.866666666666667], [203.0, 10.166666666666666], [204.0, 2.375], [205.0, 29.0], [206.0, 31.615384615384613], [207.0, 23.5], [208.0, 26.928571428571423], [209.0, 55.142857142857146], [210.0, 42.260869565217384], [211.0, 49.5], [212.0, 37.48], [213.0, 16.666666666666668], [214.0, 25.333333333333336], [215.0, 22.39130434782609], [216.0, 37.333333333333336], [217.0, 33.666666666666664], [218.0, 16.0], [219.0, 12.5], [220.0, 40.50000000000001], [221.0, 25.0], [222.0, 44.0], [223.0, 21.0], [224.0, 30.0], [225.0, 13.0], [226.0, 12.9], [227.0, 14.5], [228.0, 7.875000000000001], [229.0, 21.93333333333333], [230.0, 19.099999999999998], [231.0, 19.291666666666664], [232.0, 24.545454545454543], [233.0, 5.0], [234.0, 13.103448275862071], [235.0, 17.352941176470587], [236.0, 18.0], [237.0, 26.571428571428573], [238.0, 21.315789473684212], [239.0, 7.0], [240.0, 68.5], [247.0, 45.5], [246.0, 19.0], [245.0, 60.66666666666667], [244.0, 68.0], [242.0, 30.5], [248.0, 42.4375], [250.0, 33.38095238095238], [251.0, 44.66666666666667], [252.0, 31.0], [253.0, 31.0], [254.0, 15.608695652173914], [255.0, 17.450000000000003], [257.0, 15.769230769230768], [256.0, 29.70588235294117], [258.0, 22.42857142857143], [259.0, 3.0], [260.0, 18.631578947368418], [261.0, 59.166666666666664], [262.0, 15.071428571428571], [263.0, 10.692307692307692], [268.0, 10.166666666666668], [269.0, 12.833333333333332], [270.0, 13.153846153846153], [271.0, 18.142857142857142], [273.0, 16.666666666666668], [272.0, 9.823529411764707], [274.0, 7.333333333333334], [275.0, 6.5], [276.0, 10.555555555555557], [277.0, 7.636363636363636], [278.0, 10.818181818181817], [279.0, 5.0], [280.0, 11.843749999999998], [285.0, 5.9230769230769225], [281.0, 7.4], [282.0, 17.285714285714285], [283.0, 5.0], [289.0, 21.615384615384613], [288.0, 19.0], [290.0, 14.466666666666665], [291.0, 14.428571428571429], [292.0, 11.499999999999998], [293.0, 6.0], [294.0, 17.17857142857143], [295.0, 11.666666666666666], [296.0, 11.625], [302.0, 47.25], [303.0, 5.0], [300.0, 18.437500000000004], [301.0, 22.90909090909091], [297.0, 23.0], [298.0, 14.62068965517241], [299.0, 7.0], [305.0, 33.125], [304.0, 48.0], [306.0, 31.85], [307.0, 24.625000000000004], [308.0, 16.678571428571427], [309.0, 15.0], [310.0, 20.0], [311.0, 25.5], [312.0, 31.374999999999996], [316.0, 16.14705882352941], [318.0, 7.0], [319.0, 1.0], [313.0, 41.4], [314.0, 27.387096774193555], [315.0, 17.5], [334.0, 6.0], [335.0, 4.0], [333.0, 4.142857142857143], [332.0, 11.5], [331.0, 3.0], [330.0, 5.2], [328.0, 5.0], [327.0, 23.111111111111114], [320.0, 4.0], [323.0, 6.0], [322.0, 19.0], [325.0, 6.4], [324.0, 6.2727272727272725], [344.0, 4.0], [348.0, 8.142857142857144], [347.0, 25.0], [346.0, 11.25], [345.0, 13.0], [343.0, 7.0], [342.0, 26.0], [340.0, 17.190476190476193], [339.0, 7.2], [338.0, 14.125], [337.0, 4.0], [336.0, 6.8], [359.0, 29.25], [355.0, 87.44444444444444], [354.0, 8.5], [353.0, 4.5], [352.0, 2.0], [364.0, 57.333333333333314], [365.0, 44.333333333333336], [366.0, 10.000000000000002], [367.0, 10.799999999999999], [356.0, 94.0], [357.0, 59.333333333333336], [358.0, 44.199999999999996], [360.0, 54.599999999999994], [361.0, 20.666666666666668], [362.0, 36.823529411764696], [363.0, 10.75], [375.0, 6.0], [371.0, 98.64285714285715], [372.0, 87.36842105263158], [373.0, 13.11111111111111], [374.0, 10.642857142857144], [376.0, 29.486486486486502], [378.0, 57.6086956521739], [377.0, 25.0], [379.0, 12.714285714285714], [380.0, 78.21052631578947], [381.0, 54.5], [382.0, 59.39024390243904], [383.0, 10.0], [397.0, 19.470588235294116], [384.0, 22.75], [391.0, 88.18181818181819], [389.0, 19.0], [392.0, 71.70588235294117], [394.0, 42.25000000000001], [396.0, 34.13157894736841], [398.0, 26.027777777777775], [399.0, 13.0], [395.0, 40.0], [412.0, 30.119047619047617], [401.0, 19.2], [400.0, 20.72727272727273], [402.0, 5.0], [403.0, 9.5], [413.0, 46.25], [414.0, 31.34545454545454], [415.0, 18.45945945945946], [405.0, 47.4], [404.0, 11.5], [406.0, 35.125], [408.0, 53.888888888888886], [409.0, 32.78947368421053], [410.0, 41.849999999999994], [411.0, 5.0], [429.0, 28.076923076923077], [416.0, 15.5], [423.0, 26.28571428571429], [422.0, 9.0], [421.0, 19.25], [420.0, 26.2], [417.0, 10.285714285714286], [426.0, 55.533333333333346], [427.0, 22.42857142857143], [428.0, 23.777777777777775], [419.0, 5.0], [418.0, 13.928571428571429], [430.0, 20.866666666666667], [431.0, 24.0], [425.0, 13.0], [424.0, 18.333333333333332], [433.0, 13.0], [432.0, 17.612903225806456], [434.0, 17.642857142857135], [435.0, 20.0], [436.0, 22.31818181818182], [437.0, 23.400000000000002], [438.0, 44.54838709677418], [439.0, 37.440000000000005], [440.0, 19.538461538461544], [443.0, 13.25], [441.0, 16.900000000000002], [447.0, 65.42857142857143], [444.0, 13.5], [449.0, 22.46666666666667], [448.0, 47.11538461538463], [450.0, 20.333333333333332], [451.0, 14.166666666666668], [452.0, 16.256410256410255], [453.0, 8.3], [454.0, 5.461538461538463], [455.0, 3.0], [456.0, 6.25], [462.0, 25.61111111111111], [463.0, 4.0], [460.0, 28.928571428571438], [461.0, 34.21739130434783], [457.0, 15.625], [458.0, 5.416666666666667], [459.0, 36.0], [465.0, 40.0], [464.0, 11.666666666666666], [466.0, 83.51724137931036], [467.0, 68.33333333333333], [468.0, 53.25], [469.0, 88.6], [470.0, 13.0], [471.0, 70.64999999999999], [472.0, 29.181818181818183], [479.0, 14.0], [476.0, 25.500000000000007], [477.0, 13.5], [478.0, 37.459999999999994], [473.0, 17.357142857142854], [474.0, 24.555555555555557], [475.0, 4.333333333333333], [481.0, 37.05882352941177], [480.0, 34.47826086956522], [482.0, 38.11764705882352], [483.0, 16.083333333333332], [484.0, 24.294117647058826], [485.0, 55.0], [486.0, 16.11290322580646], [487.0, 19.909090909090907], [488.0, 24.666666666666668], [494.0, 54.95121951219513], [495.0, 35.75555555555556], [492.0, 35.28571428571429], [493.0, 39.42857142857142], [489.0, 40.7], [490.0, 28.19354838709677], [491.0, 57.63157894736842], [496.0, 23.200000000000003], [497.0, 21.918367346938776], [498.0, 16.37931034482759], [499.0, 33.166666666666664], [500.0, 17.98345221477781]], "isOverall": false, "label": "Get Drink 2", "isController": false}, {"data": [[499.7623133092956, 17.992305801987104]], "isOverall": false, "label": "Get Drink 2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 78457.6, "minX": 1.65235268E12, "maxY": 3542394.8, "series": [{"data": [[1.65235268E12, 78457.6], [1.65235285E12, 2536936.8], [1.65235298E12, 2297184.8], [1.65235281E12, 2549697.2], [1.65235276E12, 2566846.0], [1.65235293E12, 2511002.0], [1.65235272E12, 2543018.0], [1.65235289E12, 2526016.4], [1.65235271E12, 2502492.0], [1.65235284E12, 2508757.2], [1.6523528E12, 2562669.2], [1.65235297E12, 2604547.6], [1.65235279E12, 2546762.4], [1.65235292E12, 2593995.2], [1.65235275E12, 2586175.2], [1.65235288E12, 2513486.0], [1.6523527E12, 2581409.6], [1.65235287E12, 2531380.0], [1.65235283E12, 2499778.0], [1.65235296E12, 2625266.0], [1.65235278E12, 2526080.8], [1.65235295E12, 2530349.6], [1.65235274E12, 2540276.4], [1.65235291E12, 2563598.4], [1.65235286E12, 2532060.8], [1.65235269E12, 2628228.4], [1.65235282E12, 2525206.8], [1.65235294E12, 2575558.4], [1.65235277E12, 2572936.4], [1.6523529E12, 2536421.6], [1.65235273E12, 2535538.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65235268E12, 105747.2], [1.65235285E12, 3419349.6], [1.65235298E12, 3096205.6], [1.65235281E12, 3436548.4], [1.65235276E12, 3459662.0], [1.65235293E12, 3384394.0], [1.65235272E12, 3427546.0], [1.65235289E12, 3404630.8], [1.65235271E12, 3372924.0], [1.65235284E12, 3381368.4], [1.6523528E12, 3454032.4], [1.65235297E12, 3510477.2], [1.65235279E12, 3432592.8], [1.65235292E12, 3496254.4], [1.65235275E12, 3485714.4], [1.65235288E12, 3387742.0], [1.6523527E12, 3479291.2], [1.65235287E12, 3411860.0], [1.65235283E12, 3369266.0], [1.65235296E12, 3538402.0], [1.65235278E12, 3404717.6], [1.65235295E12, 3410471.2], [1.65235274E12, 3423850.8], [1.65235291E12, 3455284.8], [1.65235286E12, 3412777.6], [1.65235269E12, 3542394.8], [1.65235282E12, 3403539.6], [1.65235294E12, 3471404.8], [1.65235277E12, 3467870.8], [1.6523529E12, 3418655.2], [1.65235273E12, 3417464.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235298E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 17.324952737064205, "minX": 1.65235268E12, "maxY": 26.660269192422735, "series": [{"data": [[1.65235268E12, 25.982949512843266], [1.65235285E12, 18.12901982178574], [1.65235298E12, 18.022779408697545], [1.65235281E12, 17.897364021560744], [1.65235276E12, 17.86094663965119], [1.65235293E12, 18.26929558476561], [1.65235272E12, 18.069249387654583], [1.65235289E12, 18.144257590876006], [1.65235271E12, 18.30704699219118], [1.65235284E12, 18.21838568298065], [1.6523528E12, 17.938989960099537], [1.65235297E12, 17.62116767165484], [1.65235279E12, 17.98068225263102], [1.65235292E12, 17.703456804161743], [1.65235275E12, 17.673945070352175], [1.65235288E12, 18.196979098986443], [1.6523527E12, 17.763881659167705], [1.65235287E12, 18.11727314333882], [1.65235283E12, 18.393509187688533], [1.65235296E12, 17.447523531184643], [1.65235278E12, 18.092199044840434], [1.65235295E12, 18.150513511545245], [1.65235274E12, 18.059341550672944], [1.65235291E12, 17.893140561096597], [1.65235286E12, 18.10906500134491], [1.65235269E12, 17.324952737064205], [1.65235282E12, 18.105340836386812], [1.65235294E12, 17.768561567643207], [1.65235277E12, 17.765457281629182], [1.6523529E12, 18.022669697013505], [1.65235273E12, 18.09307257133321]], "isOverall": false, "label": "Get Drink 1", "isController": false}, {"data": [[1.65235268E12, 26.660269192422735], [1.65235285E12, 18.023054838406743], [1.65235298E12, 18.015365541513674], [1.65235281E12, 17.958776893668585], [1.65235276E12, 17.89390089857322], [1.65235293E12, 18.27891655002113], [1.65235272E12, 18.012042970358475], [1.65235289E12, 18.152734875859693], [1.65235271E12, 18.342748434291714], [1.65235284E12, 18.37472291978112], [1.6523528E12, 17.828989656777036], [1.65235297E12, 17.616865054150466], [1.65235279E12, 18.032519736889792], [1.65235292E12, 17.62936820344348], [1.65235275E12, 17.674585167746763], [1.65235288E12, 18.297953400966207], [1.6523527E12, 17.75054328851661], [1.65235287E12, 18.142824934362316], [1.65235283E12, 18.27438317359206], [1.65235296E12, 17.435341202198433], [1.65235278E12, 18.222053276411348], [1.65235295E12, 18.095986874582902], [1.65235274E12, 18.058340276017304], [1.65235291E12, 17.921296362774694], [1.65235286E12, 18.08686525317232], [1.65235269E12, 17.450403990725505], [1.65235282E12, 18.18346660824486], [1.65235294E12, 17.839030604941286], [1.65235277E12, 17.868318776979557], [1.6523529E12, 18.086440308274245], [1.65235273E12, 18.070513331834576]], "isOverall": false, "label": "Get Drink 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235298E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 17.323159884754972, "minX": 1.65235268E12, "maxY": 26.63085742771683, "series": [{"data": [[1.65235268E12, 25.94264836138177], [1.65235285E12, 18.127274049827335], [1.65235298E12, 18.021263455090942], [1.65235281E12, 17.895713832761288], [1.65235276E12, 17.85930709585952], [1.65235293E12, 18.267720285458825], [1.65235272E12, 18.06771308897513], [1.65235289E12, 18.142465933009742], [1.65235271E12, 18.305496991823706], [1.65235284E12, 18.216530314097856], [1.6523528E12, 17.93740547080958], [1.65235297E12, 17.619562989092778], [1.65235279E12, 17.979023148114845], [1.65235292E12, 17.701715609630988], [1.65235275E12, 17.67225832164978], [1.65235288E12, 18.195205104432244], [1.6523527E12, 17.762327170045236], [1.65235287E12, 18.115471511699624], [1.65235283E12, 18.39184809491106], [1.65235296E12, 17.445918574742844], [1.65235278E12, 18.09060227322212], [1.65235295E12, 18.148881928764098], [1.65235274E12, 18.057697599976777], [1.65235291E12, 17.891440051661014], [1.65235286E12, 18.107240223626167], [1.65235269E12, 17.323159884754972], [1.65235282E12, 18.103385098586738], [1.65235294E12, 17.766921475227786], [1.65235277E12, 17.763923856528475], [1.6523529E12, 18.02102665064612], [1.65235273E12, 18.09159107909294]], "isOverall": false, "label": "Get Drink 1", "isController": false}, {"data": [[1.65235268E12, 26.63085742771683], [1.65235285E12, 18.021355375725935], [1.65235298E12, 18.01361382178873], [1.65235281E12, 17.957223077423336], [1.65235276E12, 17.891963080986525], [1.65235293E12, 18.277318930327787], [1.65235272E12, 18.01061977590065], [1.65235289E12, 18.151015561254148], [1.65235271E12, 18.3411440893133], [1.65235284E12, 18.372992319078342], [1.6523528E12, 17.827200171790487], [1.65235297E12, 17.61519888168784], [1.65235279E12, 18.0308264528595], [1.65235292E12, 17.627661984594262], [1.65235275E12, 17.672984871869335], [1.65235288E12, 18.296243007942465], [1.6523527E12, 17.7488688911211], [1.65235287E12, 18.141275809653916], [1.65235283E12, 18.272629199630003], [1.65235296E12, 17.43375014018167], [1.65235278E12, 18.220342700078625], [1.65235295E12, 18.09427360106871], [1.65235274E12, 18.05676096642158], [1.65235291E12, 17.919709653795945], [1.65235286E12, 18.085085674025134], [1.65235269E12, 17.44857725005278], [1.65235282E12, 18.181677438200598], [1.65235294E12, 17.837427352629444], [1.65235277E12, 17.86659782873706], [1.6523529E12, 18.08490620910318], [1.65235273E12, 18.068983270849994]], "isOverall": false, "label": "Get Drink 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235298E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65235268E12, "maxY": 0.20217006200177187, "series": [{"data": [[1.65235268E12, 0.20217006200177187], [1.65235285E12, 0.0], [1.65235298E12, 0.0], [1.65235281E12, 7.20606462398753E-6], [1.65235276E12, 0.0], [1.65235293E12, 7.326973520317676E-6], [1.65235272E12, 0.0], [1.65235289E12, 0.0], [1.65235271E12, 0.0], [1.65235284E12, 0.0], [1.6523528E12, 3.7451565043285137E-4], [1.65235297E12, 0.0], [1.65235279E12, 0.0], [1.65235292E12, 2.771697415925172E-4], [1.65235275E12, 0.0], [1.65235288E12, 0.0], [1.6523527E12, 0.0], [1.65235287E12, 1.4529287411098833E-5], [1.65235283E12, 0.0], [1.65235296E12, 0.0], [1.65235278E12, 0.0], [1.65235295E12, 0.0], [1.65235274E12, 6.010921046914148E-4], [1.65235291E12, 0.0], [1.65235286E12, 3.99851691372653E-4], [1.65235269E12, 1.395215805004633E-5], [1.65235282E12, 0.0], [1.65235294E12, 0.0], [1.65235277E12, 0.0], [1.6523529E12, 0.0], [1.65235273E12, 0.0]], "isOverall": false, "label": "Get Drink 1", "isController": false}, {"data": [[1.65235268E12, 0.1582751744765702], [1.65235285E12, 0.0], [1.65235298E12, 0.0], [1.65235281E12, 5.7816418417419795E-5], [1.65235276E12, 0.0], [1.65235293E12, 2.931412281151729E-5], [1.65235272E12, 0.0], [1.65235289E12, 0.0], [1.65235271E12, 0.0], [1.65235284E12, 0.0], [1.6523528E12, 4.080025768583811E-4], [1.65235297E12, 0.0], [1.65235279E12, 0.0], [1.65235292E12, 2.6903035795197076E-4], [1.65235275E12, 2.1337278359021392E-5], [1.65235288E12, 0.0], [1.6523527E12, 0.0], [1.65235287E12, 2.1818657861626346E-5], [1.65235283E12, 0.0], [1.65235296E12, 0.0], [1.65235278E12, 0.0], [1.65235295E12, 0.0], [1.65235274E12, 4.346723657043509E-4], [1.65235291E12, 0.0], [1.65235286E12, 3.0507071103266477E-4], [1.65235269E12, 2.8103702662825652E-5], [1.65235282E12, 0.0], [1.65235294E12, 0.0], [1.65235277E12, 0.0], [1.6523529E12, 0.0], [1.65235273E12, 0.0]], "isOverall": false, "label": "Get Drink 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235298E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65235268E12, "maxY": 568.0, "series": [{"data": [[1.65235268E12, 215.0], [1.65235285E12, 416.0], [1.65235298E12, 394.0], [1.65235281E12, 408.0], [1.65235276E12, 449.0], [1.65235293E12, 423.0], [1.65235272E12, 348.0], [1.65235289E12, 394.0], [1.65235271E12, 360.0], [1.65235284E12, 373.0], [1.6523528E12, 386.0], [1.65235297E12, 533.0], [1.65235279E12, 508.0], [1.65235292E12, 413.0], [1.65235275E12, 387.0], [1.65235288E12, 375.0], [1.6523527E12, 345.0], [1.65235287E12, 361.0], [1.65235283E12, 432.0], [1.65235296E12, 395.0], [1.65235278E12, 416.0], [1.65235295E12, 382.0], [1.65235274E12, 452.0], [1.65235291E12, 356.0], [1.65235286E12, 366.0], [1.65235269E12, 568.0], [1.65235282E12, 366.0], [1.65235294E12, 348.0], [1.65235277E12, 375.0], [1.6523529E12, 470.0], [1.65235273E12, 358.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65235268E12, 69.0], [1.65235285E12, 46.0], [1.65235298E12, 46.0], [1.65235281E12, 39.0], [1.65235276E12, 43.0], [1.65235293E12, 38.0], [1.65235272E12, 45.0], [1.65235289E12, 45.0], [1.65235271E12, 47.0], [1.65235284E12, 44.0], [1.6523528E12, 47.0], [1.65235297E12, 44.0], [1.65235279E12, 44.0], [1.65235292E12, 47.0], [1.65235275E12, 37.0], [1.65235288E12, 45.0], [1.6523527E12, 45.0], [1.65235287E12, 37.0], [1.65235283E12, 44.0], [1.65235296E12, 43.0], [1.65235278E12, 45.0], [1.65235295E12, 46.0], [1.65235274E12, 51.0], [1.65235291E12, 44.0], [1.65235286E12, 48.0], [1.65235269E12, 42.0], [1.65235282E12, 46.0], [1.65235294E12, 45.0], [1.65235277E12, 44.0], [1.6523529E12, 46.900000000001455], [1.65235273E12, 43.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65235268E12, 155.0], [1.65235285E12, 107.9900000000016], [1.65235298E12, 125.0], [1.65235281E12, 127.0], [1.65235276E12, 112.9900000000016], [1.65235293E12, 140.0], [1.65235272E12, 116.0], [1.65235289E12, 118.0], [1.65235271E12, 113.0], [1.65235284E12, 125.0], [1.6523528E12, 124.0], [1.65235297E12, 111.0], [1.65235279E12, 132.0], [1.65235292E12, 117.0], [1.65235275E12, 124.0], [1.65235288E12, 118.0], [1.6523527E12, 112.0], [1.65235287E12, 121.9900000000016], [1.65235283E12, 110.0], [1.65235296E12, 123.0], [1.65235278E12, 116.0], [1.65235295E12, 113.0], [1.65235274E12, 140.0], [1.65235291E12, 112.9900000000016], [1.65235286E12, 125.9900000000016], [1.65235269E12, 105.0], [1.65235282E12, 124.0], [1.65235294E12, 119.9900000000016], [1.65235277E12, 124.0], [1.6523529E12, 117.0], [1.65235273E12, 111.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65235268E12, 98.0], [1.65235285E12, 62.0], [1.65235298E12, 63.0], [1.65235281E12, 67.0], [1.65235276E12, 59.0], [1.65235293E12, 66.0], [1.65235272E12, 64.0], [1.65235289E12, 64.0], [1.65235271E12, 65.0], [1.65235284E12, 69.0], [1.6523528E12, 71.0], [1.65235297E12, 59.0], [1.65235279E12, 68.0], [1.65235292E12, 67.0], [1.65235275E12, 64.0], [1.65235288E12, 62.0], [1.6523527E12, 60.0], [1.65235287E12, 63.0], [1.65235283E12, 61.0], [1.65235296E12, 59.0], [1.65235278E12, 63.0], [1.65235295E12, 61.0], [1.65235274E12, 71.0], [1.65235291E12, 63.0], [1.65235286E12, 70.0], [1.65235269E12, 55.0], [1.65235282E12, 64.0], [1.65235294E12, 65.0], [1.65235277E12, 62.0], [1.6523529E12, 69.0], [1.65235273E12, 61.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65235268E12, 0.0], [1.65235285E12, 0.0], [1.65235298E12, 0.0], [1.65235281E12, 0.0], [1.65235276E12, 0.0], [1.65235293E12, 0.0], [1.65235272E12, 1.0], [1.65235289E12, 0.0], [1.65235271E12, 1.0], [1.65235284E12, 0.0], [1.6523528E12, 0.0], [1.65235297E12, 0.0], [1.65235279E12, 0.0], [1.65235292E12, 0.0], [1.65235275E12, 0.0], [1.65235288E12, 0.0], [1.6523527E12, 1.0], [1.65235287E12, 0.0], [1.65235283E12, 0.0], [1.65235296E12, 0.0], [1.65235278E12, 0.0], [1.65235295E12, 0.0], [1.65235274E12, 0.0], [1.65235291E12, 0.0], [1.65235286E12, 0.0], [1.65235269E12, 0.0], [1.65235282E12, 0.0], [1.65235294E12, 0.0], [1.65235277E12, 0.0], [1.6523529E12, 0.0], [1.65235273E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65235268E12, 11.0], [1.65235285E12, 11.0], [1.65235298E12, 10.0], [1.65235281E12, 10.0], [1.65235276E12, 10.0], [1.65235293E12, 9.0], [1.65235272E12, 10.0], [1.65235289E12, 10.0], [1.65235271E12, 11.0], [1.65235284E12, 10.0], [1.6523528E12, 10.0], [1.65235297E12, 10.0], [1.65235279E12, 10.0], [1.65235292E12, 11.0], [1.65235275E12, 10.0], [1.65235288E12, 10.0], [1.6523527E12, 11.0], [1.65235287E12, 9.0], [1.65235283E12, 10.0], [1.65235296E12, 10.0], [1.65235278E12, 10.0], [1.65235295E12, 10.0], [1.65235274E12, 13.0], [1.65235291E12, 10.0], [1.65235286E12, 10.0], [1.65235269E12, 11.0], [1.65235282E12, 10.0], [1.65235294E12, 10.0], [1.65235277E12, 10.0], [1.6523529E12, 11.0], [1.65235273E12, 10.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235298E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 476.0, "maxY": 18.0, "series": [{"data": [[25579.0, 11.0], [26467.0, 11.0], [27427.0, 10.0], [27539.0, 10.0], [27403.0, 10.0], [27411.0, 10.0], [27179.0, 10.0], [27571.0, 10.0], [27523.0, 10.0], [27475.0, 10.0], [26931.0, 11.0], [26739.0, 11.0], [26867.0, 11.0], [27331.0, 10.0], [27315.0, 10.0], [27307.0, 10.0], [27235.0, 10.0], [28499.0, 10.0], [27859.0, 10.0], [28523.0, 10.0], [28611.0, 10.0], [28659.0, 10.0], [28307.0, 9.0], [28179.0, 10.0], [28115.0, 10.0], [27963.0, 10.0], [27955.0, 10.0], [28003.0, 10.0], [28091.0, 10.0], [28043.0, 10.0], [27731.0, 10.0], [27707.0, 10.0], [27771.0, 10.0], [28787.0, 9.0], [28843.0, 10.0], [29475.0, 9.0], [28683.0, 10.0], [25818.0, 10.0], [27474.0, 10.0], [27162.0, 11.0], [27202.0, 10.0], [26850.0, 11.0], [27466.0, 10.0], [27154.0, 10.0], [27506.0, 10.0], [27378.0, 10.0], [27338.0, 11.0], [27290.0, 10.0], [26826.0, 11.0], [26642.0, 11.0], [26810.0, 10.0], [26938.0, 10.0], [27114.0, 10.0], [27850.0, 10.0], [28194.0, 10.0], [28490.0, 10.0], [28202.0, 10.0], [28298.0, 10.0], [28330.0, 10.0], [27778.0, 10.0], [27738.0, 10.0], [27722.0, 10.0], [27698.0, 10.0], [27706.0, 10.0], [27834.0, 10.0], [27890.0, 10.0], [27858.0, 10.0], [28466.0, 10.0], [28082.0, 10.0], [27914.0, 10.0], [27970.0, 10.0], [28698.0, 9.0], [28746.0, 10.0], [28730.0, 10.0], [28914.0, 9.0], [476.0, 18.0], [22609.0, 12.0], [22841.0, 13.0], [25553.0, 11.0], [25585.0, 10.0], [26377.0, 11.0], [27537.0, 10.0], [27145.0, 10.0], [27377.0, 10.0], [26913.0, 10.0], [26665.0, 11.0], [26753.0, 10.0], [27129.0, 10.0], [27217.0, 10.0], [27625.0, 10.0], [27553.0, 10.0], [28161.0, 10.0], [27785.0, 11.0], [28185.0, 10.0], [28177.0, 10.0], [27833.0, 10.0], [27801.0, 9.0], [27897.0, 9.0], [28201.0, 10.0], [28297.0, 10.0], [28265.0, 10.0], [28377.0, 10.0], [28089.0, 11.0], [27681.0, 10.0], [27953.0, 10.0], [28073.0, 10.0], [27777.0, 10.0], [27729.0, 10.0], [30521.0, 10.0], [8528.0, 11.0], [17392.0, 14.0], [25264.0, 10.0], [26224.0, 10.0], [26552.0, 10.0], [25888.0, 10.0], [27480.0, 10.0], [27592.0, 10.0], [27144.0, 10.0], [26808.0, 10.0], [27472.0, 10.0], [27240.0, 10.0], [27280.0, 10.0], [27328.0, 10.0], [27368.0, 10.0], [27336.0, 10.0], [26728.0, 10.0], [27048.0, 10.0], [27040.0, 10.0], [26968.0, 11.0], [27024.0, 10.0], [27080.0, 10.0], [27728.0, 10.0], [28232.0, 10.0], [28368.0, 10.0], [28280.0, 10.0], [27696.0, 10.0], [28104.0, 10.0], [27880.0, 10.0], [28008.0, 9.0], [27904.0, 9.0], [27960.0, 10.0], [28048.0, 10.0], [28504.0, 10.0], [28416.0, 10.0], [28896.0, 11.0], [29568.0, 10.0], [28744.0, 11.0], [28824.0, 9.0], [29736.0, 9.0], [30776.0, 9.0], [25847.0, 10.0], [27455.0, 10.0], [27439.0, 10.0], [27551.0, 11.0], [27527.0, 10.0], [27463.0, 10.0], [26999.0, 10.0], [26679.0, 11.0], [26751.0, 10.0], [26759.0, 10.0], [26807.0, 10.0], [26799.0, 10.0], [27383.0, 10.0], [27311.0, 10.0], [27199.0, 10.0], [27255.0, 10.0], [27847.0, 10.0], [27807.0, 9.0], [28623.0, 10.0], [27887.0, 10.0], [28199.0, 10.0], [28223.0, 9.0], [28359.0, 10.0], [27719.0, 10.0], [28111.0, 10.0], [28071.0, 10.0], [27663.0, 11.0], [28159.0, 10.0], [28727.0, 10.0], [29519.0, 10.0], [28871.0, 10.0], [29199.0, 10.0], [31615.0, 10.0], [31439.0, 10.0], [26542.0, 11.0], [26206.0, 10.0], [27550.0, 10.0], [27398.0, 10.0], [27614.0, 11.0], [27598.0, 10.0], [27502.0, 10.0], [27422.0, 10.0], [27286.0, 10.0], [27366.0, 10.0], [27350.0, 10.0], [27326.0, 10.0], [26638.0, 10.0], [26710.0, 10.0], [27126.0, 10.0], [26902.0, 10.0], [26982.0, 10.0], [27862.0, 10.0], [27846.0, 10.0], [28662.0, 10.0], [28174.0, 10.0], [28278.0, 10.0], [27710.0, 10.0], [27726.0, 10.0], [27782.0, 10.0], [28534.0, 10.0], [27942.0, 10.0], [27966.0, 10.0], [28022.0, 10.0], [28894.0, 9.0], [28766.0, 10.0], [28718.0, 10.0], [28798.0, 10.0], [29006.0, 10.0], [29718.0, 10.0], [25917.0, 11.0], [26869.0, 10.0], [27509.0, 10.0], [27461.0, 10.0], [27157.0, 11.0], [27349.0, 10.0], [27205.0, 10.0], [27077.0, 11.0], [26909.0, 10.0], [27005.0, 11.0], [27029.0, 10.0], [26733.0, 11.0], [26845.0, 11.0], [26789.0, 10.0], [26837.0, 10.0], [26653.0, 10.0], [27845.0, 10.0], [27877.0, 10.0], [27813.0, 10.0], [27805.0, 10.0], [28429.0, 10.0], [28525.0, 10.0], [28461.0, 10.0], [28261.0, 10.0], [28141.0, 10.0], [28093.0, 10.0], [28053.0, 10.0], [27949.0, 10.0], [27973.0, 10.0], [27669.0, 10.0], [27741.0, 10.0], [29117.0, 10.0], [28845.0, 9.0], [32285.0, 9.0], [31837.0, 10.0], [26308.0, 10.0], [27404.0, 10.0], [27516.0, 10.0], [27620.0, 10.0], [27532.0, 10.0], [27484.0, 10.0], [27044.0, 11.0], [26908.0, 11.0], [26972.0, 10.0], [27012.0, 11.0], [26628.0, 10.0], [27060.0, 10.0], [28492.0, 10.0], [28084.0, 10.0], [28452.0, 10.0], [27892.0, 10.0], [28044.0, 10.0], [28636.0, 10.0], [28196.0, 10.0], [28364.0, 10.0], [28388.0, 10.0], [28508.0, 10.0], [27908.0, 10.0], [27916.0, 10.0], [29516.0, 9.0], [28692.0, 10.0], [29188.0, 9.0], [28780.0, 9.0], [29180.0, 9.0], [28740.0, 10.0], [28828.0, 10.0], [29260.0, 9.0], [29308.0, 10.0], [29884.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 32285.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 476.0, "maxY": 18.0, "series": [{"data": [[25579.0, 11.0], [26467.0, 11.0], [27427.0, 10.0], [27539.0, 10.0], [27403.0, 10.0], [27411.0, 10.0], [27179.0, 10.0], [27571.0, 10.0], [27523.0, 10.0], [27475.0, 10.0], [26931.0, 11.0], [26739.0, 11.0], [26867.0, 11.0], [27331.0, 10.0], [27315.0, 10.0], [27307.0, 10.0], [27235.0, 10.0], [28499.0, 10.0], [27859.0, 10.0], [28523.0, 10.0], [28611.0, 10.0], [28659.0, 10.0], [28307.0, 9.0], [28179.0, 10.0], [28115.0, 10.0], [27963.0, 10.0], [27955.0, 10.0], [28003.0, 10.0], [28091.0, 10.0], [28043.0, 10.0], [27731.0, 10.0], [27707.0, 10.0], [27771.0, 10.0], [28787.0, 9.0], [28843.0, 10.0], [29475.0, 9.0], [28683.0, 10.0], [25818.0, 10.0], [27474.0, 10.0], [27162.0, 11.0], [27202.0, 10.0], [26850.0, 11.0], [27466.0, 10.0], [27154.0, 10.0], [27506.0, 10.0], [27378.0, 10.0], [27338.0, 11.0], [27290.0, 10.0], [26826.0, 11.0], [26642.0, 11.0], [26810.0, 10.0], [26938.0, 10.0], [27114.0, 10.0], [27850.0, 10.0], [28194.0, 10.0], [28490.0, 10.0], [28202.0, 10.0], [28298.0, 10.0], [28330.0, 10.0], [27778.0, 10.0], [27738.0, 10.0], [27722.0, 10.0], [27698.0, 10.0], [27706.0, 10.0], [27834.0, 10.0], [27890.0, 10.0], [27858.0, 10.0], [28466.0, 10.0], [28082.0, 10.0], [27914.0, 10.0], [27970.0, 10.0], [28698.0, 9.0], [28746.0, 10.0], [28730.0, 10.0], [28914.0, 9.0], [476.0, 18.0], [22609.0, 12.0], [22841.0, 13.0], [25553.0, 11.0], [25585.0, 10.0], [26377.0, 11.0], [27537.0, 10.0], [27145.0, 10.0], [27377.0, 10.0], [26913.0, 10.0], [26665.0, 11.0], [26753.0, 10.0], [27129.0, 10.0], [27217.0, 10.0], [27625.0, 10.0], [27553.0, 10.0], [28161.0, 10.0], [27785.0, 11.0], [28185.0, 10.0], [28177.0, 10.0], [27833.0, 10.0], [27801.0, 9.0], [27897.0, 9.0], [28201.0, 10.0], [28297.0, 10.0], [28265.0, 10.0], [28377.0, 10.0], [28089.0, 11.0], [27681.0, 10.0], [27953.0, 10.0], [28073.0, 10.0], [27777.0, 10.0], [27729.0, 10.0], [30521.0, 10.0], [8528.0, 11.0], [17392.0, 14.0], [25264.0, 10.0], [26224.0, 10.0], [26552.0, 10.0], [25888.0, 10.0], [27480.0, 10.0], [27592.0, 10.0], [27144.0, 10.0], [26808.0, 10.0], [27472.0, 10.0], [27240.0, 10.0], [27280.0, 10.0], [27328.0, 10.0], [27368.0, 10.0], [27336.0, 10.0], [26728.0, 10.0], [27048.0, 10.0], [27040.0, 10.0], [26968.0, 11.0], [27024.0, 10.0], [27080.0, 10.0], [27728.0, 10.0], [28232.0, 10.0], [28368.0, 10.0], [28280.0, 10.0], [27696.0, 10.0], [28104.0, 10.0], [27880.0, 10.0], [28008.0, 9.0], [27904.0, 9.0], [27960.0, 10.0], [28048.0, 10.0], [28504.0, 10.0], [28416.0, 10.0], [28896.0, 11.0], [29568.0, 10.0], [28744.0, 11.0], [28824.0, 9.0], [29736.0, 9.0], [30776.0, 9.0], [25847.0, 10.0], [27455.0, 10.0], [27439.0, 10.0], [27551.0, 11.0], [27527.0, 10.0], [27463.0, 10.0], [26999.0, 10.0], [26679.0, 11.0], [26751.0, 10.0], [26759.0, 10.0], [26807.0, 10.0], [26799.0, 10.0], [27383.0, 10.0], [27311.0, 10.0], [27199.0, 10.0], [27255.0, 10.0], [27847.0, 10.0], [27807.0, 9.0], [28623.0, 10.0], [27887.0, 10.0], [28199.0, 10.0], [28223.0, 9.0], [28359.0, 10.0], [27719.0, 10.0], [28111.0, 10.0], [28071.0, 10.0], [27663.0, 11.0], [28159.0, 10.0], [28727.0, 10.0], [29519.0, 10.0], [28871.0, 10.0], [29199.0, 10.0], [31615.0, 10.0], [31439.0, 10.0], [26542.0, 11.0], [26206.0, 10.0], [27550.0, 10.0], [27398.0, 10.0], [27614.0, 11.0], [27598.0, 10.0], [27502.0, 10.0], [27422.0, 10.0], [27286.0, 10.0], [27366.0, 10.0], [27350.0, 10.0], [27326.0, 10.0], [26638.0, 10.0], [26710.0, 10.0], [27126.0, 10.0], [26902.0, 10.0], [26982.0, 10.0], [27862.0, 10.0], [27846.0, 10.0], [28662.0, 10.0], [28174.0, 10.0], [28278.0, 10.0], [27710.0, 10.0], [27726.0, 10.0], [27782.0, 10.0], [28534.0, 10.0], [27942.0, 10.0], [27966.0, 10.0], [28022.0, 10.0], [28894.0, 9.0], [28766.0, 10.0], [28718.0, 10.0], [28798.0, 10.0], [29006.0, 10.0], [29718.0, 10.0], [25917.0, 11.0], [26869.0, 10.0], [27509.0, 10.0], [27461.0, 10.0], [27157.0, 11.0], [27349.0, 10.0], [27205.0, 10.0], [27077.0, 11.0], [26909.0, 10.0], [27005.0, 11.0], [27029.0, 10.0], [26733.0, 11.0], [26845.0, 11.0], [26789.0, 10.0], [26837.0, 10.0], [26653.0, 10.0], [27845.0, 10.0], [27877.0, 10.0], [27813.0, 10.0], [27805.0, 10.0], [28429.0, 10.0], [28525.0, 10.0], [28461.0, 10.0], [28261.0, 10.0], [28141.0, 10.0], [28093.0, 10.0], [28053.0, 10.0], [27949.0, 10.0], [27973.0, 10.0], [27669.0, 10.0], [27741.0, 10.0], [29117.0, 10.0], [28845.0, 9.0], [32285.0, 9.0], [31837.0, 10.0], [26308.0, 10.0], [27404.0, 10.0], [27516.0, 10.0], [27620.0, 10.0], [27532.0, 10.0], [27484.0, 10.0], [27044.0, 11.0], [26908.0, 11.0], [26972.0, 10.0], [27012.0, 11.0], [26628.0, 10.0], [27060.0, 10.0], [28492.0, 10.0], [28084.0, 10.0], [28452.0, 10.0], [27892.0, 10.0], [28044.0, 10.0], [28636.0, 10.0], [28196.0, 10.0], [28364.0, 10.0], [28388.0, 10.0], [28508.0, 10.0], [27908.0, 10.0], [27916.0, 10.0], [29516.0, 9.0], [28692.0, 10.0], [29188.0, 9.0], [28780.0, 9.0], [29180.0, 9.0], [28740.0, 10.0], [28828.0, 10.0], [29260.0, 9.0], [29308.0, 10.0], [29884.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 32285.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 902.8, "minX": 1.65235268E12, "maxY": 28567.6, "series": [{"data": [[1.65235268E12, 902.8], [1.65235285E12, 27575.4], [1.65235298E12, 24919.4], [1.65235281E12, 27714.9], [1.65235276E12, 27900.2], [1.65235293E12, 27294.2], [1.65235272E12, 27642.7], [1.65235289E12, 27456.3], [1.65235271E12, 27199.9], [1.65235284E12, 27270.0], [1.6523528E12, 27854.2], [1.65235297E12, 28310.3], [1.65235279E12, 27682.2], [1.65235292E12, 28195.0], [1.65235275E12, 28110.8], [1.65235288E12, 27320.2], [1.6523527E12, 28058.7], [1.65235287E12, 27517.3], [1.65235283E12, 27170.6], [1.65235296E12, 28537.1], [1.65235278E12, 27457.5], [1.65235295E12, 27502.2], [1.65235274E12, 27611.8], [1.65235291E12, 27865.5], [1.65235286E12, 27520.1], [1.65235269E12, 28567.6], [1.65235282E12, 27448.0], [1.65235294E12, 27995.2], [1.65235277E12, 27966.9], [1.6523529E12, 27570.1], [1.65235273E12, 27560.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235298E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 852.8, "minX": 1.65235268E12, "maxY": 28567.7, "series": [{"data": [[1.65235268E12, 852.8], [1.65235285E12, 27575.4], [1.65235298E12, 24969.4], [1.65235281E12, 27714.1], [1.65235276E12, 27900.5], [1.65235293E12, 27293.5], [1.65235272E12, 27641.5], [1.65235289E12, 27456.7], [1.65235271E12, 27201.0], [1.65235284E12, 27269.1], [1.6523528E12, 27855.1], [1.65235297E12, 28310.3], [1.65235279E12, 27682.2], [1.65235292E12, 28195.6], [1.65235275E12, 28110.6], [1.65235288E12, 27320.5], [1.6523527E12, 28058.8], [1.65235287E12, 27515.0], [1.65235283E12, 27171.5], [1.65235296E12, 28535.5], [1.65235278E12, 27457.4], [1.65235295E12, 27503.8], [1.65235274E12, 27611.7], [1.65235291E12, 27865.2], [1.65235286E12, 27522.4], [1.65235269E12, 28567.7], [1.65235282E12, 27447.9], [1.65235294E12, 27995.2], [1.65235277E12, 27966.7], [1.6523529E12, 27569.8], [1.65235273E12, 27560.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235298E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 401.2, "minX": 1.65235268E12, "maxY": 14334.7, "series": [{"data": [[1.65235268E12, 401.2], [1.65235285E12, 13827.9], [1.65235298E12, 12502.0], [1.65235281E12, 13836.9], [1.65235276E12, 13933.2], [1.65235293E12, 13645.3], [1.65235272E12, 13842.1], [1.65235289E12, 13726.4], [1.65235271E12, 13588.1], [1.65235284E12, 13579.1], [1.6523528E12, 13970.5], [1.65235297E12, 14164.2], [1.65235279E12, 13819.3], [1.65235292E12, 14124.8], [1.65235275E12, 14059.9], [1.65235288E12, 13622.6], [1.6523527E12, 14034.9], [1.65235287E12, 13749.7], [1.65235283E12, 13626.2], [1.65235296E12, 14267.2], [1.65235278E12, 13679.6], [1.65235295E12, 13774.8], [1.65235274E12, 13803.5], [1.65235291E12, 13928.2], [1.65235286E12, 13767.3], [1.65235269E12, 14233.0], [1.65235282E12, 13693.5], [1.65235294E12, 13971.6], [1.65235277E12, 13945.8], [1.6523529E12, 13754.0], [1.65235273E12, 13790.3]], "isOverall": false, "label": "Get Drink 2-success", "isController": false}, {"data": [[1.65235268E12, 451.6], [1.65235285E12, 13747.5], [1.65235298E12, 12467.4], [1.65235281E12, 13877.2], [1.65235276E12, 13967.3], [1.65235293E12, 13648.2], [1.65235272E12, 13799.4], [1.65235289E12, 13730.3], [1.65235271E12, 13612.9], [1.65235284E12, 13690.0], [1.6523528E12, 13884.6], [1.65235297E12, 14146.1], [1.65235279E12, 13862.9], [1.65235292E12, 14070.8], [1.65235275E12, 14050.7], [1.65235288E12, 13697.9], [1.6523527E12, 14023.9], [1.65235287E12, 13765.3], [1.65235283E12, 13545.3], [1.65235296E12, 14268.3], [1.65235278E12, 13777.8], [1.65235295E12, 13729.0], [1.65235274E12, 13808.2], [1.65235291E12, 13937.0], [1.65235286E12, 13755.1], [1.65235269E12, 14334.7], [1.65235282E12, 13754.4], [1.65235294E12, 14023.6], [1.65235277E12, 14020.9], [1.6523529E12, 13815.8], [1.65235273E12, 13769.9]], "isOverall": false, "label": "Get Drink 1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235298E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 852.8, "minX": 1.65235268E12, "maxY": 28567.7, "series": [{"data": [[1.65235268E12, 852.8], [1.65235285E12, 27575.4], [1.65235298E12, 24969.4], [1.65235281E12, 27714.1], [1.65235276E12, 27900.5], [1.65235293E12, 27293.5], [1.65235272E12, 27641.5], [1.65235289E12, 27456.7], [1.65235271E12, 27201.0], [1.65235284E12, 27269.1], [1.6523528E12, 27855.1], [1.65235297E12, 28310.3], [1.65235279E12, 27682.2], [1.65235292E12, 28195.6], [1.65235275E12, 28110.6], [1.65235288E12, 27320.5], [1.6523527E12, 28058.8], [1.65235287E12, 27515.0], [1.65235283E12, 27171.5], [1.65235296E12, 28535.5], [1.65235278E12, 27457.4], [1.65235295E12, 27503.8], [1.65235274E12, 27611.7], [1.65235291E12, 27865.2], [1.65235286E12, 27522.4], [1.65235269E12, 28567.7], [1.65235282E12, 27447.9], [1.65235294E12, 27995.2], [1.65235277E12, 27966.7], [1.6523529E12, 27569.8], [1.65235273E12, 27560.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235298E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

