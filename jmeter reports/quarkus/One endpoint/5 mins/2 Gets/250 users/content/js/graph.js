/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 170.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 6.0], [50.7, 6.0], [50.8, 6.0], [50.9, 6.0], [51.0, 6.0], [51.1, 6.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 7.0], [61.2, 7.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 7.0], [61.8, 7.0], [61.9, 7.0], [62.0, 7.0], [62.1, 7.0], [62.2, 7.0], [62.3, 7.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 7.0], [63.5, 7.0], [63.6, 7.0], [63.7, 7.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 8.0], [71.0, 8.0], [71.1, 8.0], [71.2, 8.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 8.0], [71.9, 8.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 8.0], [77.1, 9.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 9.0], [77.8, 9.0], [77.9, 9.0], [78.0, 9.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 9.0], [78.6, 9.0], [78.7, 9.0], [78.8, 9.0], [78.9, 9.0], [79.0, 9.0], [79.1, 9.0], [79.2, 9.0], [79.3, 9.0], [79.4, 9.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 9.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 10.0], [83.5, 10.0], [83.6, 10.0], [83.7, 10.0], [83.8, 10.0], [83.9, 10.0], [84.0, 10.0], [84.1, 10.0], [84.2, 10.0], [84.3, 10.0], [84.4, 10.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 10.0], [85.8, 10.0], [85.9, 10.0], [86.0, 10.0], [86.1, 10.0], [86.2, 10.0], [86.3, 10.0], [86.4, 10.0], [86.5, 10.0], [86.6, 10.0], [86.7, 10.0], [86.8, 10.0], [86.9, 11.0], [87.0, 11.0], [87.1, 11.0], [87.2, 11.0], [87.3, 11.0], [87.4, 11.0], [87.5, 11.0], [87.6, 11.0], [87.7, 11.0], [87.8, 11.0], [87.9, 11.0], [88.0, 11.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 11.0], [90.0, 11.0], [90.1, 12.0], [90.2, 12.0], [90.3, 12.0], [90.4, 12.0], [90.5, 12.0], [90.6, 12.0], [90.7, 12.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 12.0], [92.4, 13.0], [92.5, 13.0], [92.6, 13.0], [92.7, 13.0], [92.8, 13.0], [92.9, 13.0], [93.0, 13.0], [93.1, 13.0], [93.2, 13.0], [93.3, 13.0], [93.4, 13.0], [93.5, 13.0], [93.6, 13.0], [93.7, 13.0], [93.8, 13.0], [93.9, 13.0], [94.0, 13.0], [94.1, 14.0], [94.2, 14.0], [94.3, 14.0], [94.4, 14.0], [94.5, 14.0], [94.6, 14.0], [94.7, 14.0], [94.8, 14.0], [94.9, 14.0], [95.0, 14.0], [95.1, 14.0], [95.2, 14.0], [95.3, 14.0], [95.4, 15.0], [95.5, 15.0], [95.6, 15.0], [95.7, 15.0], [95.8, 15.0], [95.9, 15.0], [96.0, 15.0], [96.1, 15.0], [96.2, 15.0], [96.3, 15.0], [96.4, 16.0], [96.5, 16.0], [96.6, 16.0], [96.7, 16.0], [96.8, 16.0], [96.9, 16.0], [97.0, 16.0], [97.1, 17.0], [97.2, 17.0], [97.3, 17.0], [97.4, 17.0], [97.5, 17.0], [97.6, 17.0], [97.7, 18.0], [97.8, 18.0], [97.9, 18.0], [98.0, 18.0], [98.1, 19.0], [98.2, 19.0], [98.3, 19.0], [98.4, 19.0], [98.5, 20.0], [98.6, 20.0], [98.7, 20.0], [98.8, 21.0], [98.9, 21.0], [99.0, 22.0], [99.1, 22.0], [99.2, 23.0], [99.3, 23.0], [99.4, 24.0], [99.5, 25.0], [99.6, 26.0], [99.7, 27.0], [99.8, 29.0], [99.9, 33.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 6.0], [50.8, 6.0], [50.9, 6.0], [51.0, 6.0], [51.1, 6.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 7.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 7.0], [61.8, 7.0], [61.9, 7.0], [62.0, 7.0], [62.1, 7.0], [62.2, 7.0], [62.3, 7.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 7.0], [63.5, 7.0], [63.6, 7.0], [63.7, 7.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 8.0], [71.0, 8.0], [71.1, 8.0], [71.2, 8.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 8.0], [71.9, 8.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 8.0], [77.1, 8.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 9.0], [77.8, 9.0], [77.9, 9.0], [78.0, 9.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 9.0], [78.6, 9.0], [78.7, 9.0], [78.8, 9.0], [78.9, 9.0], [79.0, 9.0], [79.1, 9.0], [79.2, 9.0], [79.3, 9.0], [79.4, 9.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 9.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 10.0], [83.5, 10.0], [83.6, 10.0], [83.7, 10.0], [83.8, 10.0], [83.9, 10.0], [84.0, 10.0], [84.1, 10.0], [84.2, 10.0], [84.3, 10.0], [84.4, 10.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 10.0], [85.8, 10.0], [85.9, 10.0], [86.0, 10.0], [86.1, 10.0], [86.2, 10.0], [86.3, 10.0], [86.4, 10.0], [86.5, 10.0], [86.6, 10.0], [86.7, 10.0], [86.8, 10.0], [86.9, 10.0], [87.0, 11.0], [87.1, 11.0], [87.2, 11.0], [87.3, 11.0], [87.4, 11.0], [87.5, 11.0], [87.6, 11.0], [87.7, 11.0], [87.8, 11.0], [87.9, 11.0], [88.0, 11.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 11.0], [90.0, 11.0], [90.1, 12.0], [90.2, 12.0], [90.3, 12.0], [90.4, 12.0], [90.5, 12.0], [90.6, 12.0], [90.7, 12.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 12.0], [92.4, 13.0], [92.5, 13.0], [92.6, 13.0], [92.7, 13.0], [92.8, 13.0], [92.9, 13.0], [93.0, 13.0], [93.1, 13.0], [93.2, 13.0], [93.3, 13.0], [93.4, 13.0], [93.5, 13.0], [93.6, 13.0], [93.7, 13.0], [93.8, 13.0], [93.9, 13.0], [94.0, 13.0], [94.1, 14.0], [94.2, 14.0], [94.3, 14.0], [94.4, 14.0], [94.5, 14.0], [94.6, 14.0], [94.7, 14.0], [94.8, 14.0], [94.9, 14.0], [95.0, 14.0], [95.1, 14.0], [95.2, 14.0], [95.3, 14.0], [95.4, 15.0], [95.5, 15.0], [95.6, 15.0], [95.7, 15.0], [95.8, 15.0], [95.9, 15.0], [96.0, 15.0], [96.1, 15.0], [96.2, 15.0], [96.3, 15.0], [96.4, 16.0], [96.5, 16.0], [96.6, 16.0], [96.7, 16.0], [96.8, 16.0], [96.9, 16.0], [97.0, 16.0], [97.1, 17.0], [97.2, 17.0], [97.3, 17.0], [97.4, 17.0], [97.5, 17.0], [97.6, 17.0], [97.7, 18.0], [97.8, 18.0], [97.9, 18.0], [98.0, 18.0], [98.1, 19.0], [98.2, 19.0], [98.3, 19.0], [98.4, 19.0], [98.5, 20.0], [98.6, 20.0], [98.7, 20.0], [98.8, 21.0], [98.9, 21.0], [99.0, 22.0], [99.1, 22.0], [99.2, 23.0], [99.3, 23.0], [99.4, 24.0], [99.5, 25.0], [99.6, 26.0], [99.7, 27.0], [99.8, 29.0], [99.9, 33.0], [100.0, 170.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "maxY": 1.1002611E7, "series": [{"data": [[0.0, 1.0995828E7], [100.0, 39.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[0.0, 1.1002611E7], [100.0, 47.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.1998525E7, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2.1998525E7, "series": [{"data": [[0.0, 2.1998525E7]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 243.4212998048685, "minX": 1.65234649E12, "maxY": 250.0, "series": [{"data": [[1.65234658E12, 250.0], [1.65234675E12, 250.0], [1.65234662E12, 250.0], [1.65234679E12, 249.62842274678124], [1.65234649E12, 243.4212998048685], [1.65234666E12, 250.0], [1.65234653E12, 250.0], [1.6523467E12, 250.0], [1.65234657E12, 250.0], [1.65234674E12, 250.0], [1.65234661E12, 250.0], [1.65234678E12, 250.0], [1.65234665E12, 250.0], [1.65234652E12, 250.0], [1.65234669E12, 250.0], [1.65234656E12, 250.0], [1.65234673E12, 250.0], [1.6523466E12, 250.0], [1.65234677E12, 250.0], [1.65234664E12, 250.0], [1.65234651E12, 250.0], [1.65234668E12, 250.0], [1.65234655E12, 250.0], [1.65234672E12, 250.0], [1.65234659E12, 250.0], [1.65234676E12, 250.0], [1.65234663E12, 250.0], [1.6523465E12, 250.0], [1.65234667E12, 250.0], [1.65234654E12, 250.0], [1.65234671E12, 250.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234679E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 57.0, "maxY": 44.0, "series": [{"data": [[57.0, 33.69230769230769], [58.0, 11.75], [59.0, 6.625], [60.0, 2.5], [61.0, 3.0], [62.0, 2.625], [63.0, 13.599999999999998], [67.0, 2.25], [65.0, 2.0], [66.0, 3.0], [70.0, 2.4545454545454546], [71.0, 0.8461538461538461], [69.0, 2.428571428571429], [72.0, 1.0], [73.0, 0.5555555555555556], [76.0, 1.2], [77.0, 5.0], [78.0, 4.5], [79.0, 2.3000000000000003], [80.0, 5.5], [81.0, 3.0000000000000004], [82.0, 3.428571428571429], [83.0, 2.1176470588235294], [84.0, 1.4], [85.0, 0.8], [87.0, 0.7857142857142857], [88.0, 0.875], [89.0, 1.35], [91.0, 0.3125], [90.0, 2.0], [92.0, 0.75], [93.0, 0.6666666666666667], [94.0, 0.375], [95.0, 1.0], [96.0, 1.291666666666667], [97.0, 0.8888888888888888], [98.0, 1.3333333333333333], [99.0, 1.7777777777777777], [101.0, 12.5], [100.0, 2.0], [105.0, 21.0], [106.0, 15.5], [107.0, 8.25], [108.0, 1.2], [109.0, 1.1666666666666665], [111.0, 9.166666666666666], [110.0, 1.4999999999999998], [113.0, 1.5], [114.0, 2.0], [115.0, 1.8749999999999998], [112.0, 2.0], [116.0, 29.0], [117.0, 6.90909090909091], [118.0, 1.6], [119.0, 0.8095238095238095], [120.0, 1.0], [121.0, 1.375], [122.0, 1.6666666666666665], [123.0, 2.103448275862069], [124.0, 2.3636363636363638], [125.0, 0.9333333333333332], [126.0, 1.0909090909090908], [127.0, 1.7777777777777777], [128.0, 1.2857142857142856], [129.0, 1.2999999999999998], [131.0, 1.9047619047619049], [132.0, 2.666666666666667], [133.0, 1.041666666666667], [134.0, 1.5], [135.0, 1.5294117647058827], [136.0, 3.4444444444444446], [137.0, 2.1538461538461537], [138.0, 1.6666666666666667], [139.0, 1.3333333333333333], [140.0, 1.0454545454545459], [141.0, 1.3125000000000002], [142.0, 1.9090909090909092], [143.0, 2.5999999999999996], [144.0, 2.1666666666666665], [145.0, 2.1818181818181817], [146.0, 0.5], [147.0, 1.8695652173913044], [149.0, 2.125], [150.0, 2.0], [151.0, 1.5294117647058822], [148.0, 3.0000000000000004], [152.0, 1.375], [153.0, 1.5238095238095237], [154.0, 2.8000000000000003], [155.0, 1.4375000000000002], [156.0, 1.1428571428571428], [157.0, 1.3000000000000005], [158.0, 1.8888888888888888], [159.0, 1.9090909090909092], [160.0, 0.75], [161.0, 1.923076923076923], [162.0, 0.5714285714285714], [163.0, 2.2857142857142856], [167.0, 1.6666666666666667], [166.0, 3.034482758620689], [165.0, 0.7692307692307693], [164.0, 2.941176470588235], [168.0, 1.8181818181818183], [169.0, 1.125], [170.0, 2.4444444444444446], [171.0, 2.666666666666667], [172.0, 2.148148148148149], [173.0, 1.0], [174.0, 3.571428571428571], [175.0, 1.15], [176.0, 2.5714285714285716], [177.0, 1.142857142857143], [178.0, 2.2666666666666666], [179.0, 2.225806451612903], [180.0, 2.285714285714286], [181.0, 2.3157894736842106], [182.0, 4.0], [183.0, 2.1666666666666665], [184.0, 0.8], [185.0, 2.4736842105263155], [186.0, 0.5], [187.0, 2.1568627450980387], [188.0, 0.6666666666666667], [189.0, 2.6206896551724137], [190.0, 1.7142857142857142], [191.0, 2.130434782608696], [192.0, 1.923076923076923], [193.0, 2.937500000000001], [195.0, 2.4827586206896557], [196.0, 2.125], [197.0, 1.5384615384615383], [198.0, 2.5], [199.0, 2.8750000000000004], [194.0, 1.0], [201.0, 1.16], [202.0, 1.5], [203.0, 2.03448275862069], [204.0, 1.7777777777777777], [205.0, 2.4], [207.0, 3.8518518518518516], [206.0, 4.444444444444444], [200.0, 4.333333333333333], [208.0, 1.125], [209.0, 1.3157894736842106], [210.0, 1.3333333333333333], [211.0, 1.2631578947368423], [213.0, 3.0322580645161294], [214.0, 1.9], [215.0, 1.7000000000000002], [212.0, 2.2857142857142856], [216.0, 1.0], [217.0, 1.7692307692307692], [218.0, 1.1666666666666665], [219.0, 1.75], [220.0, 2.1000000000000005], [221.0, 1.3636363636363638], [222.0, 2.0769230769230766], [223.0, 0.7777777777777778], [224.0, 2.24], [225.0, 2.612903225806452], [226.0, 2.9090909090909087], [227.0, 2.0588235294117645], [228.0, 2.1], [229.0, 2.306122448979591], [230.0, 2.17142857142857], [231.0, 2.3333333333333335], [232.0, 4.583333333333334], [234.0, 3.6666666666666665], [236.0, 2.434782608695652], [237.0, 2.1578947368421058], [238.0, 3.1029411764705888], [239.0, 3.3965517241379306], [235.0, 3.2], [233.0, 3.6666666666666665], [240.0, 3.233766233766235], [241.0, 3.18918918918919], [242.0, 2.5652173913043477], [243.0, 2.5], [244.0, 1.4285714285714284], [246.0, 1.5185185185185182], [245.0, 1.6], [247.0, 1.2499999999999998], [248.0, 2.266666666666667], [249.0, 3.7692307692307696], [250.0, 1.4285714285714284], [251.0, 3.4444444444444438], [252.0, 2.88235294117647], [253.0, 3.1666666666666665], [254.0, 3.5833333333333335], [255.0, 2.3793103448275863], [257.0, 2.794117647058824], [256.0, 3.2], [258.0, 3.0], [259.0, 3.0882352941176476], [260.0, 3.96875], [261.0, 2.294117647058823], [262.0, 4.250000000000001], [263.0, 1.1], [264.0, 3.769230769230769], [271.0, 1.4], [268.0, 5.500000000000001], [269.0, 3.6666666666666665], [270.0, 4.444444444444445], [265.0, 1.5129533678756486], [266.0, 2.8], [267.0, 2.0], [284.0, 3.2222222222222223], [272.0, 0.6], [274.0, 1.1], [275.0, 1.6666666666666667], [279.0, 3.0], [276.0, 4.666666666666667], [280.0, 2.8000000000000003], [281.0, 1.7000000000000002], [282.0, 4.857142857142857], [283.0, 5.0], [285.0, 2.235294117647059], [286.0, 1.6250000000000002], [287.0, 2.857142857142857], [289.0, 4.666666666666667], [288.0, 1.15], [290.0, 2.242424242424242], [291.0, 1.2], [292.0, 3.083333333333333], [293.0, 4.58119658119658], [294.0, 2.5], [295.0, 4.1923076923076925], [296.0, 5.256410256410256], [302.0, 4.000000000000001], [303.0, 2.0434782608695654], [300.0, 4.222222222222221], [301.0, 4.4], [297.0, 4.378378378378377], [298.0, 3.6250000000000004], [299.0, 3.854166666666666], [305.0, 2.6666666666666665], [304.0, 3.6], [307.0, 2.285714285714286], [316.0, 2.0], [317.0, 3.5588235294117636], [318.0, 4.424242424242423], [319.0, 3.869565217391304], [308.0, 1.7], [309.0, 1.8571428571428568], [310.0, 2.75], [311.0, 4.0], [312.0, 5.2], [313.0, 3.5], [314.0, 6.25], [315.0, 4.730769230769231], [321.0, 5.444444444444445], [320.0, 5.578947368421055], [322.0, 3.9375], [323.0, 3.256410256410256], [324.0, 3.173913043478261], [325.0, 2.8181818181818183], [326.0, 12.25], [327.0, 4.542857142857143], [328.0, 3.8095238095238093], [334.0, 3.2000000000000006], [335.0, 4.935483870967742], [332.0, 1.75], [333.0, 2.0000000000000004], [329.0, 3.468085106382979], [330.0, 3.8260869565217392], [331.0, 2.31578947368421], [337.0, 1.5789473684210529], [336.0, 4.5], [339.0, 2.333333333333333], [338.0, 5.800000000000001], [348.0, 5.239999999999999], [349.0, 3.8235294117647065], [350.0, 6.052631578947369], [351.0, 3.85], [340.0, 4.0], [341.0, 4.333333333333333], [342.0, 2.0], [343.0, 2.411764705882353], [344.0, 4.000000000000001], [345.0, 3.1944444444444446], [346.0, 2.631578947368421], [347.0, 2.4782608695652173], [353.0, 4.829787234042552], [352.0, 3.333333333333333], [354.0, 4.7], [355.0, 3.5698924731182777], [356.0, 1.5555555555555556], [357.0, 2.466666666666667], [358.0, 1.7058823529411764], [359.0, 2.475], [360.0, 2.1470588235294117], [367.0, 10.833333333333332], [366.0, 4.714285714285714], [364.0, 2.692307692307693], [365.0, 7.166666666666666], [361.0, 2.5], [362.0, 0.75], [363.0, 1.7272727272727273], [369.0, 2.6666666666666665], [368.0, 3.888888888888889], [370.0, 7.8], [371.0, 7.719999999999999], [372.0, 2.076923076923077], [373.0, 5.181818181818182], [374.0, 1.9], [375.0, 3.5999999999999996], [378.0, 5.652173913043478], [380.0, 2.9423076923076934], [381.0, 7.235294117647058], [382.0, 3.52], [383.0, 4.238095238095239], [377.0, 8.428571428571429], [376.0, 4.0], [379.0, 5.9444444444444455], [385.0, 4.958333333333333], [384.0, 3.8749999999999996], [386.0, 1.5], [387.0, 3.4999999999999996], [388.0, 5.217391304347825], [389.0, 3.4736842105263155], [391.0, 2.888888888888889], [390.0, 8.5], [393.0, 4.59375], [395.0, 1.1724137931034482], [394.0, 5.666666666666667], [396.0, 4.666666666666666], [397.0, 4.000000000000001], [399.0, 3.4067796610169485], [392.0, 0.0], [398.0, 3.9411764705882355], [401.0, 3.904761904761905], [400.0, 2.857142857142857], [403.0, 2.2307692307692304], [402.0, 4.593749999999999], [412.0, 3.192307692307692], [413.0, 2.1600000000000006], [414.0, 5.666666666666666], [415.0, 3.576923076923077], [404.0, 2.0], [405.0, 1.1666666666666667], [406.0, 3.2], [407.0, 5.625000000000001], [408.0, 3.111111111111111], [409.0, 3.928571428571429], [410.0, 3.5], [411.0, 3.6829268292682924], [417.0, 3.9999999999999996], [416.0, 2.142857142857143], [418.0, 2.733333333333333], [419.0, 4.567567567567568], [420.0, 2.0], [421.0, 2.6969696969696964], [422.0, 3.3720930232558137], [423.0, 4.066666666666666], [424.0, 4.666666666666667], [430.0, 1.75], [431.0, 3.1739130434782608], [428.0, 1.75], [429.0, 5.000000000000001], [425.0, 3.3636363636363633], [427.0, 2.8249999999999997], [426.0, 6.571428571428572], [433.0, 1.5517241379310347], [432.0, 2.3333333333333335], [434.0, 1.3333333333333337], [435.0, 3.1063829787234045], [436.0, 6.137254901960787], [437.0, 4.968253968253967], [438.0, 7.393939393939394], [439.0, 2.931034482758621], [440.0, 1.8], [446.0, 4.2631578947368425], [447.0, 1.1666666666666667], [444.0, 1.0], [445.0, 2.4285714285714284], [441.0, 4.2333333333333325], [442.0, 7.632653061224489], [443.0, 3.72], [449.0, 1.4545454545454544], [448.0, 4.833333333333333], [450.0, 3.7222222222222223], [451.0, 3.7999999999999994], [452.0, 3.6470588235294126], [453.0, 4.244444444444445], [454.0, 3.666666666666667], [455.0, 1.2105263157894737], [456.0, 2.1578947368421053], [462.0, 4.066666666666667], [463.0, 2.706896551724138], [460.0, 4.540540540540542], [461.0, 2.1363636363636362], [457.0, 4.59375], [458.0, 1.0833333333333335], [459.0, 2.076923076923077], [465.0, 6.102040816326529], [464.0, 7.363636363636363], [466.0, 7.769230769230769], [467.0, 6.655172413793102], [468.0, 5.555555555555555], [469.0, 1.5], [470.0, 7.6], [471.0, 2.1666666666666665], [472.0, 5.92], [478.0, 2.7058823529411766], [479.0, 2.096774193548387], [476.0, 13.333333333333334], [477.0, 1.0476190476190477], [473.0, 1.8888888888888888], [474.0, 2.266666666666667], [475.0, 8.555555555555554], [481.0, 5.555555555555558], [480.0, 8.838709677419356], [483.0, 8.339285714285714], [492.0, 8.212121212121213], [493.0, 2.0], [494.0, 2.305882352941176], [495.0, 5.864864864864867], [482.0, 16.625000000000004], [484.0, 1.0], [485.0, 1.5], [486.0, 5.166666666666667], [487.0, 3.624999999999999], [488.0, 0.8181818181818182], [489.0, 6.272727272727272], [490.0, 1.6595744680851063], [491.0, 2.8765432098765435], [496.0, 6.0], [497.0, 3.0851063829787235], [498.0, 3.2790697674418605], [499.0, 3.6923076923076925], [500.0, 6.220543681257791]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[499.85492758324926, 6.2182771035700855]], "isOverall": false, "label": "Get Fruit 2-Aggregated", "isController": false}, {"data": [[57.0, 34.44444444444444], [58.0, 10.0], [59.0, 6.714285714285715], [60.0, 1.7777777777777777], [61.0, 2.142857142857143], [62.0, 1.7619047619047619], [63.0, 29.39130434782609], [67.0, 3.9411764705882355], [65.0, 2.0], [66.0, 2.0], [68.0, 1.0], [69.0, 3.7058823529411766], [70.0, 2.6538461538461537], [71.0, 0.8333333333333334], [73.0, 1.5], [76.0, 3.3333333333333335], [77.0, 3.0], [78.0, 2.25], [79.0, 3.238095238095238], [80.0, 3.5555555555555554], [81.0, 0.9285714285714286], [82.0, 2.25], [83.0, 1.0], [84.0, 0.8], [85.0, 1.1538461538461537], [86.0, 0.6666666666666666], [87.0, 1.1764705882352942], [88.0, 1.0], [89.0, 1.5], [91.0, 3.25], [92.0, 1.1428571428571428], [93.0, 0.8999999999999998], [94.0, 0.6666666666666666], [95.0, 0.7368421052631577], [96.0, 1.0], [97.0, 0.7692307692307692], [98.0, 3.0], [103.0, 34.0], [102.0, 0.0], [100.0, 22.0], [105.0, 11.5], [106.0, 44.0], [107.0, 4.374999999999999], [108.0, 5.5], [109.0, 1.7777777777777777], [111.0, 0.75], [113.0, 1.5], [114.0, 3.5], [115.0, 10.375000000000002], [116.0, 1.0], [117.0, 5.285714285714285], [118.0, 15.666666666666666], [119.0, 1.1875000000000002], [120.0, 0.6363636363636364], [121.0, 1.2], [123.0, 1.0], [124.0, 0.5], [125.0, 1.4444444444444444], [126.0, 1.0], [127.0, 0.9166666666666666], [128.0, 1.0], [129.0, 0.6666666666666667], [131.0, 1.0666666666666667], [132.0, 1.0], [133.0, 1.9999999999999998], [134.0, 1.0], [135.0, 1.3333333333333335], [136.0, 1.5], [137.0, 1.4444444444444444], [138.0, 2.6666666666666665], [139.0, 2.1538461538461537], [140.0, 1.4], [141.0, 1.631578947368421], [142.0, 0.6666666666666666], [143.0, 1.0625], [144.0, 0.9], [145.0, 1.9999999999999998], [146.0, 2.2], [147.0, 2.7], [149.0, 3.6428571428571432], [150.0, 1.0], [151.0, 2.1333333333333333], [148.0, 3.888888888888889], [152.0, 1.0], [153.0, 0.6], [154.0, 1.0], [155.0, 1.25], [156.0, 1.3333333333333333], [157.0, 1.235294117647059], [158.0, 1.1666666666666665], [159.0, 1.0454545454545454], [160.0, 0.7999999999999998], [161.0, 1.2857142857142858], [162.0, 1.0], [163.0, 2.1739130434782616], [165.0, 2.1666666666666665], [164.0, 4.166666666666666], [166.0, 9.0], [169.0, 0.7142857142857143], [168.0, 10.0], [171.0, 1.1578947368421055], [170.0, 1.0], [172.0, 1.0], [173.0, 1.6666666666666667], [174.0, 1.6666666666666667], [175.0, 1.3333333333333333], [176.0, 1.4000000000000001], [177.0, 1.5862068965517244], [178.0, 1.3333333333333333], [179.0, 1.580645161290323], [180.0, 0.8333333333333334], [181.0, 1.3000000000000003], [182.0, 1.0], [183.0, 2.0000000000000004], [184.0, 4.285714285714286], [185.0, 1.2941176470588238], [186.0, 1.3333333333333333], [187.0, 1.0689655172413792], [188.0, 5.090909090909091], [189.0, 1.48], [190.0, 1.272727272727273], [191.0, 1.6470588235294115], [192.0, 1.0], [193.0, 1.0666666666666667], [195.0, 1.4347826086956526], [196.0, 1.3333333333333333], [197.0, 0.8666666666666666], [198.0, 1.0], [199.0, 4.499999999999999], [201.0, 1.6], [202.0, 1.0], [203.0, 1.4736842105263155], [204.0, 1.0], [205.0, 3.727272727272727], [207.0, 4.076923076923077], [206.0, 2.75], [208.0, 0.8], [209.0, 0.9999999999999999], [210.0, 1.625], [211.0, 0.846153846153846], [212.0, 1.0], [213.0, 2.76], [214.0, 0.5714285714285714], [215.0, 1.3461538461538463], [216.0, 1.0], [217.0, 1.3181818181818181], [218.0, 2.0384615384615383], [219.0, 1.75], [220.0, 1.6666666666666665], [221.0, 0.7272727272727272], [222.0, 1.6363636363636362], [223.0, 1.5], [224.0, 3.9642857142857144], [225.0, 2.36], [226.0, 2.0000000000000004], [227.0, 1.2857142857142858], [228.0, 2.166666666666667], [229.0, 2.2916666666666665], [230.0, 3.285714285714286], [231.0, 3.8181818181818183], [232.0, 3.0588235294117645], [234.0, 2.0], [235.0, 3.5], [236.0, 3.260869565217391], [237.0, 3.6071428571428577], [238.0, 4.289473684210527], [239.0, 4.454545454545454], [233.0, 3.0], [240.0, 1.4193548387096775], [241.0, 1.5555555555555556], [242.0, 3.4285714285714284], [243.0, 2.8571428571428577], [244.0, 1.0], [245.0, 1.5], [246.0, 1.5], [247.0, 1.6666666666666667], [248.0, 2.2000000000000006], [249.0, 1.0], [250.0, 2.0], [251.0, 1.0], [252.0, 2.25], [253.0, 1.0526315789473686], [254.0, 1.3333333333333333], [255.0, 1.7714285714285714], [257.0, 1.4864864864864868], [256.0, 0.5], [258.0, 0.8333333333333334], [259.0, 1.7575757575757571], [260.0, 1.2500000000000004], [261.0, 1.9999999999999996], [262.0, 2.7777777777777777], [263.0, 0.8571428571428572], [264.0, 3.1428571428571432], [271.0, 9.875], [268.0, 4.25], [269.0, 4.0], [270.0, 2.142857142857143], [265.0, 1.811111111111111], [266.0, 1.9000000000000001], [267.0, 1.7142857142857144], [284.0, 4.076923076923077], [274.0, 1.0], [272.0, 1.5], [275.0, 2.6666666666666665], [285.0, 2.875], [286.0, 1.9473684210526314], [287.0, 1.4444444444444444], [278.0, 0.0], [277.0, 2.5], [276.0, 2.0], [279.0, 3.0], [280.0, 1.866666666666667], [281.0, 1.076923076923077], [282.0, 3.8], [283.0, 7.75], [289.0, 3.5], [288.0, 1.4137931034482762], [290.0, 2.083333333333334], [291.0, 1.5454545454545456], [292.0, 2.111111111111111], [293.0, 8.5], [294.0, 0.6666666666666666], [295.0, 1.6666666666666667], [296.0, 5.142857142857143], [302.0, 0.6666666666666666], [303.0, 2.2962962962962963], [300.0, 2.5294117647058822], [301.0, 1.3703703703703705], [297.0, 13.75], [298.0, 2.666666666666667], [299.0, 2.315789473684211], [305.0, 2.6333333333333333], [304.0, 1.0], [306.0, 2.2], [307.0, 3.15], [308.0, 2.090909090909091], [309.0, 3.6363636363636362], [310.0, 1.5], [311.0, 1.5384615384615383], [312.0, 1.0], [318.0, 6.6], [319.0, 2.8620689655172407], [316.0, 1.0], [317.0, 2.9444444444444446], [313.0, 3.555555555555556], [314.0, 2.0], [315.0, 2.125], [321.0, 5.25], [320.0, 3.8333333333333335], [323.0, 4.090909090909091], [322.0, 4.0], [332.0, 4.25], [333.0, 2.407407407407408], [335.0, 3.6500000000000004], [334.0, 6.166666666666667], [324.0, 5.923076923076923], [325.0, 2.2857142857142856], [326.0, 0.75], [327.0, 2.5714285714285716], [328.0, 4.1], [329.0, 3.192307692307693], [330.0, 1.8461538461538465], [331.0, 2.2499999999999996], [337.0, 1.9230769230769236], [336.0, 0.0], [339.0, 3.2142857142857144], [338.0, 15.0], [348.0, 7.096774193548388], [349.0, 4.608695652173913], [350.0, 1.9230769230769231], [351.0, 1.6956521739130437], [340.0, 3.8333333333333335], [341.0, 1.91304347826087], [342.0, 3.3333333333333335], [343.0, 1.6666666666666667], [344.0, 3.5000000000000004], [345.0, 2.2727272727272734], [346.0, 2.666666666666667], [347.0, 1.9444444444444444], [353.0, 3.888888888888889], [352.0, 2.666666666666667], [354.0, 3.4285714285714284], [355.0, 3.2894736842105265], [356.0, 0.875], [357.0, 1.4], [358.0, 1.5999999999999999], [359.0, 2.2413793103448274], [360.0, 2.6428571428571432], [367.0, 4.444444444444445], [366.0, 14.624999999999998], [364.0, 2.666666666666667], [365.0, 7.172413793103448], [361.0, 1.0], [362.0, 1.0], [363.0, 1.6666666666666665], [369.0, 9.090909090909088], [368.0, 3.6000000000000005], [370.0, 1.6875], [371.0, 2.692307692307693], [372.0, 2.0490196078431384], [373.0, 3.187499999999999], [374.0, 1.6666666666666665], [375.0, 3.5909090909090904], [377.0, 8.0], [376.0, 11.0], [382.0, 4.444444444444445], [383.0, 5.133333333333334], [380.0, 3.758620689655172], [381.0, 4.555555555555555], [378.0, 5.5], [379.0, 5.7894736842105265], [385.0, 4.605263157894735], [384.0, 3.6666666666666665], [386.0, 2.5], [387.0, 7.25], [396.0, 4.2], [397.0, 2.8666666666666667], [398.0, 1.7], [399.0, 2.9210526315789473], [388.0, 2.8461538461538463], [389.0, 2.9444444444444446], [391.0, 3.8], [390.0, 6.444444444444445], [392.0, 3.0], [393.0, 3.3124999999999996], [394.0, 4.0], [395.0, 1.68], [401.0, 3.555555555555555], [400.0, 1.6538461538461537], [402.0, 5.909090909090909], [403.0, 1.9259259259259258], [404.0, 1.2000000000000002], [405.0, 2.8888888888888893], [406.0, 3.3600000000000003], [407.0, 1.0277777777777781], [408.0, 1.2777777777777777], [414.0, 2.428571428571429], [415.0, 4.1489361702127665], [412.0, 3.625], [413.0, 2.6999999999999997], [409.0, 0.9199999999999999], [410.0, 2.9999999999999996], [411.0, 3.8148148148148144], [417.0, 2.0487804878048776], [416.0, 1.0666666666666669], [418.0, 2.2608695652173916], [419.0, 4.192307692307692], [420.0, 1.5555555555555556], [421.0, 2.1395348837209305], [422.0, 2.7567567567567575], [423.0, 3.764705882352941], [424.0, 3.458333333333334], [430.0, 1.5714285714285714], [431.0, 1.2500000000000002], [428.0, 5.0], [429.0, 1.6428571428571426], [425.0, 1.5555555555555556], [427.0, 3.0909090909090913], [426.0, 3.0], [433.0, 1.9444444444444442], [432.0, 1.9285714285714288], [434.0, 2.181818181818182], [435.0, 4.263157894736842], [436.0, 6.925925925925925], [437.0, 4.90909090909091], [438.0, 5.279999999999999], [439.0, 2.3392857142857144], [440.0, 3.25], [446.0, 4.0], [447.0, 3.6875], [444.0, 0.49999999999999994], [445.0, 1.6818181818181817], [441.0, 3.484848484848484], [442.0, 7.61764705882353], [443.0, 1.261904761904762], [449.0, 3.1379310344827585], [448.0, 1.6666666666666667], [450.0, 4.0], [451.0, 3.2941176470588247], [452.0, 4.294117647058823], [453.0, 3.3673469387755106], [454.0, 1.3333333333333333], [455.0, 3.03125], [456.0, 6.142857142857143], [462.0, 3.769230769230769], [463.0, 2.395833333333333], [460.0, 5.774193548387096], [461.0, 2.4054054054054053], [457.0, 2.517241379310345], [458.0, 2.9285714285714284], [459.0, 3.261904761904762], [465.0, 4.142857142857142], [464.0, 7.125], [466.0, 6.559999999999999], [467.0, 4.709677419354838], [468.0, 4.846153846153847], [469.0, 1.6486486486486487], [470.0, 11.8], [471.0, 2.606060606060606], [472.0, 7.555555555555555], [478.0, 4.571428571428571], [479.0, 2.0937499999999996], [476.0, 5.428571428571427], [477.0, 2.1], [473.0, 1.6666666666666665], [474.0, 1.5897435897435899], [475.0, 6.727272727272727], [481.0, 5.404255319148936], [480.0, 7.212121212121212], [483.0, 8.703703703703704], [492.0, 6.625], [493.0, 2.142857142857143], [494.0, 1.907216494845361], [495.0, 4.1724137931034475], [482.0, 12.0], [484.0, 3.6], [485.0, 6.382352941176472], [486.0, 3.5], [487.0, 4.906249999999999], [488.0, 6.125], [489.0, 3.9250000000000007], [490.0, 1.5454545454545459], [491.0, 3.0990990990991], [496.0, 4.0625], [497.0, 4.483870967741936], [498.0, 3.8620689655172415], [499.0, 5.253731343283581], [500.0, 6.215194242326925]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[499.88770704315806, 6.213174671065078]], "isOverall": false, "label": "Get Fruit 1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1541726.8, "minX": 1.65234649E12, "maxY": 9313888.0, "series": [{"data": [[1.65234658E12, 6852307.2], [1.65234675E12, 6818432.8], [1.65234662E12, 6851672.4], [1.65234679E12, 3429760.0], [1.65234649E12, 1541726.8], [1.65234666E12, 6824937.2], [1.65234653E12, 6737960.4], [1.6523467E12, 6845398.0], [1.65234657E12, 6855545.6], [1.65234674E12, 6874470.0], [1.65234661E12, 6811275.2], [1.65234678E12, 6894038.4], [1.65234665E12, 6748586.4], [1.65234652E12, 6832232.8], [1.65234669E12, 6810612.8], [1.65234656E12, 6846695.2], [1.65234673E12, 6796242.4], [1.6523466E12, 6847136.8], [1.65234677E12, 6896467.2], [1.65234664E12, 6817006.8], [1.65234651E12, 6776885.6], [1.65234668E12, 6762312.8], [1.65234655E12, 6723102.4], [1.65234672E12, 6837844.8], [1.65234659E12, 6822398.0], [1.65234676E12, 6910304.0], [1.65234663E12, 6854634.8], [1.6523465E12, 6428877.2], [1.65234667E12, 6831809.6], [1.65234654E12, 6793464.0], [1.65234671E12, 6712292.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65234658E12, 9235718.4], [1.65234675E12, 9190061.6], [1.65234662E12, 9234862.8], [1.65234679E12, 4622720.0], [1.65234649E12, 2077979.6], [1.65234666E12, 9198828.4], [1.65234653E12, 9081598.8], [1.6523467E12, 9226406.0], [1.65234657E12, 9240083.2], [1.65234674E12, 9265590.0], [1.65234661E12, 9180414.4], [1.65234678E12, 9291964.8], [1.65234665E12, 9095920.8], [1.65234652E12, 9208661.6], [1.65234669E12, 9179521.6], [1.65234656E12, 9228154.4], [1.65234673E12, 9160152.8], [1.6523466E12, 9228749.6], [1.65234677E12, 9295238.4], [1.65234664E12, 9188139.6], [1.65234651E12, 9134063.2], [1.65234668E12, 9114421.6], [1.65234655E12, 9061572.8], [1.65234672E12, 9216225.6], [1.65234659E12, 9195406.0], [1.65234676E12, 9313888.0], [1.65234663E12, 9238855.6], [1.6523465E12, 8665008.4], [1.65234667E12, 9208091.2], [1.65234654E12, 9156408.0], [1.65234671E12, 9047002.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234679E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.026818010371223, "minX": 1.65234649E12, "maxY": 7.0690590343358295, "series": [{"data": [[1.65234658E12, 6.27664865561652], [1.65234675E12, 6.323818889660307], [1.65234662E12, 6.308575664149455], [1.65234679E12, 6.251325443724036], [1.65234649E12, 7.0690590343358295], [1.65234666E12, 6.220632365668774], [1.65234653E12, 6.229305831192623], [1.6523467E12, 6.050642107047348], [1.65234657E12, 6.164252140361818], [1.65234674E12, 6.298343340034166], [1.65234661E12, 6.044480271348162], [1.65234678E12, 6.376405214446912], [1.65234665E12, 6.162504468756939], [1.65234652E12, 6.24749946739818], [1.65234669E12, 6.153154150710028], [1.65234656E12, 6.231317777008013], [1.65234673E12, 6.314919505499039], [1.6523466E12, 6.241148219974366], [1.65234677E12, 6.203957190971433], [1.65234664E12, 6.203766013523696], [1.65234651E12, 6.0299051608680045], [1.65234668E12, 6.0888096663581335], [1.65234655E12, 6.259973389693128], [1.65234672E12, 6.205881243194926], [1.65234659E12, 6.276916103933271], [1.65234676E12, 6.282630457933764], [1.65234663E12, 6.187386681829294], [1.6523465E12, 6.282108484931871], [1.65234667E12, 6.273603995350307], [1.65234654E12, 6.120075641612634], [1.65234671E12, 6.060659897083213]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.65234658E12, 6.2770987939384515], [1.65234675E12, 6.308815482688457], [1.65234662E12, 6.2978294319683155], [1.65234679E12, 6.275130045860328], [1.65234649E12, 6.9418707270864966], [1.65234666E12, 6.222645761669969], [1.65234653E12, 6.229601927531692], [1.6523467E12, 6.030134426071007], [1.65234657E12, 6.168597887791244], [1.65234674E12, 6.2913189630715864], [1.65234661E12, 6.051916326403954], [1.65234678E12, 6.370101426155177], [1.65234665E12, 6.1386699862982566], [1.65234652E12, 6.235483966402577], [1.65234669E12, 6.166571173752097], [1.65234656E12, 6.24407872969424], [1.65234673E12, 6.303684552493533], [1.6523466E12, 6.253586445708683], [1.65234677E12, 6.198132240964498], [1.65234664E12, 6.192196769607227], [1.65234651E12, 6.026818010371223], [1.65234668E12, 6.081006817674891], [1.65234655E12, 6.25720930232536], [1.65234672E12, 6.1982831810854995], [1.65234659E12, 6.278414360589251], [1.65234676E12, 6.280200788240438], [1.65234663E12, 6.192743636241401], [1.6523465E12, 6.235815385317716], [1.65234667E12, 6.290179967435559], [1.65234654E12, 6.118160574691832], [1.65234671E12, 6.037948218346513]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234679E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.024606467474036, "minX": 1.65234649E12, "maxY": 7.056528161170067, "series": [{"data": [[1.65234658E12, 6.274905737396684], [1.65234675E12, 6.322343768151992], [1.65234662E12, 6.306835394085167], [1.65234679E12, 6.249769545965546], [1.65234649E12, 7.056528161170067], [1.65234666E12, 6.218836699533394], [1.65234653E12, 6.227525981169579], [1.6523467E12, 6.0488340369201685], [1.65234657E12, 6.162498558791982], [1.65234674E12, 6.296737271235422], [1.65234661E12, 6.042760039859571], [1.65234678E12, 6.374800399468156], [1.65234665E12, 6.160580515401373], [1.65234652E12, 6.245700755890225], [1.65234669E12, 6.151196141235998], [1.65234656E12, 6.229798122179228], [1.65234673E12, 6.313072978432036], [1.6523466E12, 6.2393512723678155], [1.65234677E12, 6.202400061964726], [1.65234664E12, 6.2018433105057085], [1.65234651E12, 6.027639453730897], [1.65234668E12, 6.086790398954949], [1.65234655E12, 6.25802963271198], [1.65234672E12, 6.204207587240468], [1.65234659E12, 6.275016794321384], [1.65234676E12, 6.2809318423855265], [1.65234663E12, 6.18578011178954], [1.6523465E12, 6.279791436971586], [1.65234667E12, 6.271836117449514], [1.65234654E12, 6.118211693564819], [1.65234671E12, 6.058803661945592]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.65234658E12, 6.275372396980008], [1.65234675E12, 6.307230555667815], [1.65234662E12, 6.29607589871923], [1.65234679E12, 6.273536545182447], [1.65234649E12, 6.927044232375926], [1.65234666E12, 6.220799141658614], [1.65234653E12, 6.227763451199698], [1.6523467E12, 6.028448058260296], [1.65234657E12, 6.16698592487696], [1.65234674E12, 6.289670326140952], [1.65234661E12, 6.050151733381583], [1.65234678E12, 6.368484796747529], [1.65234665E12, 6.137021974399902], [1.65234652E12, 6.2336335738664745], [1.65234669E12, 6.164841490770413], [1.65234656E12, 6.242413645619515], [1.65234673E12, 6.302003356976528], [1.6523466E12, 6.251841615675079], [1.65234677E12, 6.196357230237004], [1.65234664E12, 6.190297490739609], [1.65234651E12, 6.024606467474036], [1.65234668E12, 6.079148688427568], [1.65234655E12, 6.255365253077847], [1.65234672E12, 6.196512627619542], [1.65234659E12, 6.276594482669367], [1.65234676E12, 6.278517788666272], [1.65234663E12, 6.190908724561661], [1.6523465E12, 6.233615689452068], [1.65234667E12, 6.288279472498039], [1.65234654E12, 6.116370755271289], [1.65234671E12, 6.036103760340971]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234679E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65234649E12, "maxY": 0.01427344292387899, "series": [{"data": [[1.65234658E12, 0.0], [1.65234675E12, 0.0], [1.65234662E12, 0.0], [1.65234679E12, 0.0], [1.65234649E12, 0.012288730689137651], [1.65234666E12, 0.0], [1.65234653E12, 0.0], [1.6523467E12, 0.0], [1.65234657E12, 0.0], [1.65234674E12, 0.0], [1.65234661E12, 1.26924458343124E-4], [1.65234678E12, 0.0], [1.65234665E12, 0.0], [1.65234652E12, 0.0], [1.65234669E12, 0.0], [1.65234656E12, 0.0], [1.65234673E12, 1.2725333160052427E-4], [1.6523466E12, 0.0], [1.65234677E12, 0.0], [1.65234664E12, 0.0], [1.65234651E12, 0.0], [1.65234668E12, 0.0], [1.65234655E12, 3.695875949977053E-4], [1.65234672E12, 0.0], [1.65234659E12, 0.0], [1.65234676E12, 0.0], [1.65234663E12, 0.0], [1.6523465E12, 0.0], [1.65234667E12, 1.3454169716278473E-4], [1.65234654E12, 0.0], [1.65234671E12, 0.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.65234658E12, 0.0], [1.65234675E12, 0.0], [1.65234662E12, 0.0], [1.65234679E12, 0.0], [1.65234649E12, 0.01427344292387899], [1.65234666E12, 0.0], [1.65234653E12, 0.0], [1.6523467E12, 0.0], [1.65234657E12, 0.0], [1.65234674E12, 0.0], [1.65234661E12, 2.0537376674402975E-4], [1.65234678E12, 0.0], [1.65234665E12, 0.0], [1.65234652E12, 0.0], [1.65234669E12, 0.0], [1.65234656E12, 0.0], [1.65234673E12, 1.1099680545779076E-4], [1.6523466E12, 0.0], [1.65234677E12, 0.0], [1.65234664E12, 0.0], [1.65234651E12, 0.0], [1.65234668E12, 0.0], [1.65234655E12, 6.839945280437709E-4], [1.65234672E12, 0.0], [1.65234659E12, 0.0], [1.65234676E12, 0.0], [1.65234663E12, 0.0], [1.6523465E12, 0.0], [1.65234667E12, 1.105252374944718E-4], [1.65234654E12, 0.0], [1.65234671E12, 0.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234679E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65234649E12, "maxY": 170.0, "series": [{"data": [[1.65234658E12, 67.0], [1.65234675E12, 63.0], [1.65234662E12, 74.0], [1.65234679E12, 59.0], [1.65234649E12, 170.0], [1.65234666E12, 56.0], [1.65234653E12, 71.0], [1.6523467E12, 66.0], [1.65234657E12, 55.0], [1.65234674E12, 60.0], [1.65234661E12, 65.0], [1.65234678E12, 76.0], [1.65234665E12, 60.0], [1.65234652E12, 60.0], [1.65234669E12, 60.0], [1.65234656E12, 56.0], [1.65234673E12, 52.0], [1.6523466E12, 53.0], [1.65234677E12, 73.0], [1.65234664E12, 68.0], [1.65234651E12, 66.0], [1.65234668E12, 53.0], [1.65234655E12, 76.0], [1.65234672E12, 56.0], [1.65234659E12, 71.0], [1.65234676E12, 64.0], [1.65234663E12, 55.0], [1.6523465E12, 68.0], [1.65234667E12, 55.0], [1.65234654E12, 53.0], [1.65234671E12, 50.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65234658E12, 12.0], [1.65234675E12, 12.0], [1.65234662E12, 11.0], [1.65234679E12, 12.0], [1.65234649E12, 13.0], [1.65234666E12, 12.0], [1.65234653E12, 11.0], [1.6523467E12, 12.0], [1.65234657E12, 12.0], [1.65234674E12, 11.0], [1.65234661E12, 12.0], [1.65234678E12, 11.0], [1.65234665E12, 12.0], [1.65234652E12, 12.0], [1.65234669E12, 12.0], [1.65234656E12, 12.0], [1.65234673E12, 13.0], [1.6523466E12, 12.0], [1.65234677E12, 12.0], [1.65234664E12, 11.0], [1.65234651E12, 13.0], [1.65234668E12, 12.0], [1.65234655E12, 11.0], [1.65234672E12, 12.0], [1.65234659E12, 12.0], [1.65234676E12, 11.0], [1.65234663E12, 12.0], [1.6523465E12, 12.0], [1.65234667E12, 12.0], [1.65234654E12, 9.0], [1.65234671E12, 12.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65234658E12, 27.0], [1.65234675E12, 22.0], [1.65234662E12, 19.0], [1.65234679E12, 21.0], [1.65234649E12, 31.0], [1.65234666E12, 20.0], [1.65234653E12, 18.0], [1.6523467E12, 25.0], [1.65234657E12, 23.0], [1.65234674E12, 21.0], [1.65234661E12, 25.0], [1.65234678E12, 21.0], [1.65234665E12, 22.0], [1.65234652E12, 24.0], [1.65234669E12, 21.0], [1.65234656E12, 23.9900000000016], [1.65234673E12, 23.0], [1.6523466E12, 21.0], [1.65234677E12, 27.0], [1.65234664E12, 19.0], [1.65234651E12, 22.0], [1.65234668E12, 21.0], [1.65234655E12, 17.0], [1.65234672E12, 20.9900000000016], [1.65234659E12, 22.0], [1.65234676E12, 20.0], [1.65234663E12, 19.0], [1.6523465E12, 19.0], [1.65234667E12, 20.0], [1.65234654E12, 21.0], [1.65234671E12, 22.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65234658E12, 16.0], [1.65234675E12, 14.0], [1.65234662E12, 13.0], [1.65234679E12, 14.0], [1.65234649E12, 17.0], [1.65234666E12, 14.0], [1.65234653E12, 13.0], [1.6523467E12, 15.0], [1.65234657E12, 15.0], [1.65234674E12, 13.0], [1.65234661E12, 15.0], [1.65234678E12, 14.0], [1.65234665E12, 14.0], [1.65234652E12, 15.0], [1.65234669E12, 14.0], [1.65234656E12, 15.0], [1.65234673E12, 17.0], [1.6523466E12, 15.0], [1.65234677E12, 16.0], [1.65234664E12, 14.0], [1.65234651E12, 15.0], [1.65234668E12, 14.0], [1.65234655E12, 13.0], [1.65234672E12, 14.0], [1.65234659E12, 14.0], [1.65234676E12, 14.0], [1.65234663E12, 14.0], [1.6523465E12, 14.0], [1.65234667E12, 15.0], [1.65234654E12, 12.0], [1.65234671E12, 14.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65234658E12, 0.0], [1.65234675E12, 0.0], [1.65234662E12, 0.0], [1.65234679E12, 0.0], [1.65234649E12, 0.0], [1.65234666E12, 0.0], [1.65234653E12, 0.0], [1.6523467E12, 0.0], [1.65234657E12, 0.0], [1.65234674E12, 0.0], [1.65234661E12, 0.0], [1.65234678E12, 0.0], [1.65234665E12, 0.0], [1.65234652E12, 0.0], [1.65234669E12, 0.0], [1.65234656E12, 0.0], [1.65234673E12, 0.0], [1.6523466E12, 0.0], [1.65234677E12, 0.0], [1.65234664E12, 0.0], [1.65234651E12, 0.0], [1.65234668E12, 0.0], [1.65234655E12, 0.0], [1.65234672E12, 0.0], [1.65234659E12, 0.0], [1.65234676E12, 0.0], [1.65234663E12, 0.0], [1.6523465E12, 0.0], [1.65234667E12, 0.0], [1.65234654E12, 0.0], [1.65234671E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65234658E12, 6.0], [1.65234675E12, 6.0], [1.65234662E12, 6.0], [1.65234679E12, 5.0], [1.65234649E12, 5.0], [1.65234666E12, 6.0], [1.65234653E12, 5.0], [1.6523467E12, 6.0], [1.65234657E12, 5.0], [1.65234674E12, 6.0], [1.65234661E12, 5.0], [1.65234678E12, 6.0], [1.65234665E12, 6.0], [1.65234652E12, 5.0], [1.65234669E12, 6.0], [1.65234656E12, 5.0], [1.65234673E12, 5.0], [1.6523466E12, 6.0], [1.65234677E12, 5.0], [1.65234664E12, 5.0], [1.65234651E12, 5.0], [1.65234668E12, 5.0], [1.65234655E12, 5.0], [1.65234672E12, 6.0], [1.65234659E12, 6.0], [1.65234676E12, 6.0], [1.65234663E12, 5.0], [1.6523465E12, 5.0], [1.65234667E12, 6.0], [1.65234654E12, 4.0], [1.65234671E12, 5.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234679E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 13681.0, "maxY": 6.0, "series": [{"data": [[72719.0, 5.0], [75183.0, 6.0], [75119.0, 5.0], [74927.0, 6.0], [62951.0, 6.0], [73486.0, 5.0], [73646.0, 5.0], [73198.0, 6.0], [73422.0, 5.0], [74574.0, 6.0], [74254.0, 5.0], [74894.0, 6.0], [74542.0, 5.0], [72205.0, 5.0], [74285.0, 5.0], [73965.0, 6.0], [75181.0, 5.0], [74317.0, 6.0], [75693.0, 6.0], [63878.0, 5.0], [73484.0, 6.0], [73964.0, 5.0], [74764.0, 6.0], [74508.0, 6.0], [71051.0, 4.0], [73515.0, 6.0], [73419.0, 5.0], [73611.0, 5.0], [74091.0, 5.0], [74187.0, 6.0], [74795.0, 5.0], [75179.0, 6.0], [74699.0, 5.0], [74379.0, 6.0], [74539.0, 6.0], [74251.0, 6.0], [73995.0, 6.0], [74059.0, 6.0], [73867.0, 6.0], [73803.0, 6.0], [75275.0, 6.0], [13681.0, 1.0], [73290.0, 6.0], [74282.0, 6.0], [74634.0, 5.0], [74602.0, 6.0], [74570.0, 5.0], [74506.0, 6.0], [75914.0, 6.0], [72809.0, 5.0], [73225.0, 6.0], [72425.0, 6.0], [74249.0, 5.0], [75145.0, 6.0], [75721.0, 4.0], [73897.0, 5.0], [75081.0, 6.0], [74473.0, 5.0], [74729.0, 5.0], [74185.0, 6.0], [57028.0, 6.0], [73896.0, 6.0], [74504.0, 6.0], [74088.0, 5.0], [74888.0, 4.0], [73575.0, 6.0], [73479.0, 5.0], [72455.0, 4.0], [74183.0, 6.0], [75015.0, 5.0], [73767.0, 5.0], [54787.0, 5.0], [72678.0, 6.0], [73478.0, 6.0], [74406.0, 5.0], [74886.0, 5.0], [74374.0, 6.0], [73894.0, 6.0], [74182.0, 5.0], [73477.0, 4.0], [73285.0, 6.0], [73669.0, 5.0], [73413.0, 6.0], [74181.0, 5.0], [75493.0, 6.0], [74149.0, 6.0], [74117.0, 6.0], [74245.0, 6.0], [74501.0, 6.0], [74661.0, 5.0], [74309.0, 6.0], [74757.0, 5.0], [73060.0, 6.0], [73284.0, 5.0], [69924.0, 4.0], [74020.0, 6.0], [74692.0, 5.0], [74308.0, 6.0], [74116.0, 4.0], [75460.0, 5.0], [75140.0, 5.0], [74884.0, 5.0], [74724.0, 6.0], [73923.0, 5.0], [74947.0, 5.0], [75235.0, 5.0], [75331.0, 6.0], [74819.0, 5.0], [74883.0, 5.0], [74563.0, 5.0], [74659.0, 6.0], [74627.0, 5.0], [74595.0, 6.0], [74019.0, 5.0], [61617.0, 5.0], [63905.0, 6.0], [73602.0, 5.0], [75650.0, 5.0], [74274.0, 6.0], [74626.0, 5.0], [74914.0, 5.0], [75554.0, 5.0], [74338.0, 5.0], [74850.0, 5.0], [74818.0, 5.0], [74658.0, 5.0], [75714.0, 5.0], [27024.0, 5.0], [73313.0, 5.0], [74401.0, 5.0], [74497.0, 6.0], [74049.0, 5.0], [74881.0, 5.0], [74593.0, 6.0], [74657.0, 5.0], [74721.0, 6.0], [63312.0, 5.0], [73088.0, 6.0], [73056.0, 5.0], [71584.0, 5.0], [74400.0, 6.0], [75296.0, 6.0], [73183.0, 6.0], [73215.0, 5.0], [73663.0, 6.0], [73983.0, 5.0], [74015.0, 5.0], [74847.0, 5.0], [74559.0, 5.0], [74495.0, 6.0], [74815.0, 5.0], [75679.0, 6.0], [74751.0, 5.0], [75743.0, 6.0], [72446.0, 6.0], [74366.0, 6.0], [73918.0, 5.0], [74558.0, 6.0], [73886.0, 5.0], [74718.0, 6.0], [74686.0, 6.0], [74494.0, 5.0], [73982.0, 6.0], [75102.0, 5.0], [74462.0, 6.0], [73693.0, 5.0], [70461.0, 6.0], [74813.0, 6.0], [75005.0, 5.0], [75037.0, 6.0], [74205.0, 5.0], [75965.0, 5.0], [73500.0, 5.0], [74620.0, 5.0], [74876.0, 5.0], [75004.0, 5.0], [74396.0, 6.0], [74140.0, 6.0], [66203.0, 5.0], [35181.0, 6.0], [72827.0, 5.0], [75003.0, 5.0], [73915.0, 6.0], [74651.0, 5.0], [74523.0, 5.0], [74267.0, 4.0], [74971.0, 6.0], [75579.0, 6.0], [72378.0, 5.0], [73082.0, 5.5], [75098.0, 6.0], [74138.0, 6.0], [74970.0, 5.0], [75066.0, 5.0], [74234.0, 5.0], [74682.0, 5.0], [74714.0, 6.0], [74874.0, 5.0], [74778.0, 5.0], [73177.0, 5.0], [72345.0, 6.0], [74649.0, 5.0], [74393.0, 5.0], [74617.0, 5.0], [74169.0, 6.0], [74489.0, 5.0], [73240.0, 5.0], [72344.0, 6.0], [74360.0, 6.0], [75160.0, 5.0], [74520.0, 5.0], [74200.0, 5.0], [74808.0, 6.0], [73399.0, 5.0], [73527.0, 6.0], [73687.0, 5.0], [73911.0, 6.0], [74359.0, 6.0], [74487.0, 5.0], [74647.0, 5.0], [74295.0, 6.0], [74423.0, 5.0], [75127.0, 6.0], [75159.0, 6.0], [75639.0, 5.0], [74903.0, 5.0], [74999.0, 5.0], [74166.0, 6.0], [74678.0, 6.0], [74038.0, 5.0], [74614.0, 5.0], [74294.0, 6.0], [74102.0, 6.0], [75062.0, 6.0], [75222.0, 5.0], [66101.0, 6.0], [72533.0, 5.0], [73397.0, 5.0], [70581.0, 6.0], [73845.0, 5.0], [36906.0, 5.0], [74581.0, 6.0], [74965.0, 6.0], [75221.0, 5.0], [75701.0, 6.0], [75061.0, 5.0], [74325.0, 5.0], [74517.0, 6.0], [74933.0, 5.0], [74452.0, 6.0], [75060.0, 5.0], [75028.0, 6.0], [74836.0, 6.0], [74004.0, 5.0], [74772.0, 6.0], [74612.0, 6.0], [73715.0, 5.0], [73523.0, 6.0], [74739.0, 5.0], [74067.0, 5.0], [73779.0, 5.0], [75123.0, 5.0], [74130.0, 5.0], [74738.0, 5.0], [74930.0, 5.0], [74546.0, 5.0], [75186.0, 5.0], [74066.0, 6.0], [74866.0, 6.0], [75666.0, 6.0], [73521.0, 6.0], [73457.0, 5.0], [75185.0, 6.0], [74929.0, 6.0], [74705.0, 6.0], [75153.0, 5.0], [74801.0, 6.0], [74224.0, 5.0], [74160.0, 6.0], [74480.0, 5.0], [74384.0, 5.0], [74768.0, 6.0], [74800.0, 6.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 75965.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 13681.0, "maxY": 6.0, "series": [{"data": [[72719.0, 5.0], [75183.0, 6.0], [75119.0, 5.0], [74927.0, 6.0], [62951.0, 6.0], [73486.0, 5.0], [73646.0, 5.0], [73198.0, 6.0], [73422.0, 5.0], [74574.0, 6.0], [74254.0, 5.0], [74894.0, 6.0], [74542.0, 5.0], [72205.0, 5.0], [74285.0, 5.0], [73965.0, 6.0], [75181.0, 5.0], [74317.0, 6.0], [75693.0, 6.0], [63878.0, 5.0], [73484.0, 6.0], [73964.0, 5.0], [74764.0, 6.0], [74508.0, 6.0], [71051.0, 4.0], [73515.0, 6.0], [73419.0, 5.0], [73611.0, 5.0], [74091.0, 5.0], [74187.0, 6.0], [74795.0, 5.0], [75179.0, 6.0], [74699.0, 5.0], [74379.0, 6.0], [74539.0, 6.0], [74251.0, 6.0], [73995.0, 6.0], [74059.0, 6.0], [73867.0, 6.0], [73803.0, 6.0], [75275.0, 6.0], [13681.0, 1.0], [73290.0, 6.0], [74282.0, 6.0], [74634.0, 5.0], [74602.0, 6.0], [74570.0, 5.0], [74506.0, 6.0], [75914.0, 6.0], [72809.0, 5.0], [73225.0, 6.0], [72425.0, 6.0], [74249.0, 5.0], [75145.0, 6.0], [75721.0, 4.0], [73897.0, 5.0], [75081.0, 6.0], [74473.0, 5.0], [74729.0, 5.0], [74185.0, 6.0], [57028.0, 6.0], [73896.0, 6.0], [74504.0, 6.0], [74088.0, 5.0], [74888.0, 4.0], [73575.0, 6.0], [73479.0, 5.0], [72455.0, 4.0], [74183.0, 6.0], [75015.0, 5.0], [73767.0, 5.0], [54787.0, 5.0], [72678.0, 6.0], [73478.0, 6.0], [74406.0, 5.0], [74886.0, 5.0], [74374.0, 6.0], [73894.0, 6.0], [74182.0, 5.0], [73477.0, 4.0], [73285.0, 6.0], [73669.0, 5.0], [73413.0, 6.0], [74181.0, 5.0], [75493.0, 6.0], [74149.0, 6.0], [74117.0, 6.0], [74245.0, 6.0], [74501.0, 6.0], [74661.0, 5.0], [74309.0, 6.0], [74757.0, 5.0], [73060.0, 6.0], [73284.0, 5.0], [69924.0, 4.0], [74020.0, 6.0], [74692.0, 5.0], [74308.0, 6.0], [74116.0, 4.0], [75460.0, 5.0], [75140.0, 5.0], [74884.0, 5.0], [74724.0, 6.0], [73923.0, 5.0], [74947.0, 5.0], [75235.0, 5.0], [75331.0, 6.0], [74819.0, 5.0], [74883.0, 5.0], [74563.0, 5.0], [74659.0, 6.0], [74627.0, 5.0], [74595.0, 6.0], [74019.0, 5.0], [61617.0, 5.0], [63905.0, 6.0], [73602.0, 5.0], [75650.0, 5.0], [74274.0, 6.0], [74626.0, 5.0], [74914.0, 5.0], [75554.0, 5.0], [74338.0, 5.0], [74850.0, 5.0], [74818.0, 5.0], [74658.0, 5.0], [75714.0, 5.0], [27024.0, 5.0], [73313.0, 5.0], [74401.0, 5.0], [74497.0, 6.0], [74049.0, 5.0], [74881.0, 5.0], [74593.0, 6.0], [74657.0, 5.0], [74721.0, 6.0], [63312.0, 5.0], [73088.0, 6.0], [73056.0, 5.0], [71584.0, 5.0], [74400.0, 6.0], [75296.0, 6.0], [73183.0, 6.0], [73215.0, 5.0], [73663.0, 6.0], [73983.0, 5.0], [74015.0, 5.0], [74847.0, 5.0], [74559.0, 5.0], [74495.0, 6.0], [74815.0, 5.0], [75679.0, 6.0], [74751.0, 5.0], [75743.0, 6.0], [72446.0, 6.0], [74366.0, 6.0], [73918.0, 5.0], [74558.0, 6.0], [73886.0, 5.0], [74718.0, 6.0], [74686.0, 6.0], [74494.0, 5.0], [73982.0, 6.0], [75102.0, 5.0], [74462.0, 6.0], [73693.0, 5.0], [70461.0, 6.0], [74813.0, 6.0], [75005.0, 5.0], [75037.0, 6.0], [74205.0, 5.0], [75965.0, 5.0], [73500.0, 5.0], [74620.0, 5.0], [74876.0, 5.0], [75004.0, 5.0], [74396.0, 6.0], [74140.0, 6.0], [66203.0, 5.0], [35181.0, 6.0], [72827.0, 5.0], [75003.0, 5.0], [73915.0, 6.0], [74651.0, 5.0], [74523.0, 5.0], [74267.0, 4.0], [74971.0, 6.0], [75579.0, 6.0], [72378.0, 5.0], [73082.0, 5.0], [75098.0, 6.0], [74138.0, 6.0], [74970.0, 5.0], [75066.0, 5.0], [74234.0, 5.0], [74682.0, 5.0], [74714.0, 6.0], [74874.0, 5.0], [74778.0, 5.0], [73177.0, 5.0], [72345.0, 6.0], [74649.0, 5.0], [74393.0, 5.0], [74617.0, 5.0], [74169.0, 6.0], [74489.0, 5.0], [73240.0, 5.0], [72344.0, 6.0], [74360.0, 6.0], [75160.0, 5.0], [74520.0, 5.0], [74200.0, 5.0], [74808.0, 6.0], [73399.0, 5.0], [73527.0, 6.0], [73687.0, 5.0], [73911.0, 6.0], [74359.0, 6.0], [74487.0, 5.0], [74647.0, 5.0], [74295.0, 6.0], [74423.0, 5.0], [75127.0, 6.0], [75159.0, 6.0], [75639.0, 5.0], [74903.0, 5.0], [74999.0, 5.0], [74166.0, 6.0], [74678.0, 6.0], [74038.0, 5.0], [74614.0, 5.0], [74294.0, 6.0], [74102.0, 6.0], [75062.0, 6.0], [75222.0, 5.0], [66101.0, 6.0], [72533.0, 5.0], [73397.0, 5.0], [70581.0, 6.0], [73845.0, 5.0], [36906.0, 5.0], [74581.0, 6.0], [74965.0, 6.0], [75221.0, 5.0], [75701.0, 6.0], [75061.0, 5.0], [74325.0, 5.0], [74517.0, 6.0], [74933.0, 5.0], [74452.0, 6.0], [75060.0, 5.0], [75028.0, 6.0], [74836.0, 6.0], [74004.0, 5.0], [74772.0, 6.0], [74612.0, 6.0], [73715.0, 5.0], [73523.0, 6.0], [74739.0, 5.0], [74067.0, 5.0], [73779.0, 5.0], [75123.0, 5.0], [74130.0, 5.0], [74738.0, 5.0], [74930.0, 5.0], [74546.0, 5.0], [75186.0, 5.0], [74066.0, 6.0], [74866.0, 6.0], [75666.0, 6.0], [73521.0, 6.0], [73457.0, 5.0], [75185.0, 6.0], [74929.0, 6.0], [74705.0, 6.0], [75153.0, 5.0], [74801.0, 6.0], [74224.0, 5.0], [74160.0, 6.0], [74480.0, 5.0], [74384.0, 5.0], [74768.0, 6.0], [74800.0, 6.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 75965.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16769.2, "minX": 1.65234649E12, "maxY": 75113.3, "series": [{"data": [[1.65234658E12, 74481.5], [1.65234675E12, 74113.1], [1.65234662E12, 74471.4], [1.65234679E12, 37230.6], [1.65234649E12, 16769.2], [1.65234666E12, 74186.9], [1.65234653E12, 73247.2], [1.6523467E12, 74407.8], [1.65234657E12, 74537.2], [1.65234674E12, 74722.8], [1.65234661E12, 74051.8], [1.65234678E12, 74927.7], [1.65234665E12, 73352.0], [1.65234652E12, 74253.6], [1.65234669E12, 74031.6], [1.65234656E12, 74400.4], [1.65234673E12, 73880.6], [1.6523466E12, 74433.7], [1.65234677E12, 74968.5], [1.65234664E12, 74097.3], [1.65234651E12, 73661.7], [1.65234668E12, 73500.4], [1.65234655E12, 73077.2], [1.65234672E12, 74318.3], [1.65234659E12, 74132.7], [1.65234676E12, 75113.3], [1.65234663E12, 74510.3], [1.6523465E12, 69917.8], [1.65234667E12, 74256.6], [1.65234654E12, 73842.5], [1.65234671E12, 72956.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234679E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 16757.9, "minX": 1.65234649E12, "maxY": 75112.0, "series": [{"data": [[1.65234658E12, 74481.6], [1.65234675E12, 74113.4], [1.65234662E12, 74474.7], [1.65234679E12, 37280.0], [1.65234649E12, 16757.9], [1.65234666E12, 74184.1], [1.65234653E12, 73238.7], [1.6523467E12, 74406.5], [1.65234657E12, 74516.8], [1.65234674E12, 74722.5], [1.65234661E12, 74035.6], [1.65234678E12, 74935.2], [1.65234665E12, 73354.2], [1.65234652E12, 74263.4], [1.65234669E12, 74028.4], [1.65234656E12, 74420.6], [1.65234673E12, 73872.2], [1.6523466E12, 74425.4], [1.65234677E12, 74961.6], [1.65234664E12, 74097.9], [1.65234651E12, 73661.8], [1.65234668E12, 73503.4], [1.65234655E12, 73077.2], [1.65234672E12, 74324.4], [1.65234659E12, 74156.5], [1.65234676E12, 75112.0], [1.65234663E12, 74506.9], [1.6523465E12, 69879.1], [1.65234667E12, 74258.8], [1.65234654E12, 73842.0], [1.65234671E12, 72959.7]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234679E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8259.6, "minX": 1.65234649E12, "maxY": 37560.0, "series": [{"data": [[1.65234658E12, 37245.2], [1.65234675E12, 37099.5], [1.65234662E12, 37239.1], [1.65234679E12, 18512.7], [1.65234649E12, 8498.3], [1.65234666E12, 37094.8], [1.65234653E12, 36606.4], [1.6523467E12, 37239.8], [1.65234657E12, 37221.7], [1.65234674E12, 37364.2], [1.65234661E12, 37005.7], [1.65234678E12, 37485.4], [1.65234665E12, 36710.9], [1.65234652E12, 37181.3], [1.65234669E12, 37001.0], [1.65234656E12, 37175.3], [1.65234673E12, 36938.0], [1.6523466E12, 37195.6], [1.65234677E12, 37520.9], [1.65234664E12, 37066.7], [1.65234651E12, 36852.1], [1.65234668E12, 36757.4], [1.65234655E12, 36550.0], [1.65234672E12, 37220.0], [1.65234659E12, 37090.4], [1.65234676E12, 37552.0], [1.65234663E12, 37222.5], [1.6523465E12, 35050.3], [1.65234667E12, 37095.6], [1.65234654E12, 36931.1], [1.65234671E12, 36541.9]], "isOverall": false, "label": "Get Fruit 1-success", "isController": false}, {"data": [[1.65234658E12, 37236.4], [1.65234675E12, 37013.9], [1.65234662E12, 37235.6], [1.65234679E12, 18767.3], [1.65234649E12, 8259.6], [1.65234666E12, 37089.3], [1.65234653E12, 36632.3], [1.6523467E12, 37166.7], [1.65234657E12, 37295.1], [1.65234674E12, 37358.3], [1.65234661E12, 37029.9], [1.65234678E12, 37449.8], [1.65234665E12, 36643.3], [1.65234652E12, 37082.1], [1.65234669E12, 37027.4], [1.65234656E12, 37245.3], [1.65234673E12, 36934.2], [1.6523466E12, 37229.8], [1.65234677E12, 37440.7], [1.65234664E12, 37031.2], [1.65234651E12, 36809.7], [1.65234668E12, 36746.0], [1.65234655E12, 36527.2], [1.65234672E12, 37104.4], [1.65234659E12, 37066.1], [1.65234676E12, 37560.0], [1.65234663E12, 37284.4], [1.6523465E12, 34828.8], [1.65234667E12, 37163.2], [1.65234654E12, 36910.9], [1.65234671E12, 36417.8]], "isOverall": false, "label": "Get Fruit 2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234679E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16757.9, "minX": 1.65234649E12, "maxY": 75112.0, "series": [{"data": [[1.65234658E12, 74481.6], [1.65234675E12, 74113.4], [1.65234662E12, 74474.7], [1.65234679E12, 37280.0], [1.65234649E12, 16757.9], [1.65234666E12, 74184.1], [1.65234653E12, 73238.7], [1.6523467E12, 74406.5], [1.65234657E12, 74516.8], [1.65234674E12, 74722.5], [1.65234661E12, 74035.6], [1.65234678E12, 74935.2], [1.65234665E12, 73354.2], [1.65234652E12, 74263.4], [1.65234669E12, 74028.4], [1.65234656E12, 74420.6], [1.65234673E12, 73872.2], [1.6523466E12, 74425.4], [1.65234677E12, 74961.6], [1.65234664E12, 74097.9], [1.65234651E12, 73661.8], [1.65234668E12, 73503.4], [1.65234655E12, 73077.2], [1.65234672E12, 74324.4], [1.65234659E12, 74156.5], [1.65234676E12, 75112.0], [1.65234663E12, 74506.9], [1.6523465E12, 69879.1], [1.65234667E12, 74258.8], [1.65234654E12, 73842.0], [1.65234671E12, 72959.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234679E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

