/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1076.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 5.0], [23.3, 5.0], [23.4, 5.0], [23.5, 5.0], [23.6, 5.0], [23.7, 5.0], [23.8, 5.0], [23.9, 5.0], [24.0, 5.0], [24.1, 5.0], [24.2, 5.0], [24.3, 5.0], [24.4, 5.0], [24.5, 5.0], [24.6, 5.0], [24.7, 5.0], [24.8, 5.0], [24.9, 5.0], [25.0, 5.0], [25.1, 5.0], [25.2, 5.0], [25.3, 5.0], [25.4, 5.0], [25.5, 5.0], [25.6, 5.0], [25.7, 5.0], [25.8, 5.0], [25.9, 5.0], [26.0, 5.0], [26.1, 5.0], [26.2, 5.0], [26.3, 5.0], [26.4, 5.0], [26.5, 5.0], [26.6, 5.0], [26.7, 5.0], [26.8, 5.0], [26.9, 5.0], [27.0, 5.0], [27.1, 5.0], [27.2, 5.0], [27.3, 5.0], [27.4, 5.0], [27.5, 5.0], [27.6, 5.0], [27.7, 5.0], [27.8, 5.0], [27.9, 5.0], [28.0, 5.0], [28.1, 5.0], [28.2, 5.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 5.0], [28.7, 5.0], [28.8, 5.0], [28.9, 5.0], [29.0, 6.0], [29.1, 6.0], [29.2, 6.0], [29.3, 6.0], [29.4, 6.0], [29.5, 6.0], [29.6, 6.0], [29.7, 6.0], [29.8, 6.0], [29.9, 6.0], [30.0, 6.0], [30.1, 6.0], [30.2, 6.0], [30.3, 6.0], [30.4, 6.0], [30.5, 6.0], [30.6, 6.0], [30.7, 6.0], [30.8, 6.0], [30.9, 6.0], [31.0, 6.0], [31.1, 6.0], [31.2, 6.0], [31.3, 6.0], [31.4, 6.0], [31.5, 6.0], [31.6, 6.0], [31.7, 6.0], [31.8, 6.0], [31.9, 6.0], [32.0, 6.0], [32.1, 6.0], [32.2, 6.0], [32.3, 6.0], [32.4, 6.0], [32.5, 6.0], [32.6, 6.0], [32.7, 6.0], [32.8, 6.0], [32.9, 6.0], [33.0, 6.0], [33.1, 6.0], [33.2, 6.0], [33.3, 6.0], [33.4, 6.0], [33.5, 6.0], [33.6, 6.0], [33.7, 6.0], [33.8, 6.0], [33.9, 6.0], [34.0, 6.0], [34.1, 6.0], [34.2, 6.0], [34.3, 6.0], [34.4, 6.0], [34.5, 6.0], [34.6, 6.0], [34.7, 6.0], [34.8, 6.0], [34.9, 7.0], [35.0, 7.0], [35.1, 7.0], [35.2, 7.0], [35.3, 7.0], [35.4, 7.0], [35.5, 7.0], [35.6, 7.0], [35.7, 7.0], [35.8, 7.0], [35.9, 7.0], [36.0, 7.0], [36.1, 7.0], [36.2, 7.0], [36.3, 7.0], [36.4, 7.0], [36.5, 7.0], [36.6, 7.0], [36.7, 7.0], [36.8, 7.0], [36.9, 7.0], [37.0, 7.0], [37.1, 7.0], [37.2, 7.0], [37.3, 7.0], [37.4, 7.0], [37.5, 7.0], [37.6, 7.0], [37.7, 7.0], [37.8, 7.0], [37.9, 7.0], [38.0, 7.0], [38.1, 7.0], [38.2, 7.0], [38.3, 7.0], [38.4, 7.0], [38.5, 7.0], [38.6, 7.0], [38.7, 7.0], [38.8, 7.0], [38.9, 7.0], [39.0, 7.0], [39.1, 7.0], [39.2, 7.0], [39.3, 7.0], [39.4, 7.0], [39.5, 7.0], [39.6, 7.0], [39.7, 7.0], [39.8, 7.0], [39.9, 7.0], [40.0, 7.0], [40.1, 7.0], [40.2, 7.0], [40.3, 7.0], [40.4, 7.0], [40.5, 7.0], [40.6, 8.0], [40.7, 8.0], [40.8, 8.0], [40.9, 8.0], [41.0, 8.0], [41.1, 8.0], [41.2, 8.0], [41.3, 8.0], [41.4, 8.0], [41.5, 8.0], [41.6, 8.0], [41.7, 8.0], [41.8, 8.0], [41.9, 8.0], [42.0, 8.0], [42.1, 8.0], [42.2, 8.0], [42.3, 8.0], [42.4, 8.0], [42.5, 8.0], [42.6, 8.0], [42.7, 8.0], [42.8, 8.0], [42.9, 8.0], [43.0, 8.0], [43.1, 8.0], [43.2, 8.0], [43.3, 8.0], [43.4, 8.0], [43.5, 8.0], [43.6, 8.0], [43.7, 8.0], [43.8, 8.0], [43.9, 8.0], [44.0, 8.0], [44.1, 8.0], [44.2, 8.0], [44.3, 8.0], [44.4, 8.0], [44.5, 8.0], [44.6, 8.0], [44.7, 8.0], [44.8, 8.0], [44.9, 8.0], [45.0, 8.0], [45.1, 8.0], [45.2, 8.0], [45.3, 8.0], [45.4, 8.0], [45.5, 8.0], [45.6, 8.0], [45.7, 8.0], [45.8, 8.0], [45.9, 8.0], [46.0, 8.0], [46.1, 9.0], [46.2, 9.0], [46.3, 9.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 9.0], [50.0, 9.0], [50.1, 9.0], [50.2, 9.0], [50.3, 9.0], [50.4, 9.0], [50.5, 9.0], [50.6, 9.0], [50.7, 9.0], [50.8, 9.0], [50.9, 9.0], [51.0, 9.0], [51.1, 9.0], [51.2, 9.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 10.0], [53.9, 10.0], [54.0, 10.0], [54.1, 10.0], [54.2, 10.0], [54.3, 10.0], [54.4, 10.0], [54.5, 10.0], [54.6, 10.0], [54.7, 10.0], [54.8, 10.0], [54.9, 10.0], [55.0, 10.0], [55.1, 10.0], [55.2, 10.0], [55.3, 10.0], [55.4, 10.0], [55.5, 10.0], [55.6, 10.0], [55.7, 10.0], [55.8, 10.0], [55.9, 10.0], [56.0, 10.0], [56.1, 11.0], [56.2, 11.0], [56.3, 11.0], [56.4, 11.0], [56.5, 11.0], [56.6, 11.0], [56.7, 11.0], [56.8, 11.0], [56.9, 11.0], [57.0, 11.0], [57.1, 11.0], [57.2, 11.0], [57.3, 11.0], [57.4, 11.0], [57.5, 11.0], [57.6, 11.0], [57.7, 11.0], [57.8, 11.0], [57.9, 11.0], [58.0, 11.0], [58.1, 11.0], [58.2, 11.0], [58.3, 11.0], [58.4, 11.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 11.0], [59.2, 11.0], [59.3, 11.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 11.0], [60.0, 11.0], [60.1, 11.0], [60.2, 11.0], [60.3, 11.0], [60.4, 11.0], [60.5, 12.0], [60.6, 12.0], [60.7, 12.0], [60.8, 12.0], [60.9, 12.0], [61.0, 12.0], [61.1, 12.0], [61.2, 12.0], [61.3, 12.0], [61.4, 12.0], [61.5, 12.0], [61.6, 12.0], [61.7, 12.0], [61.8, 12.0], [61.9, 12.0], [62.0, 12.0], [62.1, 12.0], [62.2, 12.0], [62.3, 12.0], [62.4, 12.0], [62.5, 12.0], [62.6, 12.0], [62.7, 12.0], [62.8, 12.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 12.0], [63.9, 12.0], [64.0, 12.0], [64.1, 12.0], [64.2, 12.0], [64.3, 12.0], [64.4, 12.0], [64.5, 13.0], [64.6, 13.0], [64.7, 13.0], [64.8, 13.0], [64.9, 13.0], [65.0, 13.0], [65.1, 13.0], [65.2, 13.0], [65.3, 13.0], [65.4, 13.0], [65.5, 13.0], [65.6, 13.0], [65.7, 13.0], [65.8, 13.0], [65.9, 13.0], [66.0, 13.0], [66.1, 13.0], [66.2, 13.0], [66.3, 13.0], [66.4, 13.0], [66.5, 13.0], [66.6, 13.0], [66.7, 13.0], [66.8, 13.0], [66.9, 13.0], [67.0, 13.0], [67.1, 13.0], [67.2, 13.0], [67.3, 13.0], [67.4, 13.0], [67.5, 13.0], [67.6, 13.0], [67.7, 13.0], [67.8, 13.0], [67.9, 13.0], [68.0, 13.0], [68.1, 13.0], [68.2, 14.0], [68.3, 14.0], [68.4, 14.0], [68.5, 14.0], [68.6, 14.0], [68.7, 14.0], [68.8, 14.0], [68.9, 14.0], [69.0, 14.0], [69.1, 14.0], [69.2, 14.0], [69.3, 14.0], [69.4, 14.0], [69.5, 14.0], [69.6, 14.0], [69.7, 14.0], [69.8, 14.0], [69.9, 14.0], [70.0, 14.0], [70.1, 14.0], [70.2, 14.0], [70.3, 14.0], [70.4, 14.0], [70.5, 14.0], [70.6, 14.0], [70.7, 14.0], [70.8, 14.0], [70.9, 14.0], [71.0, 14.0], [71.1, 14.0], [71.2, 14.0], [71.3, 14.0], [71.4, 15.0], [71.5, 15.0], [71.6, 15.0], [71.7, 15.0], [71.8, 15.0], [71.9, 15.0], [72.0, 15.0], [72.1, 15.0], [72.2, 15.0], [72.3, 15.0], [72.4, 15.0], [72.5, 15.0], [72.6, 15.0], [72.7, 15.0], [72.8, 15.0], [72.9, 15.0], [73.0, 15.0], [73.1, 15.0], [73.2, 15.0], [73.3, 15.0], [73.4, 15.0], [73.5, 15.0], [73.6, 15.0], [73.7, 15.0], [73.8, 15.0], [73.9, 15.0], [74.0, 15.0], [74.1, 15.0], [74.2, 15.0], [74.3, 16.0], [74.4, 16.0], [74.5, 16.0], [74.6, 16.0], [74.7, 16.0], [74.8, 16.0], [74.9, 16.0], [75.0, 16.0], [75.1, 16.0], [75.2, 16.0], [75.3, 16.0], [75.4, 16.0], [75.5, 16.0], [75.6, 16.0], [75.7, 16.0], [75.8, 16.0], [75.9, 16.0], [76.0, 16.0], [76.1, 16.0], [76.2, 16.0], [76.3, 16.0], [76.4, 16.0], [76.5, 16.0], [76.6, 16.0], [76.7, 16.0], [76.8, 17.0], [76.9, 17.0], [77.0, 17.0], [77.1, 17.0], [77.2, 17.0], [77.3, 17.0], [77.4, 17.0], [77.5, 17.0], [77.6, 17.0], [77.7, 17.0], [77.8, 17.0], [77.9, 17.0], [78.0, 17.0], [78.1, 17.0], [78.2, 17.0], [78.3, 17.0], [78.4, 17.0], [78.5, 17.0], [78.6, 17.0], [78.7, 17.0], [78.8, 17.0], [78.9, 17.0], [79.0, 17.0], [79.1, 18.0], [79.2, 18.0], [79.3, 18.0], [79.4, 18.0], [79.5, 18.0], [79.6, 18.0], [79.7, 18.0], [79.8, 18.0], [79.9, 18.0], [80.0, 18.0], [80.1, 18.0], [80.2, 18.0], [80.3, 18.0], [80.4, 18.0], [80.5, 18.0], [80.6, 18.0], [80.7, 18.0], [80.8, 18.0], [80.9, 18.0], [81.0, 18.0], [81.1, 19.0], [81.2, 19.0], [81.3, 19.0], [81.4, 19.0], [81.5, 19.0], [81.6, 19.0], [81.7, 19.0], [81.8, 19.0], [81.9, 19.0], [82.0, 19.0], [82.1, 19.0], [82.2, 19.0], [82.3, 19.0], [82.4, 19.0], [82.5, 19.0], [82.6, 19.0], [82.7, 19.0], [82.8, 19.0], [82.9, 20.0], [83.0, 20.0], [83.1, 20.0], [83.2, 20.0], [83.3, 20.0], [83.4, 20.0], [83.5, 20.0], [83.6, 20.0], [83.7, 20.0], [83.8, 20.0], [83.9, 20.0], [84.0, 20.0], [84.1, 20.0], [84.2, 20.0], [84.3, 20.0], [84.4, 20.0], [84.5, 21.0], [84.6, 21.0], [84.7, 21.0], [84.8, 21.0], [84.9, 21.0], [85.0, 21.0], [85.1, 21.0], [85.2, 21.0], [85.3, 21.0], [85.4, 21.0], [85.5, 21.0], [85.6, 21.0], [85.7, 21.0], [85.8, 21.0], [85.9, 22.0], [86.0, 22.0], [86.1, 22.0], [86.2, 22.0], [86.3, 22.0], [86.4, 22.0], [86.5, 22.0], [86.6, 22.0], [86.7, 22.0], [86.8, 22.0], [86.9, 22.0], [87.0, 22.0], [87.1, 22.0], [87.2, 23.0], [87.3, 23.0], [87.4, 23.0], [87.5, 23.0], [87.6, 23.0], [87.7, 23.0], [87.8, 23.0], [87.9, 23.0], [88.0, 23.0], [88.1, 23.0], [88.2, 23.0], [88.3, 24.0], [88.4, 24.0], [88.5, 24.0], [88.6, 24.0], [88.7, 24.0], [88.8, 24.0], [88.9, 24.0], [89.0, 24.0], [89.1, 24.0], [89.2, 24.0], [89.3, 24.0], [89.4, 25.0], [89.5, 25.0], [89.6, 25.0], [89.7, 25.0], [89.8, 25.0], [89.9, 25.0], [90.0, 25.0], [90.1, 25.0], [90.2, 25.0], [90.3, 26.0], [90.4, 26.0], [90.5, 26.0], [90.6, 26.0], [90.7, 26.0], [90.8, 26.0], [90.9, 26.0], [91.0, 26.0], [91.1, 27.0], [91.2, 27.0], [91.3, 27.0], [91.4, 27.0], [91.5, 27.0], [91.6, 27.0], [91.7, 27.0], [91.8, 27.0], [91.9, 28.0], [92.0, 28.0], [92.1, 28.0], [92.2, 28.0], [92.3, 28.0], [92.4, 28.0], [92.5, 28.0], [92.6, 29.0], [92.7, 29.0], [92.8, 29.0], [92.9, 29.0], [93.0, 29.0], [93.1, 29.0], [93.2, 30.0], [93.3, 30.0], [93.4, 30.0], [93.5, 30.0], [93.6, 30.0], [93.7, 30.0], [93.8, 31.0], [93.9, 31.0], [94.0, 31.0], [94.1, 31.0], [94.2, 31.0], [94.3, 32.0], [94.4, 32.0], [94.5, 32.0], [94.6, 32.0], [94.7, 33.0], [94.8, 33.0], [94.9, 33.0], [95.0, 33.0], [95.1, 33.0], [95.2, 34.0], [95.3, 34.0], [95.4, 34.0], [95.5, 34.0], [95.6, 35.0], [95.7, 35.0], [95.8, 35.0], [95.9, 36.0], [96.0, 36.0], [96.1, 36.0], [96.2, 36.0], [96.3, 37.0], [96.4, 37.0], [96.5, 37.0], [96.6, 38.0], [96.7, 38.0], [96.8, 38.0], [96.9, 39.0], [97.0, 39.0], [97.1, 40.0], [97.2, 40.0], [97.3, 40.0], [97.4, 41.0], [97.5, 41.0], [97.6, 42.0], [97.7, 42.0], [97.8, 43.0], [97.9, 43.0], [98.0, 44.0], [98.1, 45.0], [98.2, 45.0], [98.3, 46.0], [98.4, 47.0], [98.5, 47.0], [98.6, 48.0], [98.7, 49.0], [98.8, 50.0], [98.9, 51.0], [99.0, 52.0], [99.1, 53.0], [99.2, 55.0], [99.3, 56.0], [99.4, 58.0], [99.5, 60.0], [99.6, 63.0], [99.7, 66.0], [99.8, 71.0], [99.9, 78.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 5.0], [22.0, 5.0], [22.1, 5.0], [22.2, 5.0], [22.3, 5.0], [22.4, 5.0], [22.5, 5.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 5.0], [23.3, 5.0], [23.4, 5.0], [23.5, 5.0], [23.6, 5.0], [23.7, 5.0], [23.8, 5.0], [23.9, 5.0], [24.0, 5.0], [24.1, 5.0], [24.2, 5.0], [24.3, 5.0], [24.4, 5.0], [24.5, 5.0], [24.6, 5.0], [24.7, 5.0], [24.8, 5.0], [24.9, 5.0], [25.0, 5.0], [25.1, 5.0], [25.2, 5.0], [25.3, 5.0], [25.4, 5.0], [25.5, 5.0], [25.6, 5.0], [25.7, 5.0], [25.8, 5.0], [25.9, 5.0], [26.0, 5.0], [26.1, 5.0], [26.2, 5.0], [26.3, 5.0], [26.4, 5.0], [26.5, 5.0], [26.6, 5.0], [26.7, 5.0], [26.8, 5.0], [26.9, 5.0], [27.0, 5.0], [27.1, 5.0], [27.2, 5.0], [27.3, 5.0], [27.4, 5.0], [27.5, 5.0], [27.6, 5.0], [27.7, 5.0], [27.8, 5.0], [27.9, 6.0], [28.0, 6.0], [28.1, 6.0], [28.2, 6.0], [28.3, 6.0], [28.4, 6.0], [28.5, 6.0], [28.6, 6.0], [28.7, 6.0], [28.8, 6.0], [28.9, 6.0], [29.0, 6.0], [29.1, 6.0], [29.2, 6.0], [29.3, 6.0], [29.4, 6.0], [29.5, 6.0], [29.6, 6.0], [29.7, 6.0], [29.8, 6.0], [29.9, 6.0], [30.0, 6.0], [30.1, 6.0], [30.2, 6.0], [30.3, 6.0], [30.4, 6.0], [30.5, 6.0], [30.6, 6.0], [30.7, 6.0], [30.8, 6.0], [30.9, 6.0], [31.0, 6.0], [31.1, 6.0], [31.2, 6.0], [31.3, 6.0], [31.4, 6.0], [31.5, 6.0], [31.6, 6.0], [31.7, 6.0], [31.8, 6.0], [31.9, 6.0], [32.0, 6.0], [32.1, 6.0], [32.2, 6.0], [32.3, 6.0], [32.4, 6.0], [32.5, 6.0], [32.6, 6.0], [32.7, 6.0], [32.8, 6.0], [32.9, 6.0], [33.0, 6.0], [33.1, 6.0], [33.2, 6.0], [33.3, 6.0], [33.4, 6.0], [33.5, 6.0], [33.6, 6.0], [33.7, 6.0], [33.8, 7.0], [33.9, 7.0], [34.0, 7.0], [34.1, 7.0], [34.2, 7.0], [34.3, 7.0], [34.4, 7.0], [34.5, 7.0], [34.6, 7.0], [34.7, 7.0], [34.8, 7.0], [34.9, 7.0], [35.0, 7.0], [35.1, 7.0], [35.2, 7.0], [35.3, 7.0], [35.4, 7.0], [35.5, 7.0], [35.6, 7.0], [35.7, 7.0], [35.8, 7.0], [35.9, 7.0], [36.0, 7.0], [36.1, 7.0], [36.2, 7.0], [36.3, 7.0], [36.4, 7.0], [36.5, 7.0], [36.6, 7.0], [36.7, 7.0], [36.8, 7.0], [36.9, 7.0], [37.0, 7.0], [37.1, 7.0], [37.2, 7.0], [37.3, 7.0], [37.4, 7.0], [37.5, 7.0], [37.6, 7.0], [37.7, 7.0], [37.8, 7.0], [37.9, 7.0], [38.0, 7.0], [38.1, 7.0], [38.2, 7.0], [38.3, 7.0], [38.4, 7.0], [38.5, 7.0], [38.6, 7.0], [38.7, 7.0], [38.8, 7.0], [38.9, 7.0], [39.0, 7.0], [39.1, 7.0], [39.2, 7.0], [39.3, 7.0], [39.4, 7.0], [39.5, 7.0], [39.6, 7.0], [39.7, 8.0], [39.8, 8.0], [39.9, 8.0], [40.0, 8.0], [40.1, 8.0], [40.2, 8.0], [40.3, 8.0], [40.4, 8.0], [40.5, 8.0], [40.6, 8.0], [40.7, 8.0], [40.8, 8.0], [40.9, 8.0], [41.0, 8.0], [41.1, 8.0], [41.2, 8.0], [41.3, 8.0], [41.4, 8.0], [41.5, 8.0], [41.6, 8.0], [41.7, 8.0], [41.8, 8.0], [41.9, 8.0], [42.0, 8.0], [42.1, 8.0], [42.2, 8.0], [42.3, 8.0], [42.4, 8.0], [42.5, 8.0], [42.6, 8.0], [42.7, 8.0], [42.8, 8.0], [42.9, 8.0], [43.0, 8.0], [43.1, 8.0], [43.2, 8.0], [43.3, 8.0], [43.4, 8.0], [43.5, 8.0], [43.6, 8.0], [43.7, 8.0], [43.8, 8.0], [43.9, 8.0], [44.0, 8.0], [44.1, 8.0], [44.2, 8.0], [44.3, 8.0], [44.4, 8.0], [44.5, 8.0], [44.6, 8.0], [44.7, 8.0], [44.8, 8.0], [44.9, 8.0], [45.0, 8.0], [45.1, 8.0], [45.2, 9.0], [45.3, 9.0], [45.4, 9.0], [45.5, 9.0], [45.6, 9.0], [45.7, 9.0], [45.8, 9.0], [45.9, 9.0], [46.0, 9.0], [46.1, 9.0], [46.2, 9.0], [46.3, 9.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 9.0], [50.0, 9.0], [50.1, 9.0], [50.2, 9.0], [50.3, 9.0], [50.4, 9.0], [50.5, 10.0], [50.6, 10.0], [50.7, 10.0], [50.8, 10.0], [50.9, 10.0], [51.0, 10.0], [51.1, 10.0], [51.2, 10.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 10.0], [53.9, 10.0], [54.0, 10.0], [54.1, 10.0], [54.2, 10.0], [54.3, 10.0], [54.4, 10.0], [54.5, 10.0], [54.6, 10.0], [54.7, 10.0], [54.8, 10.0], [54.9, 10.0], [55.0, 10.0], [55.1, 10.0], [55.2, 10.0], [55.3, 10.0], [55.4, 11.0], [55.5, 11.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 11.0], [56.0, 11.0], [56.1, 11.0], [56.2, 11.0], [56.3, 11.0], [56.4, 11.0], [56.5, 11.0], [56.6, 11.0], [56.7, 11.0], [56.8, 11.0], [56.9, 11.0], [57.0, 11.0], [57.1, 11.0], [57.2, 11.0], [57.3, 11.0], [57.4, 11.0], [57.5, 11.0], [57.6, 11.0], [57.7, 11.0], [57.8, 11.0], [57.9, 11.0], [58.0, 11.0], [58.1, 11.0], [58.2, 11.0], [58.3, 11.0], [58.4, 11.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 11.0], [59.2, 11.0], [59.3, 11.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 12.0], [60.0, 12.0], [60.1, 12.0], [60.2, 12.0], [60.3, 12.0], [60.4, 12.0], [60.5, 12.0], [60.6, 12.0], [60.7, 12.0], [60.8, 12.0], [60.9, 12.0], [61.0, 12.0], [61.1, 12.0], [61.2, 12.0], [61.3, 12.0], [61.4, 12.0], [61.5, 12.0], [61.6, 12.0], [61.7, 12.0], [61.8, 12.0], [61.9, 12.0], [62.0, 12.0], [62.1, 12.0], [62.2, 12.0], [62.3, 12.0], [62.4, 12.0], [62.5, 12.0], [62.6, 12.0], [62.7, 12.0], [62.8, 12.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 12.0], [63.9, 12.0], [64.0, 13.0], [64.1, 13.0], [64.2, 13.0], [64.3, 13.0], [64.4, 13.0], [64.5, 13.0], [64.6, 13.0], [64.7, 13.0], [64.8, 13.0], [64.9, 13.0], [65.0, 13.0], [65.1, 13.0], [65.2, 13.0], [65.3, 13.0], [65.4, 13.0], [65.5, 13.0], [65.6, 13.0], [65.7, 13.0], [65.8, 13.0], [65.9, 13.0], [66.0, 13.0], [66.1, 13.0], [66.2, 13.0], [66.3, 13.0], [66.4, 13.0], [66.5, 13.0], [66.6, 13.0], [66.7, 13.0], [66.8, 13.0], [66.9, 13.0], [67.0, 13.0], [67.1, 13.0], [67.2, 13.0], [67.3, 13.0], [67.4, 13.0], [67.5, 13.0], [67.6, 14.0], [67.7, 14.0], [67.8, 14.0], [67.9, 14.0], [68.0, 14.0], [68.1, 14.0], [68.2, 14.0], [68.3, 14.0], [68.4, 14.0], [68.5, 14.0], [68.6, 14.0], [68.7, 14.0], [68.8, 14.0], [68.9, 14.0], [69.0, 14.0], [69.1, 14.0], [69.2, 14.0], [69.3, 14.0], [69.4, 14.0], [69.5, 14.0], [69.6, 14.0], [69.7, 14.0], [69.8, 14.0], [69.9, 14.0], [70.0, 14.0], [70.1, 14.0], [70.2, 14.0], [70.3, 14.0], [70.4, 14.0], [70.5, 14.0], [70.6, 14.0], [70.7, 14.0], [70.8, 14.0], [70.9, 15.0], [71.0, 15.0], [71.1, 15.0], [71.2, 15.0], [71.3, 15.0], [71.4, 15.0], [71.5, 15.0], [71.6, 15.0], [71.7, 15.0], [71.8, 15.0], [71.9, 15.0], [72.0, 15.0], [72.1, 15.0], [72.2, 15.0], [72.3, 15.0], [72.4, 15.0], [72.5, 15.0], [72.6, 15.0], [72.7, 15.0], [72.8, 15.0], [72.9, 15.0], [73.0, 15.0], [73.1, 15.0], [73.2, 15.0], [73.3, 15.0], [73.4, 15.0], [73.5, 15.0], [73.6, 15.0], [73.7, 15.0], [73.8, 16.0], [73.9, 16.0], [74.0, 16.0], [74.1, 16.0], [74.2, 16.0], [74.3, 16.0], [74.4, 16.0], [74.5, 16.0], [74.6, 16.0], [74.7, 16.0], [74.8, 16.0], [74.9, 16.0], [75.0, 16.0], [75.1, 16.0], [75.2, 16.0], [75.3, 16.0], [75.4, 16.0], [75.5, 16.0], [75.6, 16.0], [75.7, 16.0], [75.8, 16.0], [75.9, 16.0], [76.0, 16.0], [76.1, 16.0], [76.2, 16.0], [76.3, 16.0], [76.4, 17.0], [76.5, 17.0], [76.6, 17.0], [76.7, 17.0], [76.8, 17.0], [76.9, 17.0], [77.0, 17.0], [77.1, 17.0], [77.2, 17.0], [77.3, 17.0], [77.4, 17.0], [77.5, 17.0], [77.6, 17.0], [77.7, 17.0], [77.8, 17.0], [77.9, 17.0], [78.0, 17.0], [78.1, 17.0], [78.2, 17.0], [78.3, 17.0], [78.4, 17.0], [78.5, 17.0], [78.6, 17.0], [78.7, 17.0], [78.8, 18.0], [78.9, 18.0], [79.0, 18.0], [79.1, 18.0], [79.2, 18.0], [79.3, 18.0], [79.4, 18.0], [79.5, 18.0], [79.6, 18.0], [79.7, 18.0], [79.8, 18.0], [79.9, 18.0], [80.0, 18.0], [80.1, 18.0], [80.2, 18.0], [80.3, 18.0], [80.4, 18.0], [80.5, 18.0], [80.6, 18.0], [80.7, 18.0], [80.8, 19.0], [80.9, 19.0], [81.0, 19.0], [81.1, 19.0], [81.2, 19.0], [81.3, 19.0], [81.4, 19.0], [81.5, 19.0], [81.6, 19.0], [81.7, 19.0], [81.8, 19.0], [81.9, 19.0], [82.0, 19.0], [82.1, 19.0], [82.2, 19.0], [82.3, 19.0], [82.4, 19.0], [82.5, 19.0], [82.6, 20.0], [82.7, 20.0], [82.8, 20.0], [82.9, 20.0], [83.0, 20.0], [83.1, 20.0], [83.2, 20.0], [83.3, 20.0], [83.4, 20.0], [83.5, 20.0], [83.6, 20.0], [83.7, 20.0], [83.8, 20.0], [83.9, 20.0], [84.0, 20.0], [84.1, 20.0], [84.2, 21.0], [84.3, 21.0], [84.4, 21.0], [84.5, 21.0], [84.6, 21.0], [84.7, 21.0], [84.8, 21.0], [84.9, 21.0], [85.0, 21.0], [85.1, 21.0], [85.2, 21.0], [85.3, 21.0], [85.4, 21.0], [85.5, 21.0], [85.6, 21.0], [85.7, 22.0], [85.8, 22.0], [85.9, 22.0], [86.0, 22.0], [86.1, 22.0], [86.2, 22.0], [86.3, 22.0], [86.4, 22.0], [86.5, 22.0], [86.6, 22.0], [86.7, 22.0], [86.8, 22.0], [86.9, 22.0], [87.0, 23.0], [87.1, 23.0], [87.2, 23.0], [87.3, 23.0], [87.4, 23.0], [87.5, 23.0], [87.6, 23.0], [87.7, 23.0], [87.8, 23.0], [87.9, 23.0], [88.0, 23.0], [88.1, 23.0], [88.2, 24.0], [88.3, 24.0], [88.4, 24.0], [88.5, 24.0], [88.6, 24.0], [88.7, 24.0], [88.8, 24.0], [88.9, 24.0], [89.0, 24.0], [89.1, 24.0], [89.2, 25.0], [89.3, 25.0], [89.4, 25.0], [89.5, 25.0], [89.6, 25.0], [89.7, 25.0], [89.8, 25.0], [89.9, 25.0], [90.0, 25.0], [90.1, 26.0], [90.2, 26.0], [90.3, 26.0], [90.4, 26.0], [90.5, 26.0], [90.6, 26.0], [90.7, 26.0], [90.8, 26.0], [90.9, 26.0], [91.0, 27.0], [91.1, 27.0], [91.2, 27.0], [91.3, 27.0], [91.4, 27.0], [91.5, 27.0], [91.6, 27.0], [91.7, 28.0], [91.8, 28.0], [91.9, 28.0], [92.0, 28.0], [92.1, 28.0], [92.2, 28.0], [92.3, 28.0], [92.4, 29.0], [92.5, 29.0], [92.6, 29.0], [92.7, 29.0], [92.8, 29.0], [92.9, 29.0], [93.0, 29.0], [93.1, 30.0], [93.2, 30.0], [93.3, 30.0], [93.4, 30.0], [93.5, 30.0], [93.6, 31.0], [93.7, 31.0], [93.8, 31.0], [93.9, 31.0], [94.0, 31.0], [94.1, 31.0], [94.2, 32.0], [94.3, 32.0], [94.4, 32.0], [94.5, 32.0], [94.6, 32.0], [94.7, 33.0], [94.8, 33.0], [94.9, 33.0], [95.0, 33.0], [95.1, 34.0], [95.2, 34.0], [95.3, 34.0], [95.4, 34.0], [95.5, 35.0], [95.6, 35.0], [95.7, 35.0], [95.8, 35.0], [95.9, 36.0], [96.0, 36.0], [96.1, 36.0], [96.2, 37.0], [96.3, 37.0], [96.4, 37.0], [96.5, 38.0], [96.6, 38.0], [96.7, 38.0], [96.8, 39.0], [96.9, 39.0], [97.0, 39.0], [97.1, 40.0], [97.2, 40.0], [97.3, 41.0], [97.4, 41.0], [97.5, 42.0], [97.6, 42.0], [97.7, 43.0], [97.8, 43.0], [97.9, 44.0], [98.0, 44.0], [98.1, 45.0], [98.2, 45.0], [98.3, 46.0], [98.4, 47.0], [98.5, 47.0], [98.6, 48.0], [98.7, 49.0], [98.8, 50.0], [98.9, 51.0], [99.0, 52.0], [99.1, 54.0], [99.2, 55.0], [99.3, 56.0], [99.4, 58.0], [99.5, 60.0], [99.6, 63.0], [99.7, 67.0], [99.8, 71.0], [99.9, 78.0], [100.0, 1076.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1.0921658E7, "series": [{"data": [[0.0, 1.0921658E7], [100.0, 1685.0], [200.0, 2.0], [1000.0, 6.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[0.0, 1.0738325E7], [100.0, 1700.0], [200.0, 1.0], [1000.0, 15.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2.1663371E7, "series": [{"data": [[0.0, 2.1663371E7]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 21.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 204.96956915123013, "minX": 1.65234969E12, "maxY": 500.0, "series": [{"data": [[1.65234995E12, 500.0], [1.65234978E12, 500.0], [1.65234999E12, 204.96956915123013], [1.65234982E12, 500.0], [1.65234986E12, 500.0], [1.65234969E12, 491.99468866836804], [1.6523499E12, 500.0], [1.65234973E12, 500.0], [1.65234994E12, 500.0], [1.65234977E12, 500.0], [1.65234998E12, 500.0], [1.65234981E12, 500.0], [1.65234985E12, 500.0], [1.65234989E12, 500.0], [1.65234972E12, 500.0], [1.65234993E12, 500.0], [1.65234976E12, 500.0], [1.65234997E12, 500.0], [1.6523498E12, 500.0], [1.65234971E12, 500.0], [1.65234984E12, 500.0], [1.65234975E12, 500.0], [1.65234988E12, 500.0], [1.65234979E12, 500.0], [1.65234992E12, 500.0], [1.65234983E12, 500.0], [1.65234996E12, 500.0], [1.65234987E12, 500.0], [1.6523497E12, 500.0], [1.65234991E12, 500.0], [1.65234974E12, 500.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234999E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 75.33333333333333, "series": [{"data": [[3.0, 0.09340659340659348], [4.0, 0.090628615503278], [5.0, 0.1221590909090908], [6.0, 0.12173913043478266], [7.0, 0.11684782608695653], [8.0, 0.1442307692307693], [9.0, 0.0], [10.0, 0.15290269828291095], [11.0, 0.16488340192043882], [12.0, 0.17512690355329955], [13.0, 0.2017416545718432], [14.0, 0.21485411140583552], [15.0, 0.14285714285714285], [16.0, 1.0], [18.0, 0.24804687499999983], [19.0, 1.0], [21.0, 0.25870646766169164], [22.0, 0.8], [23.0, 0.5714285714285714], [24.0, 0.0], [25.0, 0.24074074074074078], [26.0, 0.3571428571428571], [27.0, 0.37499999999999994], [28.0, 0.04878048780487807], [29.0, 0.3719512195121953], [30.0, 0.9523809523809522], [31.0, 0.3835616438356163], [33.0, 0.30769230769230765], [32.0, 0.501587301587302], [35.0, 1.0], [37.0, 1.0], [36.0, 0.3703703703703703], [39.0, 1.0], [38.0, 0.5777777777777776], [41.0, 0.4477611940298508], [40.0, 0.6363636363636364], [43.0, 0.6285714285714286], [42.0, 0.8275862068965518], [45.0, 0.6382978723404255], [44.0, 2.25], [47.0, 0.0], [46.0, 1.0], [49.0, 0.14285714285714288], [48.0, 0.0], [51.0, 0.6232558139534888], [50.0, 0.47619047619047616], [53.0, 0.5986572174561723], [52.0, 0.5287356321839082], [55.0, 0.6586345381526102], [54.0, 0.6796116504854366], [57.0, 0.623951182303585], [56.0, 0.6372478386167141], [59.0, 0.6923436041083084], [58.0, 0.6512474012474012], [61.0, 0.6460746460746459], [60.0, 0.6840788238974063], [63.0, 0.5], [62.0, 0.8571428571428573], [67.0, 0.7063492063492058], [66.0, 0.9999999999999999], [65.0, 1.0], [64.0, 0.42105263157894735], [71.0, 0.8271604938271605], [70.0, 0.7959788751968877], [69.0, 1.048648648648649], [75.0, 0.8829787234042556], [74.0, 0.9082191780821907], [73.0, 0.9545454545454545], [72.0, 0.9767441860465116], [78.0, 1.0000000000000002], [77.0, 1.0847457627118644], [76.0, 0.8285714285714284], [83.0, 1.0000000000000004], [82.0, 1.0491803278688523], [81.0, 3.0], [80.0, 0.8781478472786344], [87.0, 0.9734717416378313], [86.0, 1.2272727272727277], [85.0, 0.8392857142857144], [84.0, 0.96168582375479], [91.0, 1.03286534779834], [90.0, 0.9801242236024845], [89.0, 1.1118881118881117], [88.0, 0.950953678474115], [95.0, 1.0709342560553632], [94.0, 1.0], [93.0, 1.1162790697674423], [92.0, 1.0913242009132422], [99.0, 1.1149158444573415], [98.0, 1.160771704180065], [97.0, 1.0303676078849229], [96.0, 1.7142857142857142], [103.0, 1.1243191284844594], [102.0, 1.147490611130081], [101.0, 1.1958041958041958], [100.0, 1.3300000000000003], [107.0, 1.3147092360319277], [106.0, 1.2463147883975312], [105.0, 1.1960591133004925], [104.0, 1.239963503649635], [111.0, 1.2466216216216204], [110.0, 1.4423076923076923], [109.0, 1.1666666666666667], [108.0, 1.2461538461538473], [115.0, 1.5777777777777782], [114.0, 1.6627680311890836], [113.0, 1.4206896551724129], [112.0, 1.0701754385964914], [119.0, 1.549266247379456], [118.0, 2.0357142857142856], [117.0, 1.4006988934187516], [116.0, 1.3298551959114147], [123.0, 1.5622353937341213], [121.0, 1.5347826086956529], [120.0, 1.547523427041501], [122.0, 1.9460370994940996], [124.0, 3.268041237113403], [125.0, 2.9074074074074066], [126.0, 5.836734693877552], [127.0, 4.687499999999999], [128.0, 8.357142857142858], [129.0, 8.655172413793105], [135.0, 1.5687441277795189], [133.0, 1.5119047619047616], [130.0, 1.6000000000000005], [131.0, 3.2222222222222223], [132.0, 1.5745762711864404], [134.0, 1.5781249999999996], [136.0, 1.342391304347826], [137.0, 1.8227513227513241], [143.0, 1.3333333333333333], [142.0, 1.5668549905838043], [141.0, 1.5693277310924363], [140.0, 1.5424836601307195], [139.0, 1.7027027027027017], [138.0, 1.5348542458808623], [151.0, 1.9031674208144784], [150.0, 1.721934369602763], [149.0, 1.8097412480974115], [148.0, 1.917832167832168], [146.0, 1.7062634989200864], [147.0, 1.7269326683291786], [145.0, 1.769562096195264], [144.0, 2.1666666666666665], [152.0, 2.686868686868688], [153.0, 1.9600000000000002], [154.0, 1.8540268456375828], [155.0, 1.858505564387918], [159.0, 1.9056603773584886], [158.0, 2.142857142857143], [157.0, 1.7389294766661707], [156.0, 1.5535026943802916], [166.0, 2.065573770491807], [167.0, 1.9164452317685277], [165.0, 1.9390625], [162.0, 1.9692982456140347], [164.0, 2.0069444444444455], [163.0, 1.8471910112359544], [161.0, 1.9043824701195229], [160.0, 2.020522388059702], [168.0, 1.9303675048355897], [169.0, 1.825102880658436], [172.0, 1.8580357142857145], [175.0, 1.7284595300261107], [174.0, 1.7232375979112278], [173.0, 1.8089285714285714], [171.0, 2.1771653543307092], [170.0, 2.237588652482273], [176.0, 1.9766763848396498], [179.0, 3.4595959595959593], [180.0, 3.3505154639175228], [181.0, 2.111853088480802], [183.0, 2.1427212178877246], [182.0, 2.2182320441988956], [178.0, 2.348684210526314], [177.0, 2.4054054054054093], [184.0, 2.33081570996979], [185.0, 3.4714285714285706], [190.0, 1.7235023041474649], [189.0, 2.2275862068965515], [188.0, 2.370370370370372], [187.0, 2.542168674698795], [191.0, 1.9063231850117102], [186.0, 2.8867924528301896], [199.0, 1.4919786096256689], [197.0, 2.0919282511210757], [196.0, 2.405923344947733], [193.0, 2.356521739130435], [198.0, 1.5540540540540535], [195.0, 2.677419354838709], [194.0, 3.0549450549450556], [192.0, 1.896551724137931], [200.0, 2.0130784708249463], [201.0, 2.539370078740162], [202.0, 2.952380952380951], [203.0, 2.764705882352942], [204.0, 2.1701149425287336], [205.0, 2.272619984264362], [207.0, 2.467774086378745], [206.0, 2.4430379746835444], [209.0, 3.0287769784172665], [210.0, 2.5], [211.0, 2.411764705882353], [212.0, 2.851612903225807], [213.0, 1.2857142857142856], [215.0, 3.0], [214.0, 3.0], [208.0, 2.6691729323308273], [216.0, 3.0], [220.0, 2.6176470588235294], [221.0, 4.687499999999999], [222.0, 4.857142857142857], [223.0, 4.0], [219.0, 3.162790697674419], [218.0, 4.999999999999999], [217.0, 4.333333333333333], [224.0, 3.9565217391304346], [226.0, 3.0], [227.0, 3.107142857142857], [229.0, 2.0], [230.0, 3.5], [231.0, 3.265696784073506], [228.0, 2.5], [225.0, 7.5], [235.0, 2.929700272479566], [236.0, 3.152866242038217], [237.0, 3.175925925925925], [238.0, 3.9230769230769225], [239.0, 4.947368421052632], [232.0, 3.384385877672799], [233.0, 3.050487156775907], [234.0, 2.7442748091603053], [240.0, 3.3333333333333335], [241.0, 3.394736842105263], [243.0, 2.9879518072289155], [245.0, 8.0], [247.0, 8.0], [246.0, 3.808219178082192], [244.0, 3.2892156862745074], [242.0, 2.92], [249.0, 6.448113207547169], [250.0, 2.585365853658538], [251.0, 2.5997346306943796], [254.0, 2.291666666666666], [253.0, 2.5057471264367823], [252.0, 3.820000000000001], [255.0, 1.7063492063492076], [248.0, 7.299999999999999], [269.0, 1.8461538461538467], [256.0, 1.04], [257.0, 1.3441558441558443], [263.0, 1.5517241379310347], [262.0, 2.238095238095238], [261.0, 3.7976190476190474], [260.0, 2.6847826086956537], [258.0, 3.3777777777777773], [259.0, 6.111111111111111], [268.0, 2.9090909090909096], [264.0, 2.0322580645161294], [267.0, 2.045454545454546], [270.0, 1.826086956521739], [271.0, 1.8190709046454767], [265.0, 2.4054054054054053], [266.0, 1.632450331125828], [273.0, 1.8913043478260871], [272.0, 1.7142857142857142], [275.0, 1.9076923076923074], [274.0, 2.5], [277.0, 2.5], [276.0, 0.3902439024390243], [278.0, 2.3333333333333335], [279.0, 2.035714285714285], [282.0, 1.2891566265060237], [283.0, 1.2264150943396226], [284.0, 1.8000000000000007], [285.0, 1.1797752808988766], [286.0, 3.6666666666666665], [287.0, 1.630434782608696], [281.0, 1.466019417475728], [280.0, 2.2], [288.0, 1.9999999999999996], [289.0, 1.0], [291.0, 1.4390243902439024], [290.0, 1.1257485029940115], [300.0, 1.8], [301.0, 2.6666666666666665], [302.0, 2.181818181818182], [303.0, 7.0], [292.0, 1.2916666666666665], [293.0, 3.6428571428571423], [294.0, 3.142857142857143], [295.0, 3.0999999999999996], [296.0, 6.000000000000001], [297.0, 4.428571428571429], [298.0, 3.75], [299.0, 5.124999999999999], [306.0, 24.0], [305.0, 1.5], [307.0, 3.0], [317.0, 4.000000000000002], [319.0, 3.3333333333333335], [318.0, 3.071428571428571], [316.0, 1.7777777777777777], [309.0, 5.119999999999999], [308.0, 5.800000000000001], [310.0, 4.0], [311.0, 3.52], [304.0, 2.0], [312.0, 2.794117647058824], [313.0, 3.4489795918367347], [314.0, 3.2499999999999996], [315.0, 2.5172413793103448], [332.0, 4.809523809523809], [320.0, 1.8666666666666667], [323.0, 3.2], [322.0, 3.090909090909091], [321.0, 2.8000000000000003], [324.0, 2.2], [325.0, 3.1034482758620694], [326.0, 3.3055555555555554], [327.0, 4.0], [333.0, 4.149253731343284], [334.0, 4.303030303030301], [335.0, 3.857142857142857], [329.0, 2.6875], [328.0, 3.3333333333333326], [331.0, 2.7058823529411766], [330.0, 3.3333333333333335], [337.0, 1.0], [336.0, 5.461538461538462], [338.0, 6.416666666666668], [339.0, 6.250000000000001], [340.0, 12.25], [341.0, 2.4], [342.0, 4.0], [343.0, 4.1], [344.0, 2.5], [345.0, 7.0], [350.0, 3.4399999999999995], [351.0, 5.818181818181818], [348.0, 3.909090909090909], [349.0, 3.307692307692308], [346.0, 3.583333333333333], [347.0, 4.4], [353.0, 4.8], [352.0, 5.666666666666666], [354.0, 5.241379310344826], [355.0, 5.039999999999999], [356.0, 3.90677966101695], [357.0, 5.717391304347826], [359.0, 4.153846153846154], [358.0, 6.2105263157894735], [360.0, 4.1000000000000005], [364.0, 6.333333333333333], [365.0, 3.8], [367.0, 7.0], [366.0, 8.6], [363.0, 6.555555555555555], [362.0, 5.692307692307692], [361.0, 2.285714285714286], [371.0, 4.115384615384615], [369.0, 8.047619047619046], [368.0, 4.222222222222223], [375.0, 7.949999999999999], [374.0, 5.5], [370.0, 3.2692307692307696], [373.0, 9.142857142857146], [376.0, 9.0], [382.0, 3.7777777777777777], [383.0, 6.25], [380.0, 2.8], [381.0, 4.823529411764705], [377.0, 8.0625], [372.0, 6.9], [378.0, 6.535714285714286], [379.0, 7.5], [385.0, 5.75], [384.0, 4.624999999999999], [386.0, 5.2], [387.0, 7.0], [388.0, 2.8333333333333335], [389.0, 5.7894736842105265], [390.0, 12.25], [391.0, 6.928571428571428], [392.0, 5.000000000000001], [399.0, 1.388888888888889], [397.0, 3.121951219512195], [396.0, 6.0], [398.0, 3.5000000000000004], [393.0, 5.941176470588235], [394.0, 6.6818181818181825], [395.0, 5.6], [403.0, 22.84090909090909], [401.0, 3.4074074074074074], [400.0, 2.814814814814815], [407.0, 5.928571428571429], [402.0, 4.250000000000001], [414.0, 6.166666666666667], [412.0, 17.818181818181817], [413.0, 7.222222222222221], [404.0, 7.5], [405.0, 8.214285714285714], [406.0, 8.826086956521737], [409.0, 9.107142857142856], [415.0, 7.611111111111111], [408.0, 6.714285714285714], [411.0, 7.722222222222223], [410.0, 5.666666666666667], [419.0, 3.4285714285714284], [422.0, 7.9411764705882355], [423.0, 9.142857142857142], [420.0, 6.0], [421.0, 7.523809523809524], [424.0, 5.785714285714285], [417.0, 14.969696969696969], [431.0, 5.25], [430.0, 9.0], [429.0, 11.0], [428.0, 6.5], [426.0, 7.083333333333333], [425.0, 2.0], [427.0, 5.6000000000000005], [416.0, 10.923076923076923], [418.0, 5.75], [445.0, 2.0], [437.0, 5.454545454545454], [436.0, 5.0], [442.0, 3.0], [446.0, 6.2], [443.0, 4.0], [434.0, 6.833333333333333], [439.0, 6.6], [433.0, 3.808510638297872], [432.0, 7.033333333333332], [441.0, 2.4], [440.0, 8.5], [438.0, 2.0], [444.0, 9.25], [435.0, 6.25], [451.0, 1.5], [452.0, 1.0], [453.0, 2.3333333333333335], [454.0, 4.0], [450.0, 4.5], [456.0, 3.0], [457.0, 2.142857142857143], [458.0, 4.5], [459.0, 2.111111111111111], [461.0, 1.2857142857142858], [462.0, 0.7777777777777778], [467.0, 2.0], [468.0, 1.6666666666666667], [469.0, 1.0], [471.0, 2.0], [465.0, 0.75], [466.0, 1.3333333333333333], [473.0, 2.0], [474.0, 4.5], [477.0, 4.0], [479.0, 2.333333333333333], [476.0, 2.0], [470.0, 2.0], [493.0, 3.5714285714285716], [487.0, 1.3333333333333333], [482.0, 2.0], [480.0, 2.0], [486.0, 5.0], [490.0, 4.666666666666667], [491.0, 2.6666666666666665], [494.0, 4.5], [495.0, 6.0], [485.0, 1.0], [484.0, 3.5], [499.0, 11.0], [497.0, 11.0], [496.0, 6.3], [503.0, 8.0], [498.0, 1.0], [501.0, 5.333333333333334], [502.0, 7.588235294117647], [510.0, 0.9999999999999999], [511.0, 3.727272727272727], [507.0, 3.0], [505.0, 4.2], [506.0, 5.25], [504.0, 3.2], [508.0, 3.6], [509.0, 5.0], [538.0, 3.576923076923076], [517.0, 3.7777777777777777], [515.0, 4.166666666666667], [516.0, 4.666666666666666], [514.0, 4.909090909090909], [512.0, 3.8333333333333335], [513.0, 4.166666666666667], [518.0, 4.727272727272727], [519.0, 4.774193548387097], [522.0, 4.878787878787878], [524.0, 3.615384615384616], [523.0, 4.219512195121952], [520.0, 3.6388888888888875], [521.0, 4.8], [525.0, 6.333333333333333], [526.0, 4.111111111111111], [527.0, 5.124999999999998], [528.0, 3.111111111111111], [529.0, 4.0], [531.0, 4.571428571428572], [533.0, 4.882352941176471], [532.0, 4.666666666666667], [542.0, 4.818181818181818], [541.0, 6.428571428571429], [543.0, 4.125], [539.0, 3.4230769230769225], [540.0, 3.8421052631578947], [536.0, 4.066666666666666], [537.0, 4.476190476190476], [534.0, 2.714285714285715], [535.0, 3.0], [572.0, 6.342857142857142], [560.0, 4.166666666666666], [563.0, 5.944444444444444], [562.0, 6.333333333333334], [561.0, 3.9999999999999996], [559.0, 5.2727272727272725], [567.0, 5.333333333333333], [566.0, 5.052631578947368], [565.0, 3.0], [564.0, 3.5384615384615388], [570.0, 5.100000000000001], [571.0, 4.619047619047619], [569.0, 4.75], [568.0, 5.052631578947368], [551.0, 5.476190476190476], [547.0, 3.0], [544.0, 4.25], [546.0, 6.0], [545.0, 3.5], [550.0, 7.8], [549.0, 2.8], [548.0, 4.3], [557.0, 5.230769230769231], [558.0, 2.5], [573.0, 5.0], [575.0, 5.0588235294117645], [574.0, 4.5], [555.0, 4.90909090909091], [552.0, 4.624999999999999], [553.0, 4.7142857142857135], [554.0, 4.944444444444445], [556.0, 3.8], [580.0, 4.555555555555556], [586.0, 10.0], [585.0, 4.0], [584.0, 4.210526315789474], [588.0, 7.222222222222221], [587.0, 5.0], [589.0, 6.086956521739131], [583.0, 3.8666666666666663], [603.0, 2.6], [602.0, 2.5], [601.0, 2.0], [600.0, 4.888888888888889], [581.0, 2.0], [582.0, 9.0], [577.0, 3.4], [579.0, 3.0], [578.0, 5.166666666666666], [590.0, 4.75], [591.0, 6.333333333333333], [576.0, 4.266666666666667], [596.0, 4.75], [597.0, 3.6538461538461537], [599.0, 4.0], [598.0, 3.6], [604.0, 5.071428571428571], [606.0, 4.2], [605.0, 4.0], [607.0, 4.222222222222222], [594.0, 2.6666666666666665], [593.0, 14.333333333333334], [592.0, 14.0], [609.0, 4.285714285714286], [620.0, 6.652173913043479], [608.0, 7.125], [623.0, 0.7777777777777778], [610.0, 2.277777777777778], [611.0, 6.5625], [613.0, 6.647058823529412], [614.0, 5.333333333333333], [612.0, 5.3999999999999995], [615.0, 5.333333333333333], [624.0, 3.6153846153846154], [639.0, 2.166666666666667], [638.0, 2.0], [636.0, 3.384615384615385], [637.0, 3.5], [634.0, 2.05], [635.0, 3.7301587301587307], [632.0, 4.947368421052631], [633.0, 4.6756756756756745], [625.0, 3.941176470588235], [626.0, 5.000000000000001], [627.0, 3.0], [628.0, 5.379999999999999], [629.0, 3.73170731707317], [630.0, 2.2272727272727275], [631.0, 3.5714285714285716], [616.0, 3.9411764705882355], [617.0, 3.5], [618.0, 4.628571428571429], [619.0, 7.833333333333334], [621.0, 4.777777777777777], [622.0, 3.0277777777777786], [664.0, 4.0], [644.0, 4.199999999999999], [640.0, 4.500000000000001], [641.0, 7.666666666666666], [655.0, 10.0], [642.0, 4.454545454545455], [643.0, 6.769230769230768], [645.0, 4.0625], [646.0, 2.7777777777777777], [647.0, 5.692307692307692], [648.0, 7.37037037037037], [649.0, 4.941176470588234], [650.0, 3.6], [652.0, 4.0], [653.0, 3.3000000000000003], [651.0, 4.0], [654.0, 3.666666666666667], [665.0, 6.052631578947368], [666.0, 1.8333333333333333], [667.0, 1.7692307692307692], [668.0, 5.19047619047619], [669.0, 4.744186046511629], [670.0, 3.5384615384615383], [671.0, 3.0909090909090913], [663.0, 4.166666666666667], [662.0, 5.285714285714286], [661.0, 6.375], [660.0, 4.0], [659.0, 3.6666666666666665], [657.0, 0.33333333333333337], [656.0, 3.769230769230769], [658.0, 4.75], [677.0, 5.222222222222222], [685.0, 5.024390243902437], [672.0, 3.571428571428571], [673.0, 6.75], [674.0, 5.916666666666666], [676.0, 6.714285714285714], [675.0, 5.176470588235294], [678.0, 4.956521739130434], [679.0, 5.400000000000001], [688.0, 7.8], [703.0, 6.333333333333333], [702.0, 6.833333333333334], [701.0, 6.736842105263158], [700.0, 7.666666666666667], [699.0, 6.999999999999999], [698.0, 6.17391304347826], [697.0, 5.9], [696.0, 6.75], [694.0, 7.2857142857142865], [693.0, 6.833333333333333], [692.0, 6.2], [690.0, 2.0], [689.0, 5.666666666666667], [695.0, 6.3125], [681.0, 7.25], [680.0, 8.454545454545453], [682.0, 9.8], [683.0, 7.0], [684.0, 5.488372093023255], [687.0, 7.300000000000001], [710.0, 5.4074074074074066], [706.0, 11.8], [705.0, 12.761904761904763], [719.0, 5.758241758241756], [704.0, 7.5], [716.0, 2.75], [717.0, 4.642857142857143], [718.0, 5.738095238095237], [714.0, 6.333333333333332], [715.0, 5.846153846153847], [707.0, 5.466666666666667], [708.0, 2.5], [709.0, 8.153846153846155], [711.0, 3.0], [728.0, 4.636363636363637], [729.0, 8.363636363636363], [730.0, 2.142857142857143], [731.0, 3.6190476190476195], [732.0, 6.75], [733.0, 7.374999999999999], [734.0, 4.633333333333334], [735.0, 4.05], [720.0, 3.65], [721.0, 3.1999999999999997], [722.0, 2.0], [723.0, 3.2399999999999998], [724.0, 11.157894736842104], [725.0, 18.0], [726.0, 9.374999999999998], [727.0, 7.199999999999998], [712.0, 7.823529411764706], [713.0, 2.7500000000000004], [739.0, 4.178571428571429], [736.0, 8.357142857142858], [750.0, 3.0000000000000004], [751.0, 2.285714285714286], [748.0, 4.529411764705882], [749.0, 3.0], [746.0, 3.9523809523809526], [747.0, 5.8500000000000005], [737.0, 2.0], [738.0, 3.5555555555555554], [740.0, 3.794871794871795], [741.0, 5.057142857142858], [742.0, 5.583333333333333], [743.0, 6.789473684210526], [752.0, 1.75], [766.0, 5.428571428571428], [765.0, 7.666666666666667], [764.0, 10.192307692307692], [763.0, 9.666666666666668], [767.0, 9.464285714285715], [760.0, 11.21739130434782], [761.0, 10.0], [762.0, 7.147058823529412], [753.0, 1.8749999999999998], [754.0, 2.2800000000000007], [755.0, 4.833333333333334], [759.0, 12.722222222222225], [758.0, 10.2], [757.0, 3.9230769230769225], [756.0, 6.6], [744.0, 4.153846153846155], [745.0, 3.703703703703704], [793.0, 3.7142857142857144], [780.0, 0.7692307692307693], [773.0, 7.352941176470587], [775.0, 5.9565217391304355], [792.0, 28.0], [774.0, 12.0], [794.0, 4.333333333333333], [795.0, 1.0], [796.0, 1.8], [797.0, 1.7894736842105263], [799.0, 5.615384615384616], [784.0, 0.0], [785.0, 1.3333333333333335], [786.0, 6.666666666666667], [787.0, 1.8], [788.0, 2.0], [789.0, 1.2], [790.0, 1.0000000000000002], [791.0, 3.9705882352941178], [776.0, 2.3888888888888893], [777.0, 0.3333333333333333], [779.0, 0.6666666666666667], [781.0, 0.8333333333333334], [782.0, 1.5999999999999999], [783.0, 0.8333333333333334], [768.0, 7.666666666666667], [772.0, 11.2], [771.0, 9.4], [769.0, 4.966666666666667], [806.0, 1.5000000000000002], [812.0, 7.749999999999999], [801.0, 5.5], [800.0, 6.6], [803.0, 2.5], [804.0, 1.1071428571428572], [805.0, 1.5], [816.0, 3.25], [830.0, 3.7812499999999996], [831.0, 6.0], [828.0, 4.560000000000001], [829.0, 4.037037037037037], [826.0, 3.9090909090909096], [827.0, 2.9687500000000004], [824.0, 3.903225806451612], [807.0, 5.0], [825.0, 1.384615384615385], [817.0, 5.090909090909091], [818.0, 6.083333333333333], [819.0, 3.0588235294117645], [821.0, 2.9999999999999996], [820.0, 7.636363636363636], [822.0, 2.8333333333333335], [823.0, 2.2666666666666666], [809.0, 5.142857142857142], [808.0, 1.0], [810.0, 4.105263157894737], [811.0, 2.3], [814.0, 6.3181818181818175], [813.0, 13.0], [815.0, 11.299999999999999], [856.0, 12.5], [833.0, 1.6444444444444444], [832.0, 2.875], [847.0, 3.4000000000000004], [846.0, 12.142857142857142], [837.0, 1.0], [836.0, 3.0], [835.0, 14.166666666666668], [834.0, 6.0], [838.0, 1.0952380952380953], [839.0, 2.6666666666666665], [857.0, 5.32142857142857], [858.0, 7.1818181818181825], [859.0, 15.384615384615383], [860.0, 1.0], [861.0, 25.0], [862.0, 9.807692307692308], [863.0, 6.761904761904761], [848.0, 3.1333333333333337], [849.0, 6.65], [850.0, 2.0666666666666664], [851.0, 7.954545454545454], [852.0, 7.124999999999999], [853.0, 4.258064516129033], [854.0, 8.25], [855.0, 7.095238095238096], [842.0, 4.571428571428571], [841.0, 15.2], [840.0, 3.5], [843.0, 7.121951219512195], [844.0, 9.347826086956523], [845.0, 2.964285714285715], [868.0, 9.5], [877.0, 2.861538461538462], [865.0, 10.952380952380953], [864.0, 1.5454545454545452], [878.0, 2.783132530120482], [879.0, 4.3508771929824555], [866.0, 8.780487804878048], [867.0, 8.0], [875.0, 19.375], [874.0, 6.2], [876.0, 4.885416666666669], [873.0, 12.583333333333332], [872.0, 14.833333333333332], [870.0, 7.333333333333333], [869.0, 13.941176470588236], [871.0, 2.285714285714286], [888.0, 6.615942028985503], [889.0, 6.177777777777777], [890.0, 16.454545454545457], [891.0, 6.662790697674421], [892.0, 14.333333333333332], [893.0, 6.819750719079575], [894.0, 6.640366972477064], [895.0, 15.30769230769231], [880.0, 5.489795918367345], [881.0, 4.457556935817805], [882.0, 14.360655737704915], [883.0, 3.6428571428571432], [884.0, 4.366666666666667], [885.0, 4.872881355932204], [886.0, 4.942492012779551], [887.0, 7.357894736842107], [901.0, 3.333333333333333], [897.0, 15.314024390243905], [896.0, 9.325000000000003], [910.0, 1.1578947368421053], [911.0, 5.538461538461538], [898.0, 30.4], [899.0, 13.066666666666665], [900.0, 28.62228260869567], [902.0, 2.6526946107784433], [920.0, 9.058823529411763], [923.0, 11.666666666666668], [922.0, 27.0], [921.0, 9.285714285714286], [924.0, 7.692307692307692], [925.0, 8.448113207547166], [927.0, 10.285714285714285], [926.0, 10.749999999999998], [912.0, 4.708333333333335], [913.0, 4.823529411764705], [914.0, 1.6428571428571428], [915.0, 3.430769230769231], [917.0, 10.027777777777777], [918.0, 3.0], [919.0, 3.8862876254180603], [908.0, 6.458881578947361], [909.0, 3.3103448275862073], [934.0, 25.36363636363636], [928.0, 6.0], [929.0, 12.974736842105266], [931.0, 17.230769230769234], [930.0, 14.260869565217392], [933.0, 26.142857142857142], [932.0, 10.111111111111112], [938.0, 17.656934306569337], [939.0, 6.522872032426169], [937.0, 13.761904761904763], [936.0, 6.6], [935.0, 8.894736842105265], [952.0, 6.5625], [955.0, 9.217391304347828], [954.0, 8.384615384615387], [957.0, 9.357142857142856], [956.0, 1.5], [959.0, 23.5], [958.0, 16.333333333333332], [953.0, 9.82857142857143], [944.0, 18.842105263157887], [945.0, 26.27868852459016], [946.0, 12.823232323232327], [947.0, 19.02173913043478], [948.0, 36.07006369426752], [950.0, 7.416666666666667], [951.0, 8.333333333333334], [949.0, 6.142857142857143], [940.0, 5.283446712018137], [941.0, 8.727272727272727], [942.0, 8.938775510204085], [943.0, 11.201954397394122], [967.0, 36.38888888888888], [973.0, 2.8333333333333335], [984.0, 13.067961165048537], [985.0, 5.317757009345794], [986.0, 10.75], [987.0, 3.0201342281879193], [988.0, 5.904974016332587], [989.0, 8.593283582089553], [991.0, 12.181818181818182], [990.0, 9.777777777777779], [966.0, 14.285714285714286], [965.0, 15.2], [964.0, 19.866666666666667], [963.0, 42.0], [962.0, 57.75], [961.0, 9.333333333333334], [960.0, 20.0], [968.0, 3.0], [971.0, 2.8636363636363638], [972.0, 2.84], [974.0, 2.428571428571429], [975.0, 2.5], [976.0, 5.457142857142857], [981.0, 4.660899653979239], [982.0, 17.5], [995.0, 25.88571428571429], [992.0, 14.650837988826815], [993.0, 12.916295636687463], [994.0, 13.929245283018858], [1000.0, 12.24430502923798], [999.0, 22.0], [998.0, 21.166666666666664], [996.0, 9.833333333333334], [997.0, 25.949999999999996]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[985.1664035148382, 12.056943331767213]], "isOverall": false, "label": "Get Fruit 2-Aggregated", "isController": false}, {"data": [[117.0, 56.75], [119.0, 45.2], [118.0, 4.0], [122.0, 51.66666666666667], [123.0, 35.333333333333336], [121.0, 52.333333333333336], [120.0, 59.25], [124.0, 49.714285714285715], [125.0, 45.0], [126.0, 20.75], [127.0, 39.625], [128.0, 4.571428571428572], [129.0, 43.400000000000006], [135.0, 20.375000000000004], [133.0, 29.454545454545453], [132.0, 13.0], [137.0, 7.999999999999998], [151.0, 46.0], [150.0, 0.0], [148.0, 20.0], [147.0, 21.5], [152.0, 11.909090909090908], [153.0, 0.6315789473684212], [154.0, 5.555555555555555], [157.0, 12.333333333333334], [158.0, 8.0], [166.0, 8.0], [162.0, 21.333333333333332], [165.0, 4.25], [168.0, 3.4], [169.0, 5.5], [170.0, 1.0], [171.0, 0.0], [172.0, 1.0], [174.0, 0.0], [175.0, 2.0], [176.0, 34.0], [179.0, 2.4], [180.0, 2.7058823529411766], [181.0, 18.0], [182.0, 3.0], [183.0, 1.0], [184.0, 15.09090909090909], [185.0, 7.5], [187.0, 8.0], [189.0, 1.0], [188.0, 8.0], [197.0, 18.8], [199.0, 0.0], [196.0, 23.0], [195.0, 1.0], [193.0, 0.6666666666666666], [200.0, 1.0], [201.0, 1.0], [202.0, 1.6], [203.0, 1.5454545454545454], [204.0, 1.75], [205.0, 0.6666666666666667], [206.0, 0.75], [209.0, 1.0], [210.0, 1.0], [211.0, 1.5], [213.0, 1.076923076923077], [215.0, 2.0], [212.0, 1.0], [218.0, 7.25], [219.0, 14.0], [220.0, 2.75], [221.0, 2.5], [222.0, 2.0], [223.0, 3.714285714285714], [224.0, 3.0], [225.0, 3.3333333333333335], [226.0, 1.0], [227.0, 2.4], [228.0, 1.5], [229.0, 5.0], [230.0, 2.5], [231.0, 3.125], [232.0, 3.428571428571429], [233.0, 28.0], [235.0, 4.214285714285714], [236.0, 6.0], [237.0, 3.4], [238.0, 4.125], [234.0, 3.5], [240.0, 1.0], [243.0, 10.393939393939393], [247.0, 6.1818181818181825], [246.0, 15.0], [244.0, 4.0], [245.0, 20.5], [249.0, 1.0], [251.0, 3.666666666666667], [254.0, 2.5], [253.0, 1.5], [269.0, 2.2727272727272725], [256.0, 1.75], [258.0, 1.2], [259.0, 4.3], [264.0, 4.000000000000001], [270.0, 8.0], [271.0, 5.07142857142857], [267.0, 25.333333333333332], [265.0, 1.0], [273.0, 1.5], [272.0, 7.0], [274.0, 2.833333333333333], [275.0, 2.0], [277.0, 1.4444444444444444], [278.0, 9.5], [279.0, 2.7499999999999996], [282.0, 4.333333333333333], [283.0, 0.0], [280.0, 1.875], [281.0, 10.5], [286.0, 1.5], [287.0, 3.666666666666667], [284.0, 1.25], [285.0, 1.0], [288.0, 4.625], [289.0, 3.5], [291.0, 3.0], [301.0, 6.5], [302.0, 7.7], [293.0, 2.6666666666666665], [294.0, 1.75], [295.0, 1.6], [296.0, 1.875], [292.0, 2.3333333333333335], [297.0, 1.75], [299.0, 1.3], [306.0, 1.0], [311.0, 1.0], [309.0, 16.666666666666668], [312.0, 4.714285714285714], [313.0, 3.0], [314.0, 2.75], [315.0, 3.75], [317.0, 12.42857142857143], [316.0, 5.666666666666667], [305.0, 4.0], [322.0, 1.0], [320.0, 2.6666666666666665], [326.0, 1.0], [323.0, 0.0], [324.0, 2.0], [325.0, 3.0], [332.0, 2.0], [333.0, 1.0], [334.0, 2.2], [335.0, 1.0], [331.0, 11.0], [338.0, 10.0], [336.0, 5.181818181818182], [339.0, 3.846153846153846], [348.0, 3.25], [349.0, 2.25], [350.0, 1.6666666666666667], [351.0, 2.5], [340.0, 24.666666666666664], [341.0, 1.3333333333333333], [342.0, 2.0], [343.0, 1.0], [344.0, 2.75], [345.0, 2.3333333333333335], [346.0, 2.5555555555555554], [347.0, 2.0], [355.0, 2.25], [353.0, 8.333333333333334], [352.0, 4.2], [354.0, 5.555555555555555], [356.0, 13.5], [359.0, 3.5714285714285716], [360.0, 5.1875], [363.0, 4.857142857142858], [362.0, 11.5], [361.0, 13.0], [364.0, 2.0], [365.0, 6.333333333333334], [366.0, 2.1538461538461537], [367.0, 4.666666666666667], [369.0, 0.5], [368.0, 4.1875], [370.0, 3.1764705882352935], [371.0, 1.611111111111111], [373.0, 2.0], [372.0, 3.333333333333333], [374.0, 8.5], [375.0, 2.0], [376.0, 1.153846153846154], [382.0, 2.230769230769231], [380.0, 1.9090909090909094], [381.0, 1.5], [377.0, 1.0], [378.0, 1.1666666666666665], [379.0, 1.7142857142857144], [385.0, 2.5555555555555554], [384.0, 2.588235294117647], [386.0, 1.8], [387.0, 2.25], [388.0, 1.6923076923076925], [389.0, 3.866666666666667], [390.0, 5.5], [391.0, 1.7777777777777777], [392.0, 2.9375], [398.0, 6.058823529411764], [399.0, 2.0], [396.0, 8.0], [397.0, 4.285714285714286], [393.0, 3.25], [394.0, 2.4000000000000004], [395.0, 4.161290322580644], [403.0, 15.577777777777774], [401.0, 6.666666666666666], [400.0, 1.6666666666666667], [402.0, 1.8], [412.0, 29.888888888888893], [413.0, 31.666666666666664], [408.0, 59.0], [407.0, 65.0], [404.0, 17.5], [409.0, 49.0], [411.0, 53.0], [429.0, 5.5], [422.0, 1.0], [420.0, 6.5], [417.0, 20.111111111111107], [426.0, 4.0], [427.0, 8.0], [428.0, 2.0], [431.0, 2.0], [424.0, 2.571428571428571], [425.0, 1.0], [416.0, 30.5], [423.0, 4.666666666666667], [418.0, 7.0], [437.0, 4.75], [445.0, 2.9], [446.0, 2.2], [442.0, 1.6], [441.0, 2.75], [461.0, 1.8], [449.0, 4.25], [451.0, 4.0], [460.0, 2.0], [453.0, 2.944444444444445], [454.0, 3.8], [455.0, 1.0], [457.0, 1.625], [458.0, 2.5], [459.0, 2.944444444444444], [462.0, 1.1333333333333333], [465.0, 1.2], [468.0, 1.7777777777777777], [469.0, 0.8571428571428572], [471.0, 1.1666666666666667], [464.0, 0.0], [472.0, 0.25], [473.0, 1.0], [474.0, 3.0], [477.0, 4.0], [476.0, 2.7777777777777772], [466.0, 1.0], [478.0, 1.0], [479.0, 1.0], [482.0, 1.0], [484.0, 2.8000000000000003], [485.0, 5.5], [486.0, 1.1666666666666667], [487.0, 4.25], [488.0, 2.0], [494.0, 4.666666666666667], [495.0, 4.181818181818181], [490.0, 5.249999999999999], [491.0, 6.0], [492.0, 4.0], [493.0, 4.583333333333333], [497.0, 5.428571428571428], [496.0, 4.352941176470587], [498.0, 1.0], [499.0, 4.9], [500.0, 1.0], [501.0, 2.666666666666667], [502.0, 6.959999999999999], [503.0, 6.0], [510.0, 1.1], [508.0, 2.0], [509.0, 1.0], [511.0, 3.9000000000000004], [504.0, 3.714285714285715], [506.0, 4.714285714285714], [507.0, 2.0], [517.0, 1.1], [515.0, 1.5714285714285714], [514.0, 2.666666666666667], [513.0, 3.25], [512.0, 2.0], [518.0, 2.9], [519.0, 5.2], [522.0, 4.585365853658536], [520.0, 1.5], [521.0, 3.0], [523.0, 4.666666666666666], [524.0, 6.0], [525.0, 7.066666666666666], [526.0, 5.0], [527.0, 5.500000000000001], [529.0, 2.0], [531.0, 4.0], [542.0, 4.428571428571429], [541.0, 4.333333333333334], [543.0, 4.0], [539.0, 2.0], [540.0, 4.777777777777779], [536.0, 1.3333333333333333], [538.0, 1.6666666666666667], [534.0, 4.2], [535.0, 2.0], [551.0, 5.249999999999999], [544.0, 5.5], [547.0, 3.0], [545.0, 3.0], [548.0, 4.090909090909091], [549.0, 3.6], [563.0, 6.5625], [564.0, 4.037037037037037], [565.0, 1.5], [566.0, 3.625], [567.0, 2.4], [559.0, 5.333333333333333], [558.0, 5.0], [570.0, 3.384615384615384], [569.0, 2.0], [573.0, 1.0], [560.0, 5.2], [575.0, 3.5714285714285716], [574.0, 3.5], [562.0, 3.5], [557.0, 2.5], [555.0, 5.571428571428572], [556.0, 5.0], [554.0, 3.0], [553.0, 4.0], [552.0, 9.5], [589.0, 3.925925925925926], [584.0, 1.0], [586.0, 1.6666666666666667], [588.0, 3.5], [587.0, 8.0], [581.0, 2.4], [583.0, 33.0], [603.0, 3.6666666666666665], [604.0, 4.125], [606.0, 1.875], [607.0, 2.25], [594.0, 1.7999999999999998], [595.0, 2.0], [596.0, 1.0], [597.0, 4.295454545454545], [580.0, 4.416666666666667], [590.0, 2.5], [576.0, 4.0769230769230775], [591.0, 14.0], [579.0, 4.0], [577.0, 4.0], [609.0, 7.0], [620.0, 2.999999999999999], [608.0, 2.75], [623.0, 1.5], [621.0, 8.5], [622.0, 2.8823529411764706], [610.0, 2.142857142857143], [611.0, 29.0], [612.0, 4.357142857142857], [615.0, 11.666666666666666], [632.0, 1.3333333333333333], [633.0, 4.0], [634.0, 3.0], [635.0, 2.8000000000000003], [636.0, 2.75], [637.0, 3.9999999999999996], [638.0, 0.6666666666666667], [639.0, 5.0], [625.0, 2.0], [626.0, 1.2], [627.0, 1.8333333333333335], [628.0, 1.6666666666666665], [629.0, 2.6666666666666665], [630.0, 2.466666666666667], [631.0, 1.8749999999999998], [624.0, 1.25], [616.0, 7.4], [617.0, 0.6666666666666666], [618.0, 2.4761904761904763], [647.0, 8.444444444444445], [643.0, 2.25], [640.0, 1.5], [655.0, 3.0], [654.0, 2.0], [653.0, 2.5], [652.0, 3.0], [651.0, 2.3333333333333335], [641.0, 1.0], [642.0, 4.0], [644.0, 1.3333333333333333], [645.0, 1.0], [646.0, 0.5], [664.0, 4.666666666666667], [665.0, 1.9999999999999998], [666.0, 3.5000000000000004], [667.0, 3.7], [669.0, 5.545454545454546], [668.0, 4.466666666666667], [670.0, 4.1], [671.0, 2.4166666666666665], [657.0, 3.0], [656.0, 14.0], [659.0, 2.0], [660.0, 3.0], [662.0, 4.5], [661.0, 12.0], [648.0, 9.583333333333332], [649.0, 12.333333333333334], [675.0, 7.0], [685.0, 3.166666666666667], [672.0, 3.0], [673.0, 6.699999999999999], [679.0, 5.879999999999999], [698.0, 5.0], [697.0, 3.0], [701.0, 7.0], [699.0, 11.0], [688.0, 3.8], [690.0, 7.0], [693.0, 8.0], [692.0, 11.0], [695.0, 9.0], [694.0, 9.0], [703.0, 11.0], [678.0, 4.125], [674.0, 4.733333333333333], [677.0, 5.333333333333334], [676.0, 6.0], [681.0, 2.5], [683.0, 2.2222222222222223], [684.0, 3.8], [687.0, 6.0], [682.0, 6.5], [710.0, 1.8333333333333337], [706.0, 6.0], [705.0, 11.105263157894736], [719.0, 3.3414634146341466], [716.0, 3.4999999999999996], [717.0, 9.714285714285714], [718.0, 4.476190476190476], [707.0, 3.0], [708.0, 4.666666666666667], [709.0, 3.5454545454545454], [720.0, 3.25], [734.0, 4.03225806451613], [735.0, 4.000000000000001], [732.0, 4.884615384615385], [733.0, 3.0909090909090913], [730.0, 3.625], [731.0, 7.529411764705882], [728.0, 2.947368421052632], [729.0, 4.666666666666666], [721.0, 2.466666666666667], [722.0, 2.0], [723.0, 2.1470588235294117], [724.0, 15.25], [725.0, 22.846153846153847], [726.0, 14.571428571428573], [727.0, 6.170212765957446], [712.0, 3.0000000000000004], [713.0, 3.727272727272727], [714.0, 4.6], [715.0, 4.0], [742.0, 8.0], [738.0, 1.5], [737.0, 2.166666666666667], [736.0, 12.0], [750.0, 2.090909090909091], [751.0, 1.3333333333333335], [748.0, 4.333333333333334], [749.0, 4.428571428571429], [739.0, 2.357142857142857], [740.0, 5.105263157894736], [741.0, 4.0], [752.0, 2.3333333333333335], [767.0, 8.0], [764.0, 6.5], [763.0, 14.0], [765.0, 6.75], [766.0, 3.8666666666666663], [760.0, 11.78723404255319], [743.0, 10.0], [761.0, 11.25], [762.0, 3.8947368421052624], [753.0, 2.0588235294117645], [754.0, 2.85], [755.0, 5.333333333333333], [757.0, 1.076923076923077], [756.0, 5.636363636363636], [759.0, 5.533333333333334], [758.0, 13.5], [744.0, 2.7500000000000004], [745.0, 5.631578947368421], [746.0, 3.3684210526315788], [747.0, 8.625], [793.0, 2.5555555555555554], [780.0, 1.2857142857142858], [773.0, 2.888888888888889], [775.0, 6.714285714285714], [792.0, 1.4], [774.0, 10.5], [795.0, 1.9999999999999998], [794.0, 4.888888888888889], [796.0, 1.8125], [797.0, 3.1463414634146334], [799.0, 7.419354838709677], [784.0, 2.4], [785.0, 1.853658536585366], [786.0, 0.0], [787.0, 1.6666666666666665], [788.0, 2.5], [789.0, 1.3571428571428572], [790.0, 1.4666666666666666], [791.0, 4.897959183673467], [776.0, 2.3636363636363638], [777.0, 2.0], [779.0, 1.7777777777777777], [781.0, 1.3333333333333333], [782.0, 1.9], [783.0, 1.1666666666666665], [768.0, 4.5], [772.0, 8.5], [771.0, 19.5], [769.0, 3.658536585365854], [802.0, 5.5], [812.0, 6.8], [801.0, 6.333333333333333], [815.0, 6.416666666666667], [800.0, 4.0], [813.0, 2.3333333333333335], [814.0, 3.272727272727273], [803.0, 3.8571428571428568], [804.0, 1.1363636363636362], [806.0, 1.6521739130434785], [805.0, 6.0], [807.0, 10.0], [824.0, 2.952380952380952], [825.0, 2.666666666666667], [826.0, 4.500000000000001], [827.0, 3.9310344827586214], [828.0, 4.499999999999999], [829.0, 2.64], [830.0, 3.2631578947368416], [831.0, 6.0], [816.0, 4.0], [817.0, 2.0000000000000004], [818.0, 6.5], [819.0, 1.6818181818181817], [821.0, 1.7692307692307692], [822.0, 1.2380952380952384], [823.0, 1.904761904761905], [809.0, 6.8], [808.0, 6.75], [810.0, 2.2222222222222223], [811.0, 5.0], [839.0, 1.3333333333333333], [833.0, 1.6304347826086953], [832.0, 2.7], [847.0, 4.9411764705882355], [846.0, 12.8], [835.0, 13.11111111111111], [834.0, 14.555555555555555], [837.0, 0.9090909090909092], [838.0, 2.40625], [857.0, 7.473684210526316], [856.0, 11.0], [858.0, 7.928571428571429], [859.0, 4.166666666666667], [860.0, 0.95], [861.0, 7.111111111111111], [862.0, 9.425], [863.0, 1.696969696969697], [848.0, 2.5909090909090913], [849.0, 10.437500000000002], [850.0, 1.4666666666666666], [852.0, 1.2], [851.0, 11.333333333333334], [853.0, 0.9729729729729728], [854.0, 18.0], [855.0, 3.391304347826087], [842.0, 4.6], [841.0, 12.666666666666666], [843.0, 5.972972972972973], [844.0, 7.812500000000001], [845.0, 2.545454545454545], [888.0, 5.827298050139275], [865.0, 6.517241379310344], [864.0, 1.9304347826086967], [879.0, 4.981132075471697], [877.0, 3.4081632653061225], [878.0, 2.5858585858585847], [866.0, 3.578947368421052], [869.0, 19.416666666666668], [867.0, 45.0], [875.0, 12.333333333333332], [876.0, 4.615062761506273], [873.0, 17.6], [872.0, 22.666666666666668], [874.0, 17.25], [871.0, 3.888888888888889], [889.0, 6.133333333333333], [890.0, 3.8], [891.0, 6.82608695652174], [892.0, 21.333333333333332], [893.0, 6.322661644695549], [894.0, 6.487142857142856], [895.0, 15.0625], [880.0, 4.197530864197531], [881.0, 3.8498402555910527], [882.0, 12.611111111111109], [883.0, 4.413793103448277], [884.0, 2.3414634146341458], [885.0, 4.3211009174311865], [886.0, 5.0893854748603395], [887.0, 7.881818181818183], [870.0, 20.16666666666666], [902.0, 2.502793296089387], [897.0, 15.482598607888635], [896.0, 9.318965517241372], [898.0, 19.0], [899.0, 19.2], [900.0, 25.960227272727252], [901.0, 7.2], [912.0, 4.852090032154339], [925.0, 8.535315985130119], [926.0, 4.5], [927.0, 10.714285714285714], [923.0, 8.0], [922.0, 12.5], [924.0, 7.376811594202899], [920.0, 14.25], [921.0, 14.583333333333334], [913.0, 1.6428571428571428], [914.0, 1.833333333333333], [915.0, 3.2686567164179103], [918.0, 3.052631578947368], [917.0, 9.899999999999999], [916.0, 3.0], [919.0, 3.74418604651163], [908.0, 6.231081081081085], [909.0, 3.8400000000000003], [910.0, 0.9285714285714286], [911.0, 9.5], [953.0, 18.374999999999996], [929.0, 13.186544342507657], [938.0, 15.21621621621622], [939.0, 5.69570707070707], [937.0, 12.444444444444443], [936.0, 6.25], [940.0, 5.696969696969695], [941.0, 8.819148936170212], [942.0, 9.20979020979021], [943.0, 10.709923664122142], [928.0, 4.666666666666667], [934.0, 11.61111111111111], [952.0, 7.2727272727272725], [935.0, 2.3333333333333335], [955.0, 7.222222222222223], [954.0, 5.307692307692307], [957.0, 11.34782608695652], [956.0, 14.249999999999998], [959.0, 16.5], [958.0, 7.8], [944.0, 16.509433962264154], [945.0, 26.11428571428571], [946.0, 13.358606557377051], [948.0, 33.8642857142857], [951.0, 18.833333333333332], [949.0, 3.1], [950.0, 8.3], [947.0, 20.260869565217394], [933.0, 6.666666666666667], [932.0, 22.230769230769234], [931.0, 15.942857142857143], [930.0, 7.629629629629629], [974.0, 4.916666666666666], [967.0, 21.92233009708739], [971.0, 2.678571428571429], [972.0, 2.0909090909090904], [973.0, 2.2222222222222228], [975.0, 4.0], [960.0, 13.0], [962.0, 21.5], [961.0, 36.22222222222222], [966.0, 18.650000000000002], [965.0, 12.8], [964.0, 21.599999999999994], [963.0, 75.33333333333333], [976.0, 2.352941176470588], [991.0, 13.56060606060606], [990.0, 16.750000000000004], [988.0, 6.036963036963032], [989.0, 8.570754716981126], [986.0, 2.8548387096774195], [987.0, 3.483443708609273], [984.0, 12.725173210161653], [985.0, 3.677130044843051], [977.0, 3.0], [981.0, 4.1626297577854645], [982.0, 27.0], [995.0, 15.840909090909086], [992.0, 13.89693593314763], [993.0, 12.435261707988971], [994.0, 13.780429594272071], [1000.0, 12.24603407648759], [999.0, 29.25], [998.0, 27.6], [997.0, 28.421052631578952], [996.0, 26.666666666666664]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[999.6640892711673, 12.236330475834507]], "isOverall": false, "label": "Get Fruit 1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2135320.0, "minX": 1.65234969E12, "maxY": 9107998.4, "series": [{"data": [[1.65234995E12, 6701436.4], [1.65234978E12, 6744317.6], [1.65234999E12, 2135320.0], [1.65234982E12, 6725540.4], [1.65234986E12, 6738420.4], [1.65234969E12, 3486809.2], [1.6523499E12, 6744483.2], [1.65234973E12, 6725650.8], [1.65234994E12, 6685198.4], [1.65234977E12, 6731272.0], [1.65234998E12, 6738080.0], [1.65234981E12, 6547299.6], [1.65234985E12, 6667304.4], [1.65234989E12, 6718631.2], [1.65234972E12, 6708594.0], [1.65234993E12, 6627118.8], [1.65234976E12, 6680432.8], [1.65234997E12, 6687397.2], [1.6523498E12, 6702862.4], [1.65234971E12, 6714380.8], [1.65234984E12, 6599960.4], [1.65234975E12, 6509552.0], [1.65234988E12, 6694444.4], [1.65234979E12, 6721842.0], [1.65234992E12, 6729045.6], [1.65234983E12, 6726635.2], [1.65234996E12, 6714261.2], [1.65234987E12, 6608470.4], [1.6523497E12, 6298200.4], [1.65234991E12, 6732698.0], [1.65234974E12, 6757547.2]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65234995E12, 9032370.8], [1.65234978E12, 9090167.2], [1.65234999E12, 2878040.0], [1.65234982E12, 9064858.8], [1.65234986E12, 9082218.8], [1.65234969E12, 4699612.4], [1.6523499E12, 9090390.4], [1.65234973E12, 9065007.6], [1.65234994E12, 9010484.8], [1.65234977E12, 9072584.0], [1.65234998E12, 9081760.0], [1.65234981E12, 8824621.2], [1.65234985E12, 8986366.8], [1.65234989E12, 9055546.4], [1.65234972E12, 9042018.0], [1.65234993E12, 8932203.6], [1.65234976E12, 9004061.6], [1.65234997E12, 9013448.4], [1.6523498E12, 9034292.8], [1.65234971E12, 9049817.6], [1.65234984E12, 8895598.8], [1.65234975E12, 8773744.0], [1.65234988E12, 9022946.8], [1.65234979E12, 9059874.0], [1.65234992E12, 9069583.2], [1.65234983E12, 9066334.4], [1.65234996E12, 9049656.4], [1.65234987E12, 8907068.8], [1.6523497E12, 8488878.8], [1.65234991E12, 9074506.0], [1.65234974E12, 9107998.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234999E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.726453268255955, "minX": 1.65234969E12, "maxY": 14.035271054253396, "series": [{"data": [[1.65234995E12, 12.40784596884448], [1.65234978E12, 12.202822211068368], [1.65234999E12, 2.726453268255955], [1.65234982E12, 12.412413331761444], [1.65234986E12, 12.0426823448568], [1.65234969E12, 14.035271054253396], [1.6523499E12, 12.035209326569332], [1.65234973E12, 11.616229845325817], [1.65234994E12, 11.723620562658834], [1.65234977E12, 12.261462606673588], [1.65234998E12, 12.585843525656076], [1.65234981E12, 12.123486839331568], [1.65234985E12, 12.059404767807722], [1.65234989E12, 11.82473895890856], [1.65234972E12, 11.434875370765422], [1.65234993E12, 12.471783283193094], [1.65234976E12, 12.088773248530304], [1.65234997E12, 12.177229055260925], [1.6523498E12, 12.816447411839754], [1.65234971E12, 11.506515037336278], [1.65234984E12, 12.734782427069515], [1.65234975E12, 12.286932243670684], [1.65234988E12, 11.969570036497148], [1.65234979E12, 12.507343007084039], [1.65234992E12, 12.899424753114149], [1.65234983E12, 12.437569774314216], [1.65234996E12, 12.553462526573046], [1.65234987E12, 12.361420887818397], [1.6523497E12, 12.759603270886272], [1.65234991E12, 12.201084494512266], [1.65234974E12, 11.502443061025904]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.65234995E12, 12.421394424170657], [1.65234978E12, 12.205857795386082], [1.65234999E12, 11.921759502362928], [1.65234982E12, 12.357312904740722], [1.65234986E12, 12.065767455595344], [1.65234969E12, 13.816022183432606], [1.6523499E12, 12.044605478114589], [1.65234973E12, 11.633113195412026], [1.65234994E12, 11.748142268087063], [1.65234977E12, 12.177056425683116], [1.65234998E12, 12.60046205143225], [1.65234981E12, 12.119370103521964], [1.65234985E12, 12.075462621202066], [1.65234989E12, 11.778675393128092], [1.65234972E12, 11.462570590432653], [1.65234993E12, 12.505290755218544], [1.65234976E12, 12.070141263407917], [1.65234997E12, 12.177531069312396], [1.6523498E12, 12.770695173683917], [1.65234971E12, 11.526504594421864], [1.65234984E12, 12.77099566857949], [1.65234975E12, 12.285086615642758], [1.65234988E12, 11.933677225133717], [1.65234979E12, 12.486150985699714], [1.65234992E12, 12.915536752519989], [1.65234983E12, 12.415822604814931], [1.65234996E12, 12.581125518786122], [1.65234987E12, 12.387699521093412], [1.6523497E12, 12.813367946312756], [1.65234991E12, 12.25339580761765], [1.65234974E12, 11.514714734344928]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234999E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2.725059442566198, "minX": 1.65234969E12, "maxY": 14.027472002039714, "series": [{"data": [[1.65234995E12, 12.405572729918571], [1.65234978E12, 12.20068632157838], [1.65234999E12, 2.725059442566198], [1.65234982E12, 12.410022672877602], [1.65234986E12, 12.040860736987275], [1.65234969E12, 14.027472002039714], [1.6523499E12, 12.033369992659074], [1.65234973E12, 11.61437025531076], [1.65234994E12, 11.721594969272438], [1.65234977E12, 12.259117982581115], [1.65234998E12, 12.584076765326731], [1.65234981E12, 12.121173709579953], [1.65234985E12, 12.057201020335201], [1.65234989E12, 11.822338423383288], [1.65234972E12, 11.432640507445326], [1.65234993E12, 12.469240687083099], [1.65234976E12, 12.086207133908728], [1.65234997E12, 12.175142906682156], [1.6523498E12, 12.814846998262201], [1.65234971E12, 11.503788449681522], [1.65234984E12, 12.732774490008651], [1.65234975E12, 12.284812827273456], [1.65234988E12, 11.967226731281713], [1.65234979E12, 12.505605568572722], [1.65234992E12, 12.897538249543642], [1.65234983E12, 12.435720070923608], [1.65234996E12, 12.551826407185754], [1.65234987E12, 12.358934640050174], [1.6523497E12, 12.757281921470597], [1.65234991E12, 12.198996828931586], [1.65234974E12, 11.500112966052965]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.65234995E12, 12.419337743252477], [1.65234978E12, 12.203838618664742], [1.65234999E12, 11.91986104940016], [1.65234982E12, 12.355076934837419], [1.65234986E12, 12.063610114620376], [1.65234969E12, 13.806424389195586], [1.6523499E12, 12.042739984563523], [1.65234973E12, 11.63099483547116], [1.65234994E12, 11.74581872505564], [1.65234977E12, 12.17481661925473], [1.65234998E12, 12.598394835509977], [1.65234981E12, 12.117386221857716], [1.65234985E12, 12.073187185676083], [1.65234989E12, 11.776455503794978], [1.65234972E12, 11.459777186930127], [1.65234993E12, 12.502560580954368], [1.65234976E12, 12.066986463289924], [1.65234997E12, 12.175245226136116], [1.6523498E12, 12.768990671825392], [1.65234971E12, 11.523712040865854], [1.65234984E12, 12.76908671772138], [1.65234975E12, 12.282539179900699], [1.65234988E12, 11.93168583890905], [1.65234979E12, 12.483788587209125], [1.65234992E12, 12.913581394840172], [1.65234983E12, 12.413771698587883], [1.65234996E12, 12.579223303102681], [1.65234987E12, 12.38536910356989], [1.6523497E12, 12.811316337072626], [1.65234991E12, 12.251479978214169], [1.65234974E12, 11.512230729214062]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234999E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65234969E12, "maxY": 0.021470543525551347, "series": [{"data": [[1.65234995E12, 0.0], [1.65234978E12, 0.0], [1.65234999E12, 0.0], [1.65234982E12, 0.0], [1.65234986E12, 0.0], [1.65234969E12, 0.014524937841341566], [1.6523499E12, 0.0], [1.65234973E12, 0.0], [1.65234994E12, 0.0], [1.65234977E12, 0.0], [1.65234998E12, 0.0], [1.65234981E12, 3.344622605714001E-4], [1.65234985E12, 0.0], [1.65234989E12, 0.0], [1.65234972E12, 0.0], [1.65234993E12, 2.2736410142656143E-4], [1.65234976E12, 0.0], [1.65234997E12, 0.0], [1.6523498E12, 0.0], [1.65234971E12, 0.0], [1.65234984E12, 0.0], [1.65234975E12, 3.419325121301315E-4], [1.65234988E12, 0.0], [1.65234979E12, 0.0], [1.65234992E12, 0.0], [1.65234983E12, 0.0], [1.65234996E12, 0.0], [1.65234987E12, 3.086951926981152E-4], [1.6523497E12, 0.0], [1.65234991E12, 0.0], [1.65234974E12, 0.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.65234995E12, 0.0], [1.65234978E12, 0.0], [1.65234999E12, 0.0], [1.65234982E12, 0.0], [1.65234986E12, 0.0], [1.65234969E12, 0.021470543525551347], [1.6523499E12, 0.0], [1.65234973E12, 0.0], [1.65234994E12, 0.0], [1.65234977E12, 0.0], [1.65234998E12, 0.0], [1.65234981E12, 2.866231299245845E-4], [1.65234985E12, 0.0], [1.65234989E12, 0.0], [1.65234972E12, 0.0], [1.65234993E12, 2.2797789170493705E-4], [1.65234976E12, 0.0], [1.65234997E12, 0.0], [1.6523498E12, 0.0], [1.65234971E12, 0.0], [1.65234984E12, 0.0], [1.65234975E12, 3.6472720384292693E-4], [1.65234988E12, 0.0], [1.65234979E12, 0.0], [1.65234992E12, 0.0], [1.65234983E12, 0.0], [1.65234996E12, 0.0], [1.65234987E12, 2.5924501162421495E-4], [1.6523497E12, 0.0], [1.65234991E12, 0.0], [1.65234974E12, 0.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234999E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65234969E12, "maxY": 1076.0, "series": [{"data": [[1.65234995E12, 121.0], [1.65234978E12, 128.0], [1.65234999E12, 111.0], [1.65234982E12, 134.0], [1.65234986E12, 132.0], [1.65234969E12, 208.0], [1.6523499E12, 191.0], [1.65234973E12, 103.0], [1.65234994E12, 124.0], [1.65234977E12, 145.0], [1.65234998E12, 133.0], [1.65234981E12, 1060.0], [1.65234985E12, 122.0], [1.65234989E12, 123.0], [1.65234972E12, 143.0], [1.65234993E12, 145.0], [1.65234976E12, 130.0], [1.65234997E12, 126.0], [1.6523498E12, 132.0], [1.65234971E12, 142.0], [1.65234984E12, 142.0], [1.65234975E12, 1042.0], [1.65234988E12, 147.0], [1.65234979E12, 133.0], [1.65234992E12, 170.0], [1.65234983E12, 148.0], [1.65234996E12, 122.0], [1.65234987E12, 1076.0], [1.6523497E12, 157.0], [1.65234991E12, 128.0], [1.65234974E12, 136.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65234995E12, 26.0], [1.65234978E12, 27.0], [1.65234999E12, 1.0], [1.65234982E12, 24.0], [1.65234986E12, 23.0], [1.65234969E12, 33.0], [1.6523499E12, 25.0], [1.65234973E12, 24.0], [1.65234994E12, 24.0], [1.65234977E12, 27.0], [1.65234998E12, 27.0], [1.65234981E12, 26.0], [1.65234985E12, 26.0], [1.65234989E12, 26.0], [1.65234972E12, 24.0], [1.65234993E12, 26.0], [1.65234976E12, 18.0], [1.65234997E12, 25.0], [1.6523498E12, 28.0], [1.65234971E12, 25.0], [1.65234984E12, 26.0], [1.65234975E12, 30.0], [1.65234988E12, 25.0], [1.65234979E12, 27.0], [1.65234992E12, 26.0], [1.65234983E12, 25.0], [1.65234996E12, 21.0], [1.65234987E12, 23.0], [1.6523497E12, 25.0], [1.65234991E12, 24.0], [1.65234974E12, 20.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65234995E12, 53.0], [1.65234978E12, 51.0], [1.65234999E12, 1.0], [1.65234982E12, 39.0], [1.65234986E12, 48.0], [1.65234969E12, 70.0], [1.6523499E12, 58.0], [1.65234973E12, 43.0], [1.65234994E12, 48.0], [1.65234977E12, 53.0], [1.65234998E12, 68.9900000000016], [1.65234981E12, 55.0], [1.65234985E12, 47.0], [1.65234989E12, 65.0], [1.65234972E12, 44.0], [1.65234993E12, 43.0], [1.65234976E12, 70.0], [1.65234997E12, 49.9900000000016], [1.6523498E12, 47.0], [1.65234971E12, 57.0], [1.65234984E12, 43.0], [1.65234975E12, 66.0], [1.65234988E12, 46.0], [1.65234979E12, 45.0], [1.65234992E12, 43.0], [1.65234983E12, 44.0], [1.65234996E12, 43.0], [1.65234987E12, 49.9900000000016], [1.6523497E12, 47.0], [1.65234991E12, 46.0], [1.65234974E12, 41.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65234995E12, 34.0], [1.65234978E12, 36.0], [1.65234999E12, 1.0], [1.65234982E12, 29.0], [1.65234986E12, 32.0], [1.65234969E12, 48.0], [1.6523499E12, 33.0], [1.65234973E12, 31.0], [1.65234994E12, 32.0], [1.65234977E12, 36.0], [1.65234998E12, 41.0], [1.65234981E12, 37.0], [1.65234985E12, 35.0], [1.65234989E12, 36.0], [1.65234972E12, 30.0], [1.65234993E12, 33.95000000000073], [1.65234976E12, 36.0], [1.65234997E12, 31.0], [1.6523498E12, 34.0], [1.65234971E12, 32.0], [1.65234984E12, 31.0], [1.65234975E12, 45.95000000000073], [1.65234988E12, 32.0], [1.65234979E12, 33.0], [1.65234992E12, 31.0], [1.65234983E12, 30.0], [1.65234996E12, 27.0], [1.65234987E12, 30.0], [1.6523497E12, 31.0], [1.65234991E12, 31.0], [1.65234974E12, 27.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65234995E12, 0.0], [1.65234978E12, 0.0], [1.65234999E12, 0.0], [1.65234982E12, 0.0], [1.65234986E12, 0.0], [1.65234969E12, 0.0], [1.6523499E12, 0.0], [1.65234973E12, 0.0], [1.65234994E12, 0.0], [1.65234977E12, 0.0], [1.65234998E12, 0.0], [1.65234981E12, 0.0], [1.65234985E12, 0.0], [1.65234989E12, 0.0], [1.65234972E12, 0.0], [1.65234993E12, 0.0], [1.65234976E12, 0.0], [1.65234997E12, 0.0], [1.6523498E12, 0.0], [1.65234971E12, 0.0], [1.65234984E12, 0.0], [1.65234975E12, 0.0], [1.65234988E12, 0.0], [1.65234979E12, 0.0], [1.65234992E12, 0.0], [1.65234983E12, 0.0], [1.65234996E12, 0.0], [1.65234987E12, 0.0], [1.6523497E12, 0.0], [1.65234991E12, 0.0], [1.65234974E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65234995E12, 10.0], [1.65234978E12, 10.0], [1.65234999E12, 0.0], [1.65234982E12, 11.0], [1.65234986E12, 6.0], [1.65234969E12, 12.0], [1.6523499E12, 9.0], [1.65234973E12, 8.0], [1.65234994E12, 9.0], [1.65234977E12, 11.0], [1.65234998E12, 8.0], [1.65234981E12, 7.0], [1.65234985E12, 8.0], [1.65234989E12, 10.0], [1.65234972E12, 9.0], [1.65234993E12, 11.0], [1.65234976E12, 5.0], [1.65234997E12, 10.0], [1.6523498E12, 9.0], [1.65234971E12, 10.0], [1.65234984E12, 12.0], [1.65234975E12, 9.0], [1.65234988E12, 9.0], [1.65234979E12, 10.0], [1.65234992E12, 12.0], [1.65234983E12, 10.0], [1.65234996E12, 8.0], [1.65234987E12, 9.0], [1.6523497E12, 10.0], [1.65234991E12, 8.0], [1.65234974E12, 6.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234999E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1445.0, "maxY": 14.0, "series": [{"data": [[73071.0, 10.0], [73263.0, 10.0], [72719.0, 8.0], [73007.0, 10.0], [72623.0, 11.0], [72143.0, 10.0], [73423.0, 9.0], [71503.0, 11.0], [73807.0, 9.0], [73999.0, 11.0], [73839.0, 12.0], [41623.0, 13.0], [51319.0, 11.0], [73198.0, 11.0], [72686.0, 10.0], [72526.0, 11.0], [73038.0, 9.0], [73614.0, 12.0], [71470.0, 7.0], [73966.0, 9.0], [73902.0, 10.0], [73870.0, 10.0], [73838.0, 10.0], [73357.0, 11.0], [72717.0, 5.0], [72877.0, 9.0], [72749.0, 11.0], [73453.0, 8.0], [73389.0, 10.0], [71820.0, 10.0], [72716.0, 7.0], [72460.0, 10.0], [72780.0, 10.0], [72396.0, 9.0], [73228.0, 8.0], [73644.0, 10.0], [72044.0, 9.0], [73036.0, 10.0], [73804.0, 10.0], [74156.0, 10.0], [71787.0, 11.0], [72075.0, 10.0], [71563.0, 9.0], [72331.0, 11.0], [72619.0, 9.0], [47157.0, 11.0], [71818.0, 8.0], [73514.0, 11.0], [72586.0, 9.0], [73418.0, 11.0], [72650.0, 10.0], [71914.0, 9.0], [73738.0, 9.0], [73802.0, 11.0], [74186.0, 10.0], [73962.0, 10.0], [73481.0, 11.0], [71529.0, 8.0], [72169.0, 9.0], [73065.0, 9.0], [72969.0, 10.0], [72265.0, 12.0], [73161.0, 8.0], [73321.0, 9.0], [73545.0, 8.0], [74185.0, 9.0], [74025.0, 9.0], [44532.0, 10.0], [72296.0, 10.0], [72712.0, 7.0], [73000.0, 10.0], [72968.0, 11.0], [71592.0, 8.0], [73384.0, 9.0], [72520.0, 10.0], [72807.0, 11.0], [71303.0, 9.0], [71879.0, 10.0], [73319.0, 11.0], [73831.0, 10.0], [73767.0, 11.0], [73638.0, 8.0], [72710.0, 8.0], [72550.0, 9.0], [72326.0, 11.0], [72422.0, 11.0], [73094.0, 9.0], [1445.0, 2.0], [73605.0, 6.0], [72837.0, 10.0], [72549.0, 5.0], [73093.0, 6.0], [73317.0, 10.0], [72933.0, 10.0], [73765.0, 7.0], [73797.0, 11.0], [2982.0, 0.0], [52498.0, 12.0], [73092.0, 8.0], [71908.0, 7.0], [73604.0, 10.0], [73028.0, 7.0], [72868.0, 5.0], [72644.0, 11.0], [74084.0, 5.0], [68387.0, 3.0], [73347.0, 9.0], [73635.0, 10.0], [72707.0, 10.0], [72099.0, 9.0], [71619.0, 10.0], [71299.0, 10.0], [71715.0, 10.0], [73443.0, 10.0], [73379.0, 11.0], [73603.0, 11.0], [73155.0, 10.0], [73187.0, 10.0], [63121.0, 7.0], [72034.0, 10.0], [71522.0, 9.0], [72706.0, 10.0], [71714.0, 6.0], [73538.0, 11.0], [71778.0, 10.0], [73154.0, 11.0], [73954.0, 9.0], [73409.0, 11.0], [72353.0, 9.0], [72577.0, 10.0], [73697.0, 11.0], [73217.0, 10.0], [79745.0, 0.0], [72992.0, 8.0], [73504.0, 7.0], [72096.0, 10.0], [73056.0, 9.0], [72896.0, 9.0], [72864.0, 10.0], [71456.0, 11.0], [72608.0, 10.0], [72672.0, 11.0], [72960.0, 8.0], [73920.0, 11.0], [73279.0, 7.0], [73695.0, 9.0], [72671.0, 9.0], [72543.0, 8.0], [73663.0, 10.0], [73375.0, 10.0], [71615.0, 10.0], [73055.0, 11.0], [71103.0, 10.0], [71039.0, 10.0], [65359.0, 11.0], [71966.0, 10.0], [72638.0, 9.0], [72926.0, 9.0], [71486.0, 10.0], [72510.0, 11.0], [71774.0, 9.0], [72286.0, 11.0], [72830.0, 8.0], [73086.0, 10.0], [74590.0, 10.0], [73117.0, 10.0], [71933.0, 11.0], [73501.0, 8.0], [73181.0, 10.0], [72605.0, 11.0], [72029.0, 10.0], [73021.0, 10.0], [72957.0, 9.0], [73757.0, 10.0], [74269.0, 10.0], [46670.0, 14.0], [67740.0, 12.0], [73724.0, 10.0], [73500.0, 8.0], [73276.0, 9.0], [73180.0, 10.0], [72508.0, 10.0], [73372.0, 11.0], [73884.0, 10.0], [73083.0, 9.0], [73467.0, 10.0], [69979.0, 9.0], [71131.0, 9.0], [73147.0, 10.0], [51469.0, 10.0], [15323.0, 2.0], [62845.0, 8.0], [69018.0, 12.0], [73050.0, 10.0], [73562.0, 10.0], [72730.0, 8.0], [73178.0, 10.0], [71962.0, 9.0], [73722.0, 11.0], [73242.0, 11.0], [71994.0, 12.0], [74394.0, 11.0], [73850.0, 11.0], [73914.0, 8.0], [73818.0, 10.0], [80986.0, 1.0], [73017.0, 11.0], [73081.0, 7.0], [72505.0, 11.0], [73401.0, 10.0], [71257.0, 12.0], [72921.0, 6.0], [73561.0, 11.0], [74105.0, 10.0], [60860.0, 10.0], [73688.0, 10.0], [72824.0, 9.0], [72504.0, 7.0], [72632.0, 11.0], [73400.0, 10.0], [72952.0, 10.0], [72760.0, 8.0], [73592.0, 10.0], [74232.0, 11.0], [73848.0, 11.0], [73527.0, 6.0], [73175.0, 9.0], [71671.0, 6.0], [73623.0, 9.0], [72951.0, 10.0], [73335.0, 10.0], [60379.0, 10.0], [60763.0, 11.0], [66326.0, 8.0], [73558.0, 11.0], [72950.0, 7.0], [73302.0, 11.0], [71798.0, 9.0], [72694.0, 8.0], [72086.0, 6.0], [72566.0, 11.0], [71606.0, 8.0], [72630.0, 11.0], [72886.0, 10.0], [73782.0, 7.0], [26965.0, 7.0], [68533.0, 11.0], [73173.0, 9.0], [73077.0, 11.0], [72917.0, 11.0], [72885.0, 8.0], [72757.0, 8.0], [72693.0, 10.0], [72085.0, 8.0], [73621.0, 9.0], [71989.0, 8.0], [72341.0, 5.0], [72309.0, 7.0], [71988.0, 7.0], [72532.0, 10.0], [72564.0, 8.0], [74420.0, 11.0], [73844.0, 10.0], [68435.0, 11.0], [72403.0, 8.0], [72147.0, 10.0], [71987.0, 10.0], [72531.0, 9.0], [73330.0, 8.0], [71506.0, 10.0], [71858.0, 10.0], [73298.0, 10.0], [73074.0, 10.0], [72498.0, 7.0], [73714.0, 11.0], [72530.0, 7.0], [73586.0, 11.0], [72402.0, 10.0], [65937.0, 8.0], [73393.0, 6.0], [71345.0, 9.0], [72913.0, 10.0], [73553.0, 9.0], [73841.0, 9.0], [73008.0, 8.0], [73264.0, 10.0], [72816.0, 9.0], [73648.0, 10.0], [73776.0, 9.0], [73808.0, 6.0], [74032.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 80986.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1445.0, "maxY": 14.0, "series": [{"data": [[73071.0, 10.0], [73263.0, 10.0], [72719.0, 8.0], [73007.0, 10.0], [72623.0, 11.0], [72143.0, 10.0], [73423.0, 9.0], [71503.0, 11.0], [73807.0, 9.0], [73999.0, 11.0], [73839.0, 12.0], [41623.0, 13.0], [51319.0, 11.0], [73198.0, 11.0], [72686.0, 10.0], [72526.0, 11.0], [73038.0, 9.0], [73614.0, 12.0], [71470.0, 7.0], [73966.0, 9.0], [73902.0, 10.0], [73870.0, 10.0], [73838.0, 10.0], [73357.0, 11.0], [72717.0, 5.0], [72877.0, 9.0], [72749.0, 11.0], [73453.0, 8.0], [73389.0, 10.0], [71820.0, 10.0], [72716.0, 7.0], [72460.0, 10.0], [72780.0, 10.0], [72396.0, 9.0], [73228.0, 8.0], [73644.0, 10.0], [72044.0, 9.0], [73036.0, 10.0], [73804.0, 10.0], [74156.0, 10.0], [71787.0, 11.0], [72075.0, 10.0], [71563.0, 9.0], [72331.0, 11.0], [72619.0, 9.0], [47157.0, 11.0], [71818.0, 8.0], [73514.0, 11.0], [72586.0, 9.0], [73418.0, 11.0], [72650.0, 10.0], [71914.0, 9.0], [73738.0, 9.0], [73802.0, 11.0], [74186.0, 10.0], [73962.0, 10.0], [73481.0, 11.0], [71529.0, 8.0], [72169.0, 9.0], [73065.0, 9.0], [72969.0, 10.0], [72265.0, 12.0], [73161.0, 8.0], [73321.0, 9.0], [73545.0, 8.0], [74185.0, 9.0], [74025.0, 9.0], [44532.0, 10.0], [72296.0, 10.0], [72712.0, 7.0], [73000.0, 10.0], [72968.0, 11.0], [71592.0, 8.0], [73384.0, 9.0], [72520.0, 10.0], [72807.0, 11.0], [71303.0, 9.0], [71879.0, 10.0], [73319.0, 11.0], [73831.0, 10.0], [73767.0, 11.0], [73638.0, 8.0], [72710.0, 8.0], [72550.0, 9.0], [72326.0, 11.0], [72422.0, 11.0], [73094.0, 9.0], [1445.0, 2.0], [73605.0, 6.0], [72837.0, 10.0], [72549.0, 5.0], [73093.0, 6.0], [73317.0, 10.0], [72933.0, 10.0], [73765.0, 7.0], [73797.0, 11.0], [2982.0, 0.0], [52498.0, 12.0], [73092.0, 8.0], [71908.0, 7.0], [73604.0, 10.0], [73028.0, 7.0], [72868.0, 5.0], [72644.0, 11.0], [74084.0, 5.0], [68387.0, 3.0], [73347.0, 9.0], [73635.0, 10.0], [72707.0, 10.0], [72099.0, 9.0], [71619.0, 10.0], [71299.0, 10.0], [71715.0, 10.0], [73443.0, 10.0], [73379.0, 11.0], [73603.0, 11.0], [73155.0, 10.0], [73187.0, 10.0], [63121.0, 7.0], [72034.0, 10.0], [71522.0, 9.0], [72706.0, 10.0], [71714.0, 6.0], [73538.0, 11.0], [71778.0, 10.0], [73154.0, 11.0], [73954.0, 9.0], [73409.0, 11.0], [72353.0, 9.0], [72577.0, 10.0], [73697.0, 11.0], [73217.0, 10.0], [79745.0, 0.0], [72992.0, 8.0], [73504.0, 7.0], [72096.0, 10.0], [73056.0, 9.0], [72896.0, 9.0], [72864.0, 10.0], [71456.0, 11.0], [72608.0, 10.0], [72672.0, 11.0], [72960.0, 8.0], [73920.0, 11.0], [73279.0, 7.0], [73695.0, 9.0], [72671.0, 9.0], [72543.0, 8.0], [73663.0, 10.0], [73375.0, 10.0], [71615.0, 10.0], [73055.0, 11.0], [71103.0, 10.0], [71039.0, 10.0], [65359.0, 11.0], [71966.0, 10.0], [72638.0, 9.0], [72926.0, 9.0], [71486.0, 10.0], [72510.0, 11.0], [71774.0, 9.0], [72286.0, 11.0], [72830.0, 8.0], [73086.0, 10.0], [74590.0, 10.0], [73117.0, 10.0], [71933.0, 11.0], [73501.0, 8.0], [73181.0, 10.0], [72605.0, 11.0], [72029.0, 10.0], [73021.0, 10.0], [72957.0, 9.0], [73757.0, 10.0], [74269.0, 10.0], [46670.0, 14.0], [67740.0, 12.0], [73724.0, 10.0], [73500.0, 8.0], [73276.0, 9.0], [73180.0, 10.0], [72508.0, 10.0], [73372.0, 11.0], [73884.0, 10.0], [73083.0, 9.0], [73467.0, 10.0], [69979.0, 9.0], [71131.0, 9.0], [73147.0, 10.0], [51469.0, 10.0], [15323.0, 2.0], [62845.0, 8.0], [69018.0, 12.0], [73050.0, 10.0], [73562.0, 10.0], [72730.0, 8.0], [73178.0, 10.0], [71962.0, 9.0], [73722.0, 11.0], [73242.0, 11.0], [71994.0, 12.0], [74394.0, 11.0], [73850.0, 11.0], [73914.0, 8.0], [73818.0, 10.0], [80986.0, 1.0], [73017.0, 11.0], [73081.0, 7.0], [72505.0, 11.0], [73401.0, 10.0], [71257.0, 12.0], [72921.0, 6.0], [73561.0, 11.0], [74105.0, 10.0], [60860.0, 10.0], [73688.0, 10.0], [72824.0, 9.0], [72504.0, 7.0], [72632.0, 11.0], [73400.0, 10.0], [72952.0, 10.0], [72760.0, 8.0], [73592.0, 10.0], [74232.0, 11.0], [73848.0, 11.0], [73527.0, 6.0], [73175.0, 9.0], [71671.0, 6.0], [73623.0, 9.0], [72951.0, 10.0], [73335.0, 10.0], [60379.0, 10.0], [60763.0, 11.0], [66326.0, 8.0], [73558.0, 11.0], [72950.0, 7.0], [73302.0, 11.0], [71798.0, 9.0], [72694.0, 8.0], [72086.0, 6.0], [72566.0, 11.0], [71606.0, 8.0], [72630.0, 11.0], [72886.0, 10.0], [73782.0, 7.0], [26965.0, 7.0], [68533.0, 11.0], [73173.0, 9.0], [73077.0, 11.0], [72917.0, 11.0], [72885.0, 8.0], [72757.0, 8.0], [72693.0, 10.0], [72085.0, 8.0], [73621.0, 9.0], [71989.0, 8.0], [72341.0, 5.0], [72309.0, 7.0], [71988.0, 7.0], [72532.0, 10.0], [72564.0, 8.0], [74420.0, 11.0], [73844.0, 10.0], [68435.0, 11.0], [72403.0, 8.0], [72147.0, 10.0], [71987.0, 10.0], [72531.0, 9.0], [73330.0, 8.0], [71506.0, 10.0], [71858.0, 10.0], [73298.0, 10.0], [73074.0, 10.0], [72498.0, 7.0], [73714.0, 11.0], [72530.0, 7.0], [73586.0, 11.0], [72402.0, 10.0], [65937.0, 8.0], [73393.0, 6.0], [71345.0, 9.0], [72913.0, 10.0], [73553.0, 9.0], [73841.0, 9.0], [73008.0, 8.0], [73264.0, 10.0], [72816.0, 9.0], [73648.0, 10.0], [73776.0, 9.0], [73808.0, 6.0], [74032.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 80986.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 23112.9, "minX": 1.65234969E12, "maxY": 73444.7, "series": [{"data": [[1.65234995E12, 72875.0], [1.65234978E12, 73297.8], [1.65234999E12, 23112.9], [1.65234982E12, 73185.9], [1.65234986E12, 73239.6], [1.65234969E12, 37997.1], [1.6523499E12, 73255.9], [1.65234973E12, 73104.2], [1.65234994E12, 72710.3], [1.65234977E12, 73175.9], [1.65234998E12, 73238.1], [1.65234981E12, 71091.9], [1.65234985E12, 72567.5], [1.65234989E12, 73021.0], [1.65234972E12, 72941.1], [1.65234993E12, 71986.3], [1.65234976E12, 72603.5], [1.65234997E12, 72745.0], [1.6523498E12, 72848.9], [1.65234971E12, 72957.1], [1.65234984E12, 71646.9], [1.65234975E12, 70767.3], [1.65234988E12, 72763.3], [1.65234979E12, 73073.4], [1.65234992E12, 73122.0], [1.65234983E12, 73110.7], [1.65234996E12, 72924.2], [1.65234987E12, 71835.2], [1.6523497E12, 68461.7], [1.65234991E12, 73234.8], [1.65234974E12, 73444.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234999E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 23210.0, "minX": 1.65234969E12, "maxY": 73451.6, "series": [{"data": [[1.65234995E12, 72841.7], [1.65234978E12, 73307.8], [1.65234999E12, 23210.0], [1.65234982E12, 73103.7], [1.65234986E12, 73243.7], [1.65234969E12, 37900.1], [1.6523499E12, 73309.6], [1.65234973E12, 73104.9], [1.65234994E12, 72665.2], [1.65234977E12, 73166.0], [1.65234998E12, 73240.0], [1.65234981E12, 71166.3], [1.65234985E12, 72470.7], [1.65234989E12, 73028.6], [1.65234972E12, 72919.5], [1.65234993E12, 72033.9], [1.65234976E12, 72613.4], [1.65234997E12, 72689.1], [1.6523498E12, 72857.2], [1.65234971E12, 72982.4], [1.65234984E12, 71738.7], [1.65234975E12, 70756.0], [1.65234988E12, 72765.7], [1.65234979E12, 73063.5], [1.65234992E12, 73141.8], [1.65234983E12, 73115.6], [1.65234996E12, 72981.1], [1.65234987E12, 71831.2], [1.6523497E12, 68458.7], [1.65234991E12, 73181.5], [1.65234974E12, 73451.6]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65234999E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2475.7, "minX": 1.65234969E12, "maxY": 36736.7, "series": [{"data": [[1.65234995E12, 36417.9], [1.65234978E12, 36648.6], [1.65234999E12, 2475.7], [1.65234982E12, 36628.4], [1.65234986E12, 36572.8], [1.65234969E12, 19077.3], [1.6523499E12, 36665.9], [1.65234973E12, 36537.7], [1.65234994E12, 36280.8], [1.65234977E12, 36699.6], [1.65234998E12, 36619.3], [1.65234981E12, 35586.8], [1.65234985E12, 36168.9], [1.65234989E12, 36578.4], [1.65234972E12, 36407.2], [1.65234993E12, 35968.4], [1.65234976E12, 36293.9], [1.65234997E12, 36354.2], [1.6523498E12, 36491.6], [1.65234971E12, 36489.9], [1.65234984E12, 35831.2], [1.65234975E12, 35368.9], [1.65234988E12, 36406.8], [1.65234979E12, 36573.0], [1.65234992E12, 36566.2], [1.65234983E12, 36569.2], [1.65234996E12, 36431.2], [1.65234987E12, 35873.4], [1.6523497E12, 34168.3], [1.65234991E12, 36537.7], [1.65234974E12, 36714.9]], "isOverall": false, "label": "Get Fruit 1-success", "isController": false}, {"data": [[1.65234995E12, 36423.8], [1.65234978E12, 36659.2], [1.65234999E12, 20734.3], [1.65234982E12, 36475.3], [1.65234986E12, 36670.9], [1.65234969E12, 18822.8], [1.6523499E12, 36643.7], [1.65234973E12, 36567.2], [1.65234994E12, 36384.4], [1.65234977E12, 36466.4], [1.65234998E12, 36620.7], [1.65234981E12, 35579.5], [1.65234985E12, 36301.8], [1.65234989E12, 36450.2], [1.65234972E12, 36512.3], [1.65234993E12, 36065.5], [1.65234976E12, 36319.5], [1.65234997E12, 36334.9], [1.6523498E12, 36365.6], [1.65234971E12, 36492.5], [1.65234984E12, 35907.5], [1.65234975E12, 35387.1], [1.65234988E12, 36358.9], [1.65234979E12, 36490.5], [1.65234992E12, 36575.6], [1.65234983E12, 36546.4], [1.65234996E12, 36549.9], [1.65234987E12, 35957.8], [1.6523497E12, 34290.4], [1.65234991E12, 36643.8], [1.65234974E12, 36736.7]], "isOverall": false, "label": "Get Fruit 2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234999E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 23210.0, "minX": 1.65234969E12, "maxY": 73451.6, "series": [{"data": [[1.65234995E12, 72841.7], [1.65234978E12, 73307.8], [1.65234999E12, 23210.0], [1.65234982E12, 73103.7], [1.65234986E12, 73243.7], [1.65234969E12, 37900.1], [1.6523499E12, 73309.6], [1.65234973E12, 73104.9], [1.65234994E12, 72665.2], [1.65234977E12, 73166.0], [1.65234998E12, 73240.0], [1.65234981E12, 71166.3], [1.65234985E12, 72470.7], [1.65234989E12, 73028.6], [1.65234972E12, 72919.5], [1.65234993E12, 72033.9], [1.65234976E12, 72613.4], [1.65234997E12, 72689.1], [1.6523498E12, 72857.2], [1.65234971E12, 72982.4], [1.65234984E12, 71738.7], [1.65234975E12, 70756.0], [1.65234988E12, 72765.7], [1.65234979E12, 73063.5], [1.65234992E12, 73141.8], [1.65234983E12, 73115.6], [1.65234996E12, 72981.1], [1.65234987E12, 71831.2], [1.6523497E12, 68458.7], [1.65234991E12, 73181.5], [1.65234974E12, 73451.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65234999E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

