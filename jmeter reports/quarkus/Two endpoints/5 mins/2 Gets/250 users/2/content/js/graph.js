/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 3404.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 5.0], [19.1, 5.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 5.0], [21.7, 5.0], [21.8, 5.0], [21.9, 5.0], [22.0, 5.0], [22.1, 5.0], [22.2, 5.0], [22.3, 5.0], [22.4, 5.0], [22.5, 5.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 5.0], [23.3, 5.0], [23.4, 6.0], [23.5, 6.0], [23.6, 6.0], [23.7, 6.0], [23.8, 6.0], [23.9, 6.0], [24.0, 6.0], [24.1, 6.0], [24.2, 6.0], [24.3, 6.0], [24.4, 6.0], [24.5, 6.0], [24.6, 6.0], [24.7, 6.0], [24.8, 6.0], [24.9, 6.0], [25.0, 6.0], [25.1, 6.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 6.0], [26.3, 6.0], [26.4, 6.0], [26.5, 6.0], [26.6, 6.0], [26.7, 6.0], [26.8, 6.0], [26.9, 6.0], [27.0, 6.0], [27.1, 6.0], [27.2, 6.0], [27.3, 6.0], [27.4, 6.0], [27.5, 6.0], [27.6, 6.0], [27.7, 6.0], [27.8, 6.0], [27.9, 6.0], [28.0, 6.0], [28.1, 6.0], [28.2, 6.0], [28.3, 6.0], [28.4, 6.0], [28.5, 7.0], [28.6, 7.0], [28.7, 7.0], [28.8, 7.0], [28.9, 7.0], [29.0, 7.0], [29.1, 7.0], [29.2, 7.0], [29.3, 7.0], [29.4, 7.0], [29.5, 7.0], [29.6, 7.0], [29.7, 7.0], [29.8, 7.0], [29.9, 7.0], [30.0, 7.0], [30.1, 7.0], [30.2, 7.0], [30.3, 7.0], [30.4, 7.0], [30.5, 7.0], [30.6, 7.0], [30.7, 7.0], [30.8, 7.0], [30.9, 7.0], [31.0, 7.0], [31.1, 7.0], [31.2, 7.0], [31.3, 7.0], [31.4, 7.0], [31.5, 7.0], [31.6, 7.0], [31.7, 7.0], [31.8, 7.0], [31.9, 7.0], [32.0, 7.0], [32.1, 7.0], [32.2, 7.0], [32.3, 7.0], [32.4, 7.0], [32.5, 7.0], [32.6, 7.0], [32.7, 7.0], [32.8, 7.0], [32.9, 7.0], [33.0, 7.0], [33.1, 7.0], [33.2, 7.0], [33.3, 7.0], [33.4, 7.0], [33.5, 7.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 8.0], [38.6, 8.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 11.0], [48.1, 11.0], [48.2, 11.0], [48.3, 11.0], [48.4, 11.0], [48.5, 11.0], [48.6, 11.0], [48.7, 11.0], [48.8, 11.0], [48.9, 11.0], [49.0, 11.0], [49.1, 11.0], [49.2, 11.0], [49.3, 11.0], [49.4, 11.0], [49.5, 11.0], [49.6, 11.0], [49.7, 11.0], [49.8, 11.0], [49.9, 11.0], [50.0, 11.0], [50.1, 11.0], [50.2, 11.0], [50.3, 11.0], [50.4, 11.0], [50.5, 11.0], [50.6, 11.0], [50.7, 11.0], [50.8, 11.0], [50.9, 11.0], [51.0, 11.0], [51.1, 11.0], [51.2, 11.0], [51.3, 11.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 11.0], [52.2, 11.0], [52.3, 12.0], [52.4, 12.0], [52.5, 12.0], [52.6, 12.0], [52.7, 12.0], [52.8, 12.0], [52.9, 12.0], [53.0, 12.0], [53.1, 12.0], [53.2, 12.0], [53.3, 12.0], [53.4, 12.0], [53.5, 12.0], [53.6, 12.0], [53.7, 12.0], [53.8, 12.0], [53.9, 12.0], [54.0, 12.0], [54.1, 12.0], [54.2, 12.0], [54.3, 12.0], [54.4, 12.0], [54.5, 12.0], [54.6, 12.0], [54.7, 12.0], [54.8, 12.0], [54.9, 12.0], [55.0, 12.0], [55.1, 12.0], [55.2, 12.0], [55.3, 12.0], [55.4, 12.0], [55.5, 12.0], [55.6, 12.0], [55.7, 12.0], [55.8, 12.0], [55.9, 12.0], [56.0, 12.0], [56.1, 12.0], [56.2, 12.0], [56.3, 12.0], [56.4, 13.0], [56.5, 13.0], [56.6, 13.0], [56.7, 13.0], [56.8, 13.0], [56.9, 13.0], [57.0, 13.0], [57.1, 13.0], [57.2, 13.0], [57.3, 13.0], [57.4, 13.0], [57.5, 13.0], [57.6, 13.0], [57.7, 13.0], [57.8, 13.0], [57.9, 13.0], [58.0, 13.0], [58.1, 13.0], [58.2, 13.0], [58.3, 13.0], [58.4, 13.0], [58.5, 13.0], [58.6, 13.0], [58.7, 13.0], [58.8, 13.0], [58.9, 13.0], [59.0, 13.0], [59.1, 13.0], [59.2, 13.0], [59.3, 13.0], [59.4, 13.0], [59.5, 13.0], [59.6, 13.0], [59.7, 13.0], [59.8, 13.0], [59.9, 13.0], [60.0, 13.0], [60.1, 14.0], [60.2, 14.0], [60.3, 14.0], [60.4, 14.0], [60.5, 14.0], [60.6, 14.0], [60.7, 14.0], [60.8, 14.0], [60.9, 14.0], [61.0, 14.0], [61.1, 14.0], [61.2, 14.0], [61.3, 14.0], [61.4, 14.0], [61.5, 14.0], [61.6, 14.0], [61.7, 14.0], [61.8, 14.0], [61.9, 14.0], [62.0, 14.0], [62.1, 14.0], [62.2, 14.0], [62.3, 14.0], [62.4, 14.0], [62.5, 14.0], [62.6, 14.0], [62.7, 14.0], [62.8, 14.0], [62.9, 14.0], [63.0, 14.0], [63.1, 14.0], [63.2, 14.0], [63.3, 14.0], [63.4, 14.0], [63.5, 15.0], [63.6, 15.0], [63.7, 15.0], [63.8, 15.0], [63.9, 15.0], [64.0, 15.0], [64.1, 15.0], [64.2, 15.0], [64.3, 15.0], [64.4, 15.0], [64.5, 15.0], [64.6, 15.0], [64.7, 15.0], [64.8, 15.0], [64.9, 15.0], [65.0, 15.0], [65.1, 15.0], [65.2, 15.0], [65.3, 15.0], [65.4, 15.0], [65.5, 15.0], [65.6, 15.0], [65.7, 15.0], [65.8, 15.0], [65.9, 15.0], [66.0, 15.0], [66.1, 15.0], [66.2, 15.0], [66.3, 15.0], [66.4, 15.0], [66.5, 15.0], [66.6, 16.0], [66.7, 16.0], [66.8, 16.0], [66.9, 16.0], [67.0, 16.0], [67.1, 16.0], [67.2, 16.0], [67.3, 16.0], [67.4, 16.0], [67.5, 16.0], [67.6, 16.0], [67.7, 16.0], [67.8, 16.0], [67.9, 16.0], [68.0, 16.0], [68.1, 16.0], [68.2, 16.0], [68.3, 16.0], [68.4, 16.0], [68.5, 16.0], [68.6, 16.0], [68.7, 16.0], [68.8, 16.0], [68.9, 16.0], [69.0, 16.0], [69.1, 16.0], [69.2, 16.0], [69.3, 16.0], [69.4, 17.0], [69.5, 17.0], [69.6, 17.0], [69.7, 17.0], [69.8, 17.0], [69.9, 17.0], [70.0, 17.0], [70.1, 17.0], [70.2, 17.0], [70.3, 17.0], [70.4, 17.0], [70.5, 17.0], [70.6, 17.0], [70.7, 17.0], [70.8, 17.0], [70.9, 17.0], [71.0, 17.0], [71.1, 17.0], [71.2, 17.0], [71.3, 17.0], [71.4, 17.0], [71.5, 17.0], [71.6, 17.0], [71.7, 17.0], [71.8, 17.0], [71.9, 17.0], [72.0, 18.0], [72.1, 18.0], [72.2, 18.0], [72.3, 18.0], [72.4, 18.0], [72.5, 18.0], [72.6, 18.0], [72.7, 18.0], [72.8, 18.0], [72.9, 18.0], [73.0, 18.0], [73.1, 18.0], [73.2, 18.0], [73.3, 18.0], [73.4, 18.0], [73.5, 18.0], [73.6, 18.0], [73.7, 18.0], [73.8, 18.0], [73.9, 18.0], [74.0, 18.0], [74.1, 18.0], [74.2, 18.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 19.0], [75.0, 19.0], [75.1, 19.0], [75.2, 19.0], [75.3, 19.0], [75.4, 19.0], [75.5, 19.0], [75.6, 19.0], [75.7, 19.0], [75.8, 19.0], [75.9, 19.0], [76.0, 19.0], [76.1, 19.0], [76.2, 19.0], [76.3, 19.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 20.0], [76.9, 20.0], [77.0, 20.0], [77.1, 20.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 21.0], [78.4, 21.0], [78.5, 21.0], [78.6, 21.0], [78.7, 21.0], [78.8, 21.0], [78.9, 21.0], [79.0, 21.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 21.0], [79.5, 21.0], [79.6, 21.0], [79.7, 21.0], [79.8, 21.0], [79.9, 21.0], [80.0, 22.0], [80.1, 22.0], [80.2, 22.0], [80.3, 22.0], [80.4, 22.0], [80.5, 22.0], [80.6, 22.0], [80.7, 22.0], [80.8, 22.0], [80.9, 22.0], [81.0, 22.0], [81.1, 22.0], [81.2, 22.0], [81.3, 22.0], [81.4, 22.0], [81.5, 22.0], [81.6, 23.0], [81.7, 23.0], [81.8, 23.0], [81.9, 23.0], [82.0, 23.0], [82.1, 23.0], [82.2, 23.0], [82.3, 23.0], [82.4, 23.0], [82.5, 23.0], [82.6, 23.0], [82.7, 23.0], [82.8, 23.0], [82.9, 23.0], [83.0, 24.0], [83.1, 24.0], [83.2, 24.0], [83.3, 24.0], [83.4, 24.0], [83.5, 24.0], [83.6, 24.0], [83.7, 24.0], [83.8, 24.0], [83.9, 24.0], [84.0, 24.0], [84.1, 24.0], [84.2, 24.0], [84.3, 25.0], [84.4, 25.0], [84.5, 25.0], [84.6, 25.0], [84.7, 25.0], [84.8, 25.0], [84.9, 25.0], [85.0, 25.0], [85.1, 25.0], [85.2, 25.0], [85.3, 25.0], [85.4, 25.0], [85.5, 26.0], [85.6, 26.0], [85.7, 26.0], [85.8, 26.0], [85.9, 26.0], [86.0, 26.0], [86.1, 26.0], [86.2, 26.0], [86.3, 26.0], [86.4, 26.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 28.0], [87.6, 28.0], [87.7, 28.0], [87.8, 28.0], [87.9, 28.0], [88.0, 28.0], [88.1, 28.0], [88.2, 28.0], [88.3, 28.0], [88.4, 29.0], [88.5, 29.0], [88.6, 29.0], [88.7, 29.0], [88.8, 29.0], [88.9, 29.0], [89.0, 29.0], [89.1, 29.0], [89.2, 30.0], [89.3, 30.0], [89.4, 30.0], [89.5, 30.0], [89.6, 30.0], [89.7, 30.0], [89.8, 30.0], [89.9, 30.0], [90.0, 31.0], [90.1, 31.0], [90.2, 31.0], [90.3, 31.0], [90.4, 31.0], [90.5, 31.0], [90.6, 32.0], [90.7, 32.0], [90.8, 32.0], [90.9, 32.0], [91.0, 32.0], [91.1, 32.0], [91.2, 32.0], [91.3, 33.0], [91.4, 33.0], [91.5, 33.0], [91.6, 33.0], [91.7, 33.0], [91.8, 33.0], [91.9, 34.0], [92.0, 34.0], [92.1, 34.0], [92.2, 34.0], [92.3, 34.0], [92.4, 35.0], [92.5, 35.0], [92.6, 35.0], [92.7, 35.0], [92.8, 35.0], [92.9, 36.0], [93.0, 36.0], [93.1, 36.0], [93.2, 36.0], [93.3, 36.0], [93.4, 37.0], [93.5, 37.0], [93.6, 37.0], [93.7, 37.0], [93.8, 38.0], [93.9, 38.0], [94.0, 38.0], [94.1, 38.0], [94.2, 39.0], [94.3, 39.0], [94.4, 39.0], [94.5, 40.0], [94.6, 40.0], [94.7, 40.0], [94.8, 40.0], [94.9, 41.0], [95.0, 41.0], [95.1, 41.0], [95.2, 42.0], [95.3, 42.0], [95.4, 42.0], [95.5, 43.0], [95.6, 43.0], [95.7, 44.0], [95.8, 44.0], [95.9, 44.0], [96.0, 45.0], [96.1, 45.0], [96.2, 46.0], [96.3, 46.0], [96.4, 47.0], [96.5, 47.0], [96.6, 48.0], [96.7, 48.0], [96.8, 49.0], [96.9, 49.0], [97.0, 50.0], [97.1, 51.0], [97.2, 51.0], [97.3, 52.0], [97.4, 53.0], [97.5, 54.0], [97.6, 54.0], [97.7, 55.0], [97.8, 56.0], [97.9, 57.0], [98.0, 58.0], [98.1, 60.0], [98.2, 61.0], [98.3, 62.0], [98.4, 64.0], [98.5, 66.0], [98.6, 68.0], [98.7, 70.0], [98.8, 73.0], [98.9, 76.0], [99.0, 80.0], [99.1, 84.0], [99.2, 88.0], [99.3, 92.0], [99.4, 98.0], [99.5, 105.0], [99.6, 112.0], [99.7, 121.0], [99.8, 131.0], [99.9, 147.0], [100.0, 3404.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 5.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 5.0], [19.1, 5.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 5.0], [21.7, 5.0], [21.8, 5.0], [21.9, 5.0], [22.0, 5.0], [22.1, 5.0], [22.2, 5.0], [22.3, 5.0], [22.4, 5.0], [22.5, 5.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 6.0], [23.3, 6.0], [23.4, 6.0], [23.5, 6.0], [23.6, 6.0], [23.7, 6.0], [23.8, 6.0], [23.9, 6.0], [24.0, 6.0], [24.1, 6.0], [24.2, 6.0], [24.3, 6.0], [24.4, 6.0], [24.5, 6.0], [24.6, 6.0], [24.7, 6.0], [24.8, 6.0], [24.9, 6.0], [25.0, 6.0], [25.1, 6.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 6.0], [26.3, 6.0], [26.4, 6.0], [26.5, 6.0], [26.6, 6.0], [26.7, 6.0], [26.8, 6.0], [26.9, 6.0], [27.0, 6.0], [27.1, 6.0], [27.2, 6.0], [27.3, 6.0], [27.4, 6.0], [27.5, 6.0], [27.6, 6.0], [27.7, 6.0], [27.8, 6.0], [27.9, 6.0], [28.0, 6.0], [28.1, 6.0], [28.2, 6.0], [28.3, 6.0], [28.4, 7.0], [28.5, 7.0], [28.6, 7.0], [28.7, 7.0], [28.8, 7.0], [28.9, 7.0], [29.0, 7.0], [29.1, 7.0], [29.2, 7.0], [29.3, 7.0], [29.4, 7.0], [29.5, 7.0], [29.6, 7.0], [29.7, 7.0], [29.8, 7.0], [29.9, 7.0], [30.0, 7.0], [30.1, 7.0], [30.2, 7.0], [30.3, 7.0], [30.4, 7.0], [30.5, 7.0], [30.6, 7.0], [30.7, 7.0], [30.8, 7.0], [30.9, 7.0], [31.0, 7.0], [31.1, 7.0], [31.2, 7.0], [31.3, 7.0], [31.4, 7.0], [31.5, 7.0], [31.6, 7.0], [31.7, 7.0], [31.8, 7.0], [31.9, 7.0], [32.0, 7.0], [32.1, 7.0], [32.2, 7.0], [32.3, 7.0], [32.4, 7.0], [32.5, 7.0], [32.6, 7.0], [32.7, 7.0], [32.8, 7.0], [32.9, 7.0], [33.0, 7.0], [33.1, 7.0], [33.2, 7.0], [33.3, 7.0], [33.4, 7.0], [33.5, 8.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 10.0], [43.4, 10.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 11.0], [48.0, 11.0], [48.1, 11.0], [48.2, 11.0], [48.3, 11.0], [48.4, 11.0], [48.5, 11.0], [48.6, 11.0], [48.7, 11.0], [48.8, 11.0], [48.9, 11.0], [49.0, 11.0], [49.1, 11.0], [49.2, 11.0], [49.3, 11.0], [49.4, 11.0], [49.5, 11.0], [49.6, 11.0], [49.7, 11.0], [49.8, 11.0], [49.9, 11.0], [50.0, 11.0], [50.1, 11.0], [50.2, 11.0], [50.3, 11.0], [50.4, 11.0], [50.5, 11.0], [50.6, 11.0], [50.7, 11.0], [50.8, 11.0], [50.9, 11.0], [51.0, 11.0], [51.1, 11.0], [51.2, 11.0], [51.3, 11.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 11.0], [52.2, 11.0], [52.3, 12.0], [52.4, 12.0], [52.5, 12.0], [52.6, 12.0], [52.7, 12.0], [52.8, 12.0], [52.9, 12.0], [53.0, 12.0], [53.1, 12.0], [53.2, 12.0], [53.3, 12.0], [53.4, 12.0], [53.5, 12.0], [53.6, 12.0], [53.7, 12.0], [53.8, 12.0], [53.9, 12.0], [54.0, 12.0], [54.1, 12.0], [54.2, 12.0], [54.3, 12.0], [54.4, 12.0], [54.5, 12.0], [54.6, 12.0], [54.7, 12.0], [54.8, 12.0], [54.9, 12.0], [55.0, 12.0], [55.1, 12.0], [55.2, 12.0], [55.3, 12.0], [55.4, 12.0], [55.5, 12.0], [55.6, 12.0], [55.7, 12.0], [55.8, 12.0], [55.9, 12.0], [56.0, 12.0], [56.1, 12.0], [56.2, 12.0], [56.3, 13.0], [56.4, 13.0], [56.5, 13.0], [56.6, 13.0], [56.7, 13.0], [56.8, 13.0], [56.9, 13.0], [57.0, 13.0], [57.1, 13.0], [57.2, 13.0], [57.3, 13.0], [57.4, 13.0], [57.5, 13.0], [57.6, 13.0], [57.7, 13.0], [57.8, 13.0], [57.9, 13.0], [58.0, 13.0], [58.1, 13.0], [58.2, 13.0], [58.3, 13.0], [58.4, 13.0], [58.5, 13.0], [58.6, 13.0], [58.7, 13.0], [58.8, 13.0], [58.9, 13.0], [59.0, 13.0], [59.1, 13.0], [59.2, 13.0], [59.3, 13.0], [59.4, 13.0], [59.5, 13.0], [59.6, 13.0], [59.7, 13.0], [59.8, 13.0], [59.9, 13.0], [60.0, 14.0], [60.1, 14.0], [60.2, 14.0], [60.3, 14.0], [60.4, 14.0], [60.5, 14.0], [60.6, 14.0], [60.7, 14.0], [60.8, 14.0], [60.9, 14.0], [61.0, 14.0], [61.1, 14.0], [61.2, 14.0], [61.3, 14.0], [61.4, 14.0], [61.5, 14.0], [61.6, 14.0], [61.7, 14.0], [61.8, 14.0], [61.9, 14.0], [62.0, 14.0], [62.1, 14.0], [62.2, 14.0], [62.3, 14.0], [62.4, 14.0], [62.5, 14.0], [62.6, 14.0], [62.7, 14.0], [62.8, 14.0], [62.9, 14.0], [63.0, 14.0], [63.1, 14.0], [63.2, 14.0], [63.3, 14.0], [63.4, 15.0], [63.5, 15.0], [63.6, 15.0], [63.7, 15.0], [63.8, 15.0], [63.9, 15.0], [64.0, 15.0], [64.1, 15.0], [64.2, 15.0], [64.3, 15.0], [64.4, 15.0], [64.5, 15.0], [64.6, 15.0], [64.7, 15.0], [64.8, 15.0], [64.9, 15.0], [65.0, 15.0], [65.1, 15.0], [65.2, 15.0], [65.3, 15.0], [65.4, 15.0], [65.5, 15.0], [65.6, 15.0], [65.7, 15.0], [65.8, 15.0], [65.9, 15.0], [66.0, 15.0], [66.1, 15.0], [66.2, 15.0], [66.3, 15.0], [66.4, 15.0], [66.5, 16.0], [66.6, 16.0], [66.7, 16.0], [66.8, 16.0], [66.9, 16.0], [67.0, 16.0], [67.1, 16.0], [67.2, 16.0], [67.3, 16.0], [67.4, 16.0], [67.5, 16.0], [67.6, 16.0], [67.7, 16.0], [67.8, 16.0], [67.9, 16.0], [68.0, 16.0], [68.1, 16.0], [68.2, 16.0], [68.3, 16.0], [68.4, 16.0], [68.5, 16.0], [68.6, 16.0], [68.7, 16.0], [68.8, 16.0], [68.9, 16.0], [69.0, 16.0], [69.1, 16.0], [69.2, 16.0], [69.3, 16.0], [69.4, 17.0], [69.5, 17.0], [69.6, 17.0], [69.7, 17.0], [69.8, 17.0], [69.9, 17.0], [70.0, 17.0], [70.1, 17.0], [70.2, 17.0], [70.3, 17.0], [70.4, 17.0], [70.5, 17.0], [70.6, 17.0], [70.7, 17.0], [70.8, 17.0], [70.9, 17.0], [71.0, 17.0], [71.1, 17.0], [71.2, 17.0], [71.3, 17.0], [71.4, 17.0], [71.5, 17.0], [71.6, 17.0], [71.7, 17.0], [71.8, 17.0], [71.9, 18.0], [72.0, 18.0], [72.1, 18.0], [72.2, 18.0], [72.3, 18.0], [72.4, 18.0], [72.5, 18.0], [72.6, 18.0], [72.7, 18.0], [72.8, 18.0], [72.9, 18.0], [73.0, 18.0], [73.1, 18.0], [73.2, 18.0], [73.3, 18.0], [73.4, 18.0], [73.5, 18.0], [73.6, 18.0], [73.7, 18.0], [73.8, 18.0], [73.9, 18.0], [74.0, 18.0], [74.1, 18.0], [74.2, 18.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 19.0], [75.0, 19.0], [75.1, 19.0], [75.2, 19.0], [75.3, 19.0], [75.4, 19.0], [75.5, 19.0], [75.6, 19.0], [75.7, 19.0], [75.8, 19.0], [75.9, 19.0], [76.0, 19.0], [76.1, 19.0], [76.2, 19.0], [76.3, 19.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 20.0], [76.9, 20.0], [77.0, 20.0], [77.1, 20.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 21.0], [78.4, 21.0], [78.5, 21.0], [78.6, 21.0], [78.7, 21.0], [78.8, 21.0], [78.9, 21.0], [79.0, 21.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 21.0], [79.5, 21.0], [79.6, 21.0], [79.7, 21.0], [79.8, 21.0], [79.9, 21.0], [80.0, 22.0], [80.1, 22.0], [80.2, 22.0], [80.3, 22.0], [80.4, 22.0], [80.5, 22.0], [80.6, 22.0], [80.7, 22.0], [80.8, 22.0], [80.9, 22.0], [81.0, 22.0], [81.1, 22.0], [81.2, 22.0], [81.3, 22.0], [81.4, 22.0], [81.5, 22.0], [81.6, 23.0], [81.7, 23.0], [81.8, 23.0], [81.9, 23.0], [82.0, 23.0], [82.1, 23.0], [82.2, 23.0], [82.3, 23.0], [82.4, 23.0], [82.5, 23.0], [82.6, 23.0], [82.7, 23.0], [82.8, 23.0], [82.9, 23.0], [83.0, 24.0], [83.1, 24.0], [83.2, 24.0], [83.3, 24.0], [83.4, 24.0], [83.5, 24.0], [83.6, 24.0], [83.7, 24.0], [83.8, 24.0], [83.9, 24.0], [84.0, 24.0], [84.1, 24.0], [84.2, 24.0], [84.3, 25.0], [84.4, 25.0], [84.5, 25.0], [84.6, 25.0], [84.7, 25.0], [84.8, 25.0], [84.9, 25.0], [85.0, 25.0], [85.1, 25.0], [85.2, 25.0], [85.3, 25.0], [85.4, 26.0], [85.5, 26.0], [85.6, 26.0], [85.7, 26.0], [85.8, 26.0], [85.9, 26.0], [86.0, 26.0], [86.1, 26.0], [86.2, 26.0], [86.3, 26.0], [86.4, 26.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 28.0], [87.6, 28.0], [87.7, 28.0], [87.8, 28.0], [87.9, 28.0], [88.0, 28.0], [88.1, 28.0], [88.2, 28.0], [88.3, 28.0], [88.4, 29.0], [88.5, 29.0], [88.6, 29.0], [88.7, 29.0], [88.8, 29.0], [88.9, 29.0], [89.0, 29.0], [89.1, 29.0], [89.2, 30.0], [89.3, 30.0], [89.4, 30.0], [89.5, 30.0], [89.6, 30.0], [89.7, 30.0], [89.8, 30.0], [89.9, 31.0], [90.0, 31.0], [90.1, 31.0], [90.2, 31.0], [90.3, 31.0], [90.4, 31.0], [90.5, 31.0], [90.6, 32.0], [90.7, 32.0], [90.8, 32.0], [90.9, 32.0], [91.0, 32.0], [91.1, 32.0], [91.2, 32.0], [91.3, 33.0], [91.4, 33.0], [91.5, 33.0], [91.6, 33.0], [91.7, 33.0], [91.8, 34.0], [91.9, 34.0], [92.0, 34.0], [92.1, 34.0], [92.2, 34.0], [92.3, 34.0], [92.4, 35.0], [92.5, 35.0], [92.6, 35.0], [92.7, 35.0], [92.8, 35.0], [92.9, 36.0], [93.0, 36.0], [93.1, 36.0], [93.2, 36.0], [93.3, 37.0], [93.4, 37.0], [93.5, 37.0], [93.6, 37.0], [93.7, 37.0], [93.8, 38.0], [93.9, 38.0], [94.0, 38.0], [94.1, 38.0], [94.2, 39.0], [94.3, 39.0], [94.4, 39.0], [94.5, 40.0], [94.6, 40.0], [94.7, 40.0], [94.8, 40.0], [94.9, 41.0], [95.0, 41.0], [95.1, 41.0], [95.2, 42.0], [95.3, 42.0], [95.4, 43.0], [95.5, 43.0], [95.6, 43.0], [95.7, 44.0], [95.8, 44.0], [95.9, 44.0], [96.0, 45.0], [96.1, 45.0], [96.2, 46.0], [96.3, 46.0], [96.4, 47.0], [96.5, 47.0], [96.6, 48.0], [96.7, 48.0], [96.8, 49.0], [96.9, 49.0], [97.0, 50.0], [97.1, 51.0], [97.2, 51.0], [97.3, 52.0], [97.4, 53.0], [97.5, 54.0], [97.6, 54.0], [97.7, 55.0], [97.8, 56.0], [97.9, 57.0], [98.0, 59.0], [98.1, 60.0], [98.2, 61.0], [98.3, 63.0], [98.4, 64.0], [98.5, 66.0], [98.6, 68.0], [98.7, 70.0], [98.8, 73.0], [98.9, 76.0], [99.0, 80.0], [99.1, 84.0], [99.2, 88.0], [99.3, 93.0], [99.4, 99.0], [99.5, 105.0], [99.6, 113.0], [99.7, 121.0], [99.8, 132.0], [99.9, 148.0], [100.0, 3396.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 5.0], [19.1, 5.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 5.0], [21.7, 5.0], [21.8, 5.0], [21.9, 5.0], [22.0, 5.0], [22.1, 5.0], [22.2, 5.0], [22.3, 5.0], [22.4, 5.0], [22.5, 5.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 5.0], [23.3, 6.0], [23.4, 6.0], [23.5, 6.0], [23.6, 6.0], [23.7, 6.0], [23.8, 6.0], [23.9, 6.0], [24.0, 6.0], [24.1, 6.0], [24.2, 6.0], [24.3, 6.0], [24.4, 6.0], [24.5, 6.0], [24.6, 6.0], [24.7, 6.0], [24.8, 6.0], [24.9, 6.0], [25.0, 6.0], [25.1, 6.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 6.0], [26.3, 6.0], [26.4, 6.0], [26.5, 6.0], [26.6, 6.0], [26.7, 6.0], [26.8, 6.0], [26.9, 6.0], [27.0, 6.0], [27.1, 6.0], [27.2, 6.0], [27.3, 6.0], [27.4, 6.0], [27.5, 6.0], [27.6, 6.0], [27.7, 6.0], [27.8, 6.0], [27.9, 6.0], [28.0, 6.0], [28.1, 6.0], [28.2, 6.0], [28.3, 6.0], [28.4, 7.0], [28.5, 7.0], [28.6, 7.0], [28.7, 7.0], [28.8, 7.0], [28.9, 7.0], [29.0, 7.0], [29.1, 7.0], [29.2, 7.0], [29.3, 7.0], [29.4, 7.0], [29.5, 7.0], [29.6, 7.0], [29.7, 7.0], [29.8, 7.0], [29.9, 7.0], [30.0, 7.0], [30.1, 7.0], [30.2, 7.0], [30.3, 7.0], [30.4, 7.0], [30.5, 7.0], [30.6, 7.0], [30.7, 7.0], [30.8, 7.0], [30.9, 7.0], [31.0, 7.0], [31.1, 7.0], [31.2, 7.0], [31.3, 7.0], [31.4, 7.0], [31.5, 7.0], [31.6, 7.0], [31.7, 7.0], [31.8, 7.0], [31.9, 7.0], [32.0, 7.0], [32.1, 7.0], [32.2, 7.0], [32.3, 7.0], [32.4, 7.0], [32.5, 7.0], [32.6, 7.0], [32.7, 7.0], [32.8, 7.0], [32.9, 7.0], [33.0, 7.0], [33.1, 7.0], [33.2, 7.0], [33.3, 7.0], [33.4, 7.0], [33.5, 7.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 8.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 10.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 11.0], [48.1, 11.0], [48.2, 11.0], [48.3, 11.0], [48.4, 11.0], [48.5, 11.0], [48.6, 11.0], [48.7, 11.0], [48.8, 11.0], [48.9, 11.0], [49.0, 11.0], [49.1, 11.0], [49.2, 11.0], [49.3, 11.0], [49.4, 11.0], [49.5, 11.0], [49.6, 11.0], [49.7, 11.0], [49.8, 11.0], [49.9, 11.0], [50.0, 11.0], [50.1, 11.0], [50.2, 11.0], [50.3, 11.0], [50.4, 11.0], [50.5, 11.0], [50.6, 11.0], [50.7, 11.0], [50.8, 11.0], [50.9, 11.0], [51.0, 11.0], [51.1, 11.0], [51.2, 11.0], [51.3, 11.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 11.0], [52.2, 11.0], [52.3, 12.0], [52.4, 12.0], [52.5, 12.0], [52.6, 12.0], [52.7, 12.0], [52.8, 12.0], [52.9, 12.0], [53.0, 12.0], [53.1, 12.0], [53.2, 12.0], [53.3, 12.0], [53.4, 12.0], [53.5, 12.0], [53.6, 12.0], [53.7, 12.0], [53.8, 12.0], [53.9, 12.0], [54.0, 12.0], [54.1, 12.0], [54.2, 12.0], [54.3, 12.0], [54.4, 12.0], [54.5, 12.0], [54.6, 12.0], [54.7, 12.0], [54.8, 12.0], [54.9, 12.0], [55.0, 12.0], [55.1, 12.0], [55.2, 12.0], [55.3, 12.0], [55.4, 12.0], [55.5, 12.0], [55.6, 12.0], [55.7, 12.0], [55.8, 12.0], [55.9, 12.0], [56.0, 12.0], [56.1, 12.0], [56.2, 12.0], [56.3, 13.0], [56.4, 13.0], [56.5, 13.0], [56.6, 13.0], [56.7, 13.0], [56.8, 13.0], [56.9, 13.0], [57.0, 13.0], [57.1, 13.0], [57.2, 13.0], [57.3, 13.0], [57.4, 13.0], [57.5, 13.0], [57.6, 13.0], [57.7, 13.0], [57.8, 13.0], [57.9, 13.0], [58.0, 13.0], [58.1, 13.0], [58.2, 13.0], [58.3, 13.0], [58.4, 13.0], [58.5, 13.0], [58.6, 13.0], [58.7, 13.0], [58.8, 13.0], [58.9, 13.0], [59.0, 13.0], [59.1, 13.0], [59.2, 13.0], [59.3, 13.0], [59.4, 13.0], [59.5, 13.0], [59.6, 13.0], [59.7, 13.0], [59.8, 13.0], [59.9, 13.0], [60.0, 14.0], [60.1, 14.0], [60.2, 14.0], [60.3, 14.0], [60.4, 14.0], [60.5, 14.0], [60.6, 14.0], [60.7, 14.0], [60.8, 14.0], [60.9, 14.0], [61.0, 14.0], [61.1, 14.0], [61.2, 14.0], [61.3, 14.0], [61.4, 14.0], [61.5, 14.0], [61.6, 14.0], [61.7, 14.0], [61.8, 14.0], [61.9, 14.0], [62.0, 14.0], [62.1, 14.0], [62.2, 14.0], [62.3, 14.0], [62.4, 14.0], [62.5, 14.0], [62.6, 14.0], [62.7, 14.0], [62.8, 14.0], [62.9, 14.0], [63.0, 14.0], [63.1, 14.0], [63.2, 14.0], [63.3, 14.0], [63.4, 15.0], [63.5, 15.0], [63.6, 15.0], [63.7, 15.0], [63.8, 15.0], [63.9, 15.0], [64.0, 15.0], [64.1, 15.0], [64.2, 15.0], [64.3, 15.0], [64.4, 15.0], [64.5, 15.0], [64.6, 15.0], [64.7, 15.0], [64.8, 15.0], [64.9, 15.0], [65.0, 15.0], [65.1, 15.0], [65.2, 15.0], [65.3, 15.0], [65.4, 15.0], [65.5, 15.0], [65.6, 15.0], [65.7, 15.0], [65.8, 15.0], [65.9, 15.0], [66.0, 15.0], [66.1, 15.0], [66.2, 15.0], [66.3, 15.0], [66.4, 15.0], [66.5, 16.0], [66.6, 16.0], [66.7, 16.0], [66.8, 16.0], [66.9, 16.0], [67.0, 16.0], [67.1, 16.0], [67.2, 16.0], [67.3, 16.0], [67.4, 16.0], [67.5, 16.0], [67.6, 16.0], [67.7, 16.0], [67.8, 16.0], [67.9, 16.0], [68.0, 16.0], [68.1, 16.0], [68.2, 16.0], [68.3, 16.0], [68.4, 16.0], [68.5, 16.0], [68.6, 16.0], [68.7, 16.0], [68.8, 16.0], [68.9, 16.0], [69.0, 16.0], [69.1, 16.0], [69.2, 16.0], [69.3, 16.0], [69.4, 17.0], [69.5, 17.0], [69.6, 17.0], [69.7, 17.0], [69.8, 17.0], [69.9, 17.0], [70.0, 17.0], [70.1, 17.0], [70.2, 17.0], [70.3, 17.0], [70.4, 17.0], [70.5, 17.0], [70.6, 17.0], [70.7, 17.0], [70.8, 17.0], [70.9, 17.0], [71.0, 17.0], [71.1, 17.0], [71.2, 17.0], [71.3, 17.0], [71.4, 17.0], [71.5, 17.0], [71.6, 17.0], [71.7, 17.0], [71.8, 17.0], [71.9, 18.0], [72.0, 18.0], [72.1, 18.0], [72.2, 18.0], [72.3, 18.0], [72.4, 18.0], [72.5, 18.0], [72.6, 18.0], [72.7, 18.0], [72.8, 18.0], [72.9, 18.0], [73.0, 18.0], [73.1, 18.0], [73.2, 18.0], [73.3, 18.0], [73.4, 18.0], [73.5, 18.0], [73.6, 18.0], [73.7, 18.0], [73.8, 18.0], [73.9, 18.0], [74.0, 18.0], [74.1, 18.0], [74.2, 18.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 19.0], [75.0, 19.0], [75.1, 19.0], [75.2, 19.0], [75.3, 19.0], [75.4, 19.0], [75.5, 19.0], [75.6, 19.0], [75.7, 19.0], [75.8, 19.0], [75.9, 19.0], [76.0, 19.0], [76.1, 19.0], [76.2, 19.0], [76.3, 19.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 20.0], [76.9, 20.0], [77.0, 20.0], [77.1, 20.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 21.0], [78.4, 21.0], [78.5, 21.0], [78.6, 21.0], [78.7, 21.0], [78.8, 21.0], [78.9, 21.0], [79.0, 21.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 21.0], [79.5, 21.0], [79.6, 21.0], [79.7, 21.0], [79.8, 21.0], [79.9, 21.0], [80.0, 22.0], [80.1, 22.0], [80.2, 22.0], [80.3, 22.0], [80.4, 22.0], [80.5, 22.0], [80.6, 22.0], [80.7, 22.0], [80.8, 22.0], [80.9, 22.0], [81.0, 22.0], [81.1, 22.0], [81.2, 22.0], [81.3, 22.0], [81.4, 22.0], [81.5, 22.0], [81.6, 23.0], [81.7, 23.0], [81.8, 23.0], [81.9, 23.0], [82.0, 23.0], [82.1, 23.0], [82.2, 23.0], [82.3, 23.0], [82.4, 23.0], [82.5, 23.0], [82.6, 23.0], [82.7, 23.0], [82.8, 23.0], [82.9, 23.0], [83.0, 24.0], [83.1, 24.0], [83.2, 24.0], [83.3, 24.0], [83.4, 24.0], [83.5, 24.0], [83.6, 24.0], [83.7, 24.0], [83.8, 24.0], [83.9, 24.0], [84.0, 24.0], [84.1, 24.0], [84.2, 24.0], [84.3, 25.0], [84.4, 25.0], [84.5, 25.0], [84.6, 25.0], [84.7, 25.0], [84.8, 25.0], [84.9, 25.0], [85.0, 25.0], [85.1, 25.0], [85.2, 25.0], [85.3, 25.0], [85.4, 26.0], [85.5, 26.0], [85.6, 26.0], [85.7, 26.0], [85.8, 26.0], [85.9, 26.0], [86.0, 26.0], [86.1, 26.0], [86.2, 26.0], [86.3, 26.0], [86.4, 26.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 28.0], [87.6, 28.0], [87.7, 28.0], [87.8, 28.0], [87.9, 28.0], [88.0, 28.0], [88.1, 28.0], [88.2, 28.0], [88.3, 28.0], [88.4, 29.0], [88.5, 29.0], [88.6, 29.0], [88.7, 29.0], [88.8, 29.0], [88.9, 29.0], [89.0, 29.0], [89.1, 29.0], [89.2, 30.0], [89.3, 30.0], [89.4, 30.0], [89.5, 30.0], [89.6, 30.0], [89.7, 30.0], [89.8, 30.0], [89.9, 31.0], [90.0, 31.0], [90.1, 31.0], [90.2, 31.0], [90.3, 31.0], [90.4, 31.0], [90.5, 31.0], [90.6, 32.0], [90.7, 32.0], [90.8, 32.0], [90.9, 32.0], [91.0, 32.0], [91.1, 32.0], [91.2, 33.0], [91.3, 33.0], [91.4, 33.0], [91.5, 33.0], [91.6, 33.0], [91.7, 33.0], [91.8, 34.0], [91.9, 34.0], [92.0, 34.0], [92.1, 34.0], [92.2, 34.0], [92.3, 34.0], [92.4, 35.0], [92.5, 35.0], [92.6, 35.0], [92.7, 35.0], [92.8, 35.0], [92.9, 36.0], [93.0, 36.0], [93.1, 36.0], [93.2, 36.0], [93.3, 37.0], [93.4, 37.0], [93.5, 37.0], [93.6, 37.0], [93.7, 37.0], [93.8, 38.0], [93.9, 38.0], [94.0, 38.0], [94.1, 39.0], [94.2, 39.0], [94.3, 39.0], [94.4, 39.0], [94.5, 40.0], [94.6, 40.0], [94.7, 40.0], [94.8, 41.0], [94.9, 41.0], [95.0, 41.0], [95.1, 41.0], [95.2, 42.0], [95.3, 42.0], [95.4, 43.0], [95.5, 43.0], [95.6, 43.0], [95.7, 44.0], [95.8, 44.0], [95.9, 44.0], [96.0, 45.0], [96.1, 45.0], [96.2, 46.0], [96.3, 46.0], [96.4, 47.0], [96.5, 47.0], [96.6, 48.0], [96.7, 48.0], [96.8, 49.0], [96.9, 49.0], [97.0, 50.0], [97.1, 51.0], [97.2, 51.0], [97.3, 52.0], [97.4, 53.0], [97.5, 54.0], [97.6, 54.0], [97.7, 55.0], [97.8, 56.0], [97.9, 57.0], [98.0, 59.0], [98.1, 60.0], [98.2, 61.0], [98.3, 63.0], [98.4, 64.0], [98.5, 66.0], [98.6, 68.0], [98.7, 70.0], [98.8, 73.0], [98.9, 76.0], [99.0, 80.0], [99.1, 84.0], [99.2, 88.0], [99.3, 93.0], [99.4, 98.0], [99.5, 105.0], [99.6, 112.0], [99.7, 121.0], [99.8, 132.0], [99.9, 148.0], [100.0, 3342.0]], "isOverall": false, "label": "Get Candy 1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 5.0], [19.1, 5.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 5.0], [21.7, 5.0], [21.8, 5.0], [21.9, 5.0], [22.0, 5.0], [22.1, 5.0], [22.2, 5.0], [22.3, 5.0], [22.4, 5.0], [22.5, 5.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 5.0], [23.3, 5.0], [23.4, 6.0], [23.5, 6.0], [23.6, 6.0], [23.7, 6.0], [23.8, 6.0], [23.9, 6.0], [24.0, 6.0], [24.1, 6.0], [24.2, 6.0], [24.3, 6.0], [24.4, 6.0], [24.5, 6.0], [24.6, 6.0], [24.7, 6.0], [24.8, 6.0], [24.9, 6.0], [25.0, 6.0], [25.1, 6.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 6.0], [26.3, 6.0], [26.4, 6.0], [26.5, 6.0], [26.6, 6.0], [26.7, 6.0], [26.8, 6.0], [26.9, 6.0], [27.0, 6.0], [27.1, 6.0], [27.2, 6.0], [27.3, 6.0], [27.4, 6.0], [27.5, 6.0], [27.6, 6.0], [27.7, 6.0], [27.8, 6.0], [27.9, 6.0], [28.0, 6.0], [28.1, 6.0], [28.2, 6.0], [28.3, 6.0], [28.4, 6.0], [28.5, 7.0], [28.6, 7.0], [28.7, 7.0], [28.8, 7.0], [28.9, 7.0], [29.0, 7.0], [29.1, 7.0], [29.2, 7.0], [29.3, 7.0], [29.4, 7.0], [29.5, 7.0], [29.6, 7.0], [29.7, 7.0], [29.8, 7.0], [29.9, 7.0], [30.0, 7.0], [30.1, 7.0], [30.2, 7.0], [30.3, 7.0], [30.4, 7.0], [30.5, 7.0], [30.6, 7.0], [30.7, 7.0], [30.8, 7.0], [30.9, 7.0], [31.0, 7.0], [31.1, 7.0], [31.2, 7.0], [31.3, 7.0], [31.4, 7.0], [31.5, 7.0], [31.6, 7.0], [31.7, 7.0], [31.8, 7.0], [31.9, 7.0], [32.0, 7.0], [32.1, 7.0], [32.2, 7.0], [32.3, 7.0], [32.4, 7.0], [32.5, 7.0], [32.6, 7.0], [32.7, 7.0], [32.8, 7.0], [32.9, 7.0], [33.0, 7.0], [33.1, 7.0], [33.2, 7.0], [33.3, 7.0], [33.4, 7.0], [33.5, 7.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 8.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 11.0], [48.1, 11.0], [48.2, 11.0], [48.3, 11.0], [48.4, 11.0], [48.5, 11.0], [48.6, 11.0], [48.7, 11.0], [48.8, 11.0], [48.9, 11.0], [49.0, 11.0], [49.1, 11.0], [49.2, 11.0], [49.3, 11.0], [49.4, 11.0], [49.5, 11.0], [49.6, 11.0], [49.7, 11.0], [49.8, 11.0], [49.9, 11.0], [50.0, 11.0], [50.1, 11.0], [50.2, 11.0], [50.3, 11.0], [50.4, 11.0], [50.5, 11.0], [50.6, 11.0], [50.7, 11.0], [50.8, 11.0], [50.9, 11.0], [51.0, 11.0], [51.1, 11.0], [51.2, 11.0], [51.3, 11.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 11.0], [52.2, 11.0], [52.3, 12.0], [52.4, 12.0], [52.5, 12.0], [52.6, 12.0], [52.7, 12.0], [52.8, 12.0], [52.9, 12.0], [53.0, 12.0], [53.1, 12.0], [53.2, 12.0], [53.3, 12.0], [53.4, 12.0], [53.5, 12.0], [53.6, 12.0], [53.7, 12.0], [53.8, 12.0], [53.9, 12.0], [54.0, 12.0], [54.1, 12.0], [54.2, 12.0], [54.3, 12.0], [54.4, 12.0], [54.5, 12.0], [54.6, 12.0], [54.7, 12.0], [54.8, 12.0], [54.9, 12.0], [55.0, 12.0], [55.1, 12.0], [55.2, 12.0], [55.3, 12.0], [55.4, 12.0], [55.5, 12.0], [55.6, 12.0], [55.7, 12.0], [55.8, 12.0], [55.9, 12.0], [56.0, 12.0], [56.1, 12.0], [56.2, 12.0], [56.3, 12.0], [56.4, 13.0], [56.5, 13.0], [56.6, 13.0], [56.7, 13.0], [56.8, 13.0], [56.9, 13.0], [57.0, 13.0], [57.1, 13.0], [57.2, 13.0], [57.3, 13.0], [57.4, 13.0], [57.5, 13.0], [57.6, 13.0], [57.7, 13.0], [57.8, 13.0], [57.9, 13.0], [58.0, 13.0], [58.1, 13.0], [58.2, 13.0], [58.3, 13.0], [58.4, 13.0], [58.5, 13.0], [58.6, 13.0], [58.7, 13.0], [58.8, 13.0], [58.9, 13.0], [59.0, 13.0], [59.1, 13.0], [59.2, 13.0], [59.3, 13.0], [59.4, 13.0], [59.5, 13.0], [59.6, 13.0], [59.7, 13.0], [59.8, 13.0], [59.9, 13.0], [60.0, 13.0], [60.1, 14.0], [60.2, 14.0], [60.3, 14.0], [60.4, 14.0], [60.5, 14.0], [60.6, 14.0], [60.7, 14.0], [60.8, 14.0], [60.9, 14.0], [61.0, 14.0], [61.1, 14.0], [61.2, 14.0], [61.3, 14.0], [61.4, 14.0], [61.5, 14.0], [61.6, 14.0], [61.7, 14.0], [61.8, 14.0], [61.9, 14.0], [62.0, 14.0], [62.1, 14.0], [62.2, 14.0], [62.3, 14.0], [62.4, 14.0], [62.5, 14.0], [62.6, 14.0], [62.7, 14.0], [62.8, 14.0], [62.9, 14.0], [63.0, 14.0], [63.1, 14.0], [63.2, 14.0], [63.3, 14.0], [63.4, 14.0], [63.5, 15.0], [63.6, 15.0], [63.7, 15.0], [63.8, 15.0], [63.9, 15.0], [64.0, 15.0], [64.1, 15.0], [64.2, 15.0], [64.3, 15.0], [64.4, 15.0], [64.5, 15.0], [64.6, 15.0], [64.7, 15.0], [64.8, 15.0], [64.9, 15.0], [65.0, 15.0], [65.1, 15.0], [65.2, 15.0], [65.3, 15.0], [65.4, 15.0], [65.5, 15.0], [65.6, 15.0], [65.7, 15.0], [65.8, 15.0], [65.9, 15.0], [66.0, 15.0], [66.1, 15.0], [66.2, 15.0], [66.3, 15.0], [66.4, 15.0], [66.5, 15.0], [66.6, 16.0], [66.7, 16.0], [66.8, 16.0], [66.9, 16.0], [67.0, 16.0], [67.1, 16.0], [67.2, 16.0], [67.3, 16.0], [67.4, 16.0], [67.5, 16.0], [67.6, 16.0], [67.7, 16.0], [67.8, 16.0], [67.9, 16.0], [68.0, 16.0], [68.1, 16.0], [68.2, 16.0], [68.3, 16.0], [68.4, 16.0], [68.5, 16.0], [68.6, 16.0], [68.7, 16.0], [68.8, 16.0], [68.9, 16.0], [69.0, 16.0], [69.1, 16.0], [69.2, 16.0], [69.3, 16.0], [69.4, 17.0], [69.5, 17.0], [69.6, 17.0], [69.7, 17.0], [69.8, 17.0], [69.9, 17.0], [70.0, 17.0], [70.1, 17.0], [70.2, 17.0], [70.3, 17.0], [70.4, 17.0], [70.5, 17.0], [70.6, 17.0], [70.7, 17.0], [70.8, 17.0], [70.9, 17.0], [71.0, 17.0], [71.1, 17.0], [71.2, 17.0], [71.3, 17.0], [71.4, 17.0], [71.5, 17.0], [71.6, 17.0], [71.7, 17.0], [71.8, 17.0], [71.9, 17.0], [72.0, 18.0], [72.1, 18.0], [72.2, 18.0], [72.3, 18.0], [72.4, 18.0], [72.5, 18.0], [72.6, 18.0], [72.7, 18.0], [72.8, 18.0], [72.9, 18.0], [73.0, 18.0], [73.1, 18.0], [73.2, 18.0], [73.3, 18.0], [73.4, 18.0], [73.5, 18.0], [73.6, 18.0], [73.7, 18.0], [73.8, 18.0], [73.9, 18.0], [74.0, 18.0], [74.1, 18.0], [74.2, 18.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 19.0], [75.0, 19.0], [75.1, 19.0], [75.2, 19.0], [75.3, 19.0], [75.4, 19.0], [75.5, 19.0], [75.6, 19.0], [75.7, 19.0], [75.8, 19.0], [75.9, 19.0], [76.0, 19.0], [76.1, 19.0], [76.2, 19.0], [76.3, 19.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 20.0], [76.9, 20.0], [77.0, 20.0], [77.1, 20.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 21.0], [78.4, 21.0], [78.5, 21.0], [78.6, 21.0], [78.7, 21.0], [78.8, 21.0], [78.9, 21.0], [79.0, 21.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 21.0], [79.5, 21.0], [79.6, 21.0], [79.7, 21.0], [79.8, 21.0], [79.9, 21.0], [80.0, 22.0], [80.1, 22.0], [80.2, 22.0], [80.3, 22.0], [80.4, 22.0], [80.5, 22.0], [80.6, 22.0], [80.7, 22.0], [80.8, 22.0], [80.9, 22.0], [81.0, 22.0], [81.1, 22.0], [81.2, 22.0], [81.3, 22.0], [81.4, 22.0], [81.5, 22.0], [81.6, 23.0], [81.7, 23.0], [81.8, 23.0], [81.9, 23.0], [82.0, 23.0], [82.1, 23.0], [82.2, 23.0], [82.3, 23.0], [82.4, 23.0], [82.5, 23.0], [82.6, 23.0], [82.7, 23.0], [82.8, 23.0], [82.9, 23.0], [83.0, 24.0], [83.1, 24.0], [83.2, 24.0], [83.3, 24.0], [83.4, 24.0], [83.5, 24.0], [83.6, 24.0], [83.7, 24.0], [83.8, 24.0], [83.9, 24.0], [84.0, 24.0], [84.1, 24.0], [84.2, 24.0], [84.3, 25.0], [84.4, 25.0], [84.5, 25.0], [84.6, 25.0], [84.7, 25.0], [84.8, 25.0], [84.9, 25.0], [85.0, 25.0], [85.1, 25.0], [85.2, 25.0], [85.3, 25.0], [85.4, 25.0], [85.5, 26.0], [85.6, 26.0], [85.7, 26.0], [85.8, 26.0], [85.9, 26.0], [86.0, 26.0], [86.1, 26.0], [86.2, 26.0], [86.3, 26.0], [86.4, 26.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 28.0], [87.6, 28.0], [87.7, 28.0], [87.8, 28.0], [87.9, 28.0], [88.0, 28.0], [88.1, 28.0], [88.2, 28.0], [88.3, 28.0], [88.4, 29.0], [88.5, 29.0], [88.6, 29.0], [88.7, 29.0], [88.8, 29.0], [88.9, 29.0], [89.0, 29.0], [89.1, 29.0], [89.2, 30.0], [89.3, 30.0], [89.4, 30.0], [89.5, 30.0], [89.6, 30.0], [89.7, 30.0], [89.8, 30.0], [89.9, 31.0], [90.0, 31.0], [90.1, 31.0], [90.2, 31.0], [90.3, 31.0], [90.4, 31.0], [90.5, 31.0], [90.6, 32.0], [90.7, 32.0], [90.8, 32.0], [90.9, 32.0], [91.0, 32.0], [91.1, 32.0], [91.2, 32.0], [91.3, 33.0], [91.4, 33.0], [91.5, 33.0], [91.6, 33.0], [91.7, 33.0], [91.8, 34.0], [91.9, 34.0], [92.0, 34.0], [92.1, 34.0], [92.2, 34.0], [92.3, 34.0], [92.4, 35.0], [92.5, 35.0], [92.6, 35.0], [92.7, 35.0], [92.8, 35.0], [92.9, 36.0], [93.0, 36.0], [93.1, 36.0], [93.2, 36.0], [93.3, 37.0], [93.4, 37.0], [93.5, 37.0], [93.6, 37.0], [93.7, 37.0], [93.8, 38.0], [93.9, 38.0], [94.0, 38.0], [94.1, 38.0], [94.2, 39.0], [94.3, 39.0], [94.4, 39.0], [94.5, 40.0], [94.6, 40.0], [94.7, 40.0], [94.8, 40.0], [94.9, 41.0], [95.0, 41.0], [95.1, 41.0], [95.2, 42.0], [95.3, 42.0], [95.4, 42.0], [95.5, 43.0], [95.6, 43.0], [95.7, 44.0], [95.8, 44.0], [95.9, 44.0], [96.0, 45.0], [96.1, 45.0], [96.2, 46.0], [96.3, 46.0], [96.4, 47.0], [96.5, 47.0], [96.6, 48.0], [96.7, 48.0], [96.8, 49.0], [96.9, 49.0], [97.0, 50.0], [97.1, 51.0], [97.2, 51.0], [97.3, 52.0], [97.4, 53.0], [97.5, 54.0], [97.6, 54.0], [97.7, 55.0], [97.8, 56.0], [97.9, 57.0], [98.0, 58.0], [98.1, 60.0], [98.2, 61.0], [98.3, 62.0], [98.4, 64.0], [98.5, 66.0], [98.6, 68.0], [98.7, 70.0], [98.8, 73.0], [98.9, 76.0], [99.0, 80.0], [99.1, 83.0], [99.2, 88.0], [99.3, 93.0], [99.4, 98.0], [99.5, 105.0], [99.6, 113.0], [99.7, 121.0], [99.8, 132.0], [99.9, 148.0], [100.0, 3347.0]], "isOverall": false, "label": "Get Candy 2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4644511.0, "series": [{"data": [[0.0, 4641370.0], [600.0, 1.0], [700.0, 1.0], [900.0, 2.0], [1000.0, 23.0], [1100.0, 3.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 3.0], [1500.0, 2.0], [100.0, 26768.0], [1700.0, 1.0], [1900.0, 6.0], [2000.0, 7.0], [2100.0, 4.0], [2400.0, 5.0], [2600.0, 13.0], [2700.0, 16.0], [2800.0, 4.0], [2900.0, 7.0], [3000.0, 5.0], [3100.0, 26.0], [200.0, 99.0], [3200.0, 30.0], [3300.0, 15.0], [3400.0, 1.0]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[0.0, 4641175.0], [700.0, 2.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 29.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 2.0], [1500.0, 1.0], [100.0, 27045.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 3.0], [2000.0, 10.0], [2100.0, 2.0], [2200.0, 2.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 8.0], [2700.0, 20.0], [2800.0, 7.0], [2900.0, 5.0], [3000.0, 3.0], [200.0, 127.0], [3300.0, 15.0], [3200.0, 7.0], [500.0, 2.0]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[0.0, 4644511.0], [800.0, 1.0], [1000.0, 32.0], [1100.0, 2.0], [1300.0, 2.0], [1400.0, 1.0], [100.0, 27000.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 7.0], [2100.0, 4.0], [2200.0, 2.0], [2300.0, 4.0], [2400.0, 4.0], [2500.0, 2.0], [2600.0, 11.0], [2700.0, 17.0], [2800.0, 1.0], [2900.0, 8.0], [3000.0, 3.0], [3100.0, 2.0], [3200.0, 6.0], [3300.0, 13.0], [200.0, 82.0], [500.0, 2.0]], "isOverall": false, "label": "Get Candy 1", "isController": false}, {"data": [[0.0, 4629829.0], [2100.0, 4.0], [2200.0, 1.0], [2400.0, 2.0], [2500.0, 4.0], [2600.0, 11.0], [2700.0, 15.0], [2800.0, 10.0], [2900.0, 29.0], [3000.0, 30.0], [3100.0, 29.0], [800.0, 1.0], [3200.0, 29.0], [3300.0, 17.0], [200.0, 105.0], [1000.0, 15.0], [1500.0, 1.0], [100.0, 26880.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 3.0], [2000.0, 10.0]], "isOverall": false, "label": "Get Candy 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 132.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1.8664991E7, "series": [{"data": [[0.0, 1.8664991E7]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 132.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 521.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 249.93543593246113, "minX": 1.64976156E12, "maxY": 250.0, "series": [{"data": [[1.64976174E12, 250.0], [1.64976156E12, 249.93543593246113], [1.64976186E12, 249.99060983695816], [1.64976168E12, 250.0], [1.6497618E12, 250.0], [1.64976162E12, 250.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64976186E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 490.0, "maxY": 666.0, "series": [{"data": [[675.0, 666.0], [680.0, 3.0], [706.0, 27.0], [708.0, 52.0], [714.0, 31.0], [715.0, 56.0], [724.0, 34.0], [726.0, 3.0], [734.0, 100.0], [735.0, 136.0], [738.0, 88.0], [736.0, 42.0], [739.0, 75.0], [743.0, 49.25], [746.0, 32.5], [747.0, 8.0], [750.0, 14.333333333333334], [751.0, 19.0], [759.0, 241.25], [763.0, 12.0], [766.0, 14.0], [782.0, 30.5], [772.0, 30.4], [776.0, 28.6], [779.0, 91.5], [781.0, 5.0], [783.0, 45.0], [784.0, 9.0], [792.0, 36.0], [786.0, 64.0], [791.0, 29.333333333333332], [814.0, 25.25], [800.0, 83.0], [802.0, 46.0], [803.0, 11.0], [804.0, 29.0], [816.0, 23.5], [827.0, 5.666666666666667], [828.0, 25.666666666666664], [820.0, 11.4], [821.0, 25.666666666666664], [822.0, 15.2], [808.0, 28.2], [810.0, 22.0], [813.0, 22.0], [815.0, 6.5], [856.0, 29.27272727272727], [832.0, 45.714285714285715], [836.0, 31.666666666666664], [842.0, 14.0], [843.0, 27.833333333333336], [844.0, 34.25], [848.0, 52.900000000000006], [850.0, 60.0], [858.0, 41.0], [859.0, 21.0], [860.0, 13.25], [865.0, 12.333333333333334], [864.0, 20.727272727272727], [866.0, 32.2], [869.0, 25.0], [870.0, 10.5], [888.0, 25.666666666666668], [892.0, 28.333333333333332], [893.0, 41.0], [872.0, 8.0], [876.0, 11.0], [879.0, 47.5], [880.0, 31.374999999999996], [883.0, 45.0], [884.0, 32.333333333333336], [885.0, 43.0], [887.0, 2.0], [900.0, 16.000000000000004], [901.0, 39.333333333333336], [920.0, 11.0], [923.0, 77.0], [924.0, 60.785714285714285], [904.0, 47.0], [905.0, 4.0], [908.0, 111.0], [909.0, 11.333333333333334], [910.0, 20.75], [911.0, 30.6], [912.0, 14.0], [916.0, 24.166666666666668], [917.0, 21.0], [918.0, 7.0], [919.0, 2.0], [940.0, 23.25], [928.0, 31.166666666666675], [936.0, 92.53846153846153], [937.0, 30.0], [938.0, 26.0], [939.0, 2.0], [943.0, 77.0], [944.0, 31.444444444444446], [959.0, 27.5], [958.0, 0.0], [954.0, 11.833333333333334], [957.0, 19.0], [952.0, 19.166666666666664], [932.0, 1.5], [930.0, 2.0], [953.0, 19.0], [945.0, 22.0], [946.0, 36.0], [947.0, 34.0], [948.0, 29.0], [949.0, 3.0], [967.0, 33.666666666666664], [961.0, 53.0], [960.0, 30.5], [974.0, 39.75], [964.0, 24.6], [963.0, 1.5], [965.0, 30.0], [966.0, 21.0], [976.0, 37.0], [989.0, 44.0], [987.0, 7.666666666666666], [986.0, 1.0], [988.0, 24.599999999999998], [984.0, 22.0], [985.0, 25.850000000000005], [978.0, 42.0], [979.0, 37.684210526315795], [980.0, 36.714285714285715], [981.0, 31.5], [983.0, 56.0], [970.0, 35.0], [969.0, 2.0], [968.0, 3.0], [971.0, 38.0], [972.0, 22.4], [973.0, 24.0], [995.0, 30.333333333333332], [992.0, 24.14285714285714], [993.0, 19.210526315789473], [994.0, 22.4], [996.0, 19.53333333333333], [997.0, 32.28571428571429], [998.0, 29.0], [999.0, 23.9], [1000.0, 15.10181913146154]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[999.9871633091684, 15.104372469029743]], "isOverall": false, "label": "Get Fruit 2-Aggregated", "isController": false}, {"data": [[536.0, 530.0], [560.0, 567.0], [565.0, 120.0], [566.0, 46.0], [567.0, 109.0], [568.0, 27.0], [569.0, 35.55555555555556], [571.0, 67.0], [574.0, 31.333333333333336], [575.0, 8.666666666666666], [581.0, 9.5], [577.0, 6.833333333333333], [576.0, 1.0], [590.0, 61.5], [591.0, 82.0], [578.0, 3.0], [579.0, 7.0], [580.0, 8.0], [582.0, 5.0], [600.0, 13.0], [601.0, 25.0], [602.0, 9.5], [603.0, 30.75], [604.0, 103.5], [605.0, 90.5], [606.0, 10.0], [592.0, 9.5], [593.0, 6.0], [596.0, 28.8], [598.0, 1.0], [599.0, 2.0], [594.0, 68.33333333333334], [584.0, 61.666666666666664], [585.0, 4.5], [587.0, 87.33333333333333], [588.0, 35.0], [632.0, 6.666666666666667], [620.0, 5.75], [608.0, 17.428571428571427], [609.0, 10.333333333333332], [611.0, 21.666666666666664], [633.0, 6.5], [634.0, 6.0], [635.0, 3.6666666666666665], [636.0, 8.0], [637.0, 17.666666666666668], [638.0, 15.5], [639.0, 33.125], [624.0, 38.8], [628.0, 12.285714285714285], [629.0, 18.333333333333336], [630.0, 25.5], [631.0, 18.71428571428571], [616.0, 11.2], [617.0, 19.0], [619.0, 13.333333333333334], [622.0, 51.0], [623.0, 40.5], [643.0, 35.1], [641.0, 35.0], [644.0, 15.875], [646.0, 31.5], [647.0, 16.0], [665.0, 18.0], [668.0, 9.333333333333334], [669.0, 6.0], [670.0, 7.5], [648.0, 10.899999999999999], [650.0, 7.25], [651.0, 6.0], [656.0, 25.5], [658.0, 20.5], [659.0, 11.0], [660.0, 7.666666666666666], [663.0, 14.0], [678.0, 2.5], [685.0, 4.0], [672.0, 36.5], [674.0, 5.0], [675.0, 21.75], [688.0, 9.333333333333332], [702.0, 23.142857142857142], [703.0, 17.7], [699.0, 51.0], [700.0, 19.666666666666668], [696.0, 19.0], [698.0, 18.166666666666664], [689.0, 23.0], [691.0, 5.0], [692.0, 58.0], [693.0, 22.25], [694.0, 39.666666666666664], [680.0, 37.333333333333336], [683.0, 4.0], [684.0, 26.833333333333332], [686.0, 21.0], [707.0, 1.5], [705.0, 2.5], [704.0, 16.75], [706.0, 29.0], [708.0, 6.733333333333333], [709.0, 2.0], [710.0, 11.0], [728.0, 175.5], [730.0, 8.0], [731.0, 20.666666666666668], [732.0, 21.09090909090909], [733.0, 47.0], [734.0, 39.6], [724.0, 26.29999999999999], [725.0, 2.0], [726.0, 8.833333333333334], [727.0, 48.5], [714.0, 161.0], [715.0, 24.727272727272727], [747.0, 8.333333333333334], [738.0, 35.166666666666664], [736.0, 15.090909090909088], [750.0, 20.0], [751.0, 51.0], [739.0, 74.0], [740.0, 5.0], [743.0, 10.5], [760.0, 10.0], [763.0, 17.25], [764.0, 27.0], [765.0, 14.5], [766.0, 25.666666666666664], [752.0, 16.666666666666668], [753.0, 14.666666666666668], [758.0, 45.0], [759.0, 29.800000000000004], [744.0, 34.28571428571429], [745.0, 5.0], [746.0, 14.624999999999998], [782.0, 24.0], [771.0, 11.0], [772.0, 22.77777777777778], [775.0, 38.0], [792.0, 108.0], [793.0, 3.0], [795.0, 7.0], [776.0, 29.866666666666667], [779.0, 19.142857142857142], [780.0, 10.0], [783.0, 15.066666666666668], [784.0, 8.4], [786.0, 21.333333333333332], [791.0, 21.22222222222222], [801.0, 11.0], [800.0, 50.89999999999999], [815.0, 25.5], [813.0, 10.5], [814.0, 15.0], [802.0, 34.199999999999996], [803.0, 46.33333333333333], [804.0, 8.0], [807.0, 86.0], [816.0, 9.6], [828.0, 30.153846153846157], [826.0, 46.5], [827.0, 10.8], [819.0, 10.0], [820.0, 15.380952380952381], [821.0, 25.714285714285715], [822.0, 20.125], [823.0, 30.5], [808.0, 14.55], [810.0, 36.0], [811.0, 23.0], [812.0, 7.333333333333334], [835.0, 13.0], [832.0, 29.666666666666668], [836.0, 23.642857142857142], [837.0, 53.5], [838.0, 18.5], [856.0, 26.238095238095237], [858.0, 42.8], [859.0, 54.0], [860.0, 184.0], [863.0, 21.666666666666664], [842.0, 12.8], [843.0, 8.714285714285715], [844.0, 17.857142857142858], [848.0, 48.84999999999999], [849.0, 37.33333333333333], [850.0, 46.857142857142854], [851.0, 70.0], [865.0, 13.125], [864.0, 28.95238095238096], [877.0, 6.0], [879.0, 48.0], [866.0, 24.0], [869.0, 19.666666666666668], [870.0, 11.666666666666666], [871.0, 14.0], [880.0, 31.470588235294112], [893.0, 20.4], [888.0, 34.666666666666664], [892.0, 27.76923076923077], [884.0, 20.846153846153847], [885.0, 17.0], [887.0, 12.0], [872.0, 31.0], [873.0, 32.0], [874.0, 149.0], [876.0, 29.857142857142858], [900.0, 34.199999999999996], [901.0, 40.25], [920.0, 83.0], [923.0, 87.33333333333333], [924.0, 34.7], [926.0, 22.333333333333332], [908.0, 30.333333333333336], [909.0, 8.25], [910.0, 40.92307692307692], [911.0, 33.0], [912.0, 38.4], [916.0, 32.045454545454554], [918.0, 16.0], [928.0, 39.40909090909092], [931.0, 39.714285714285715], [952.0, 32.0], [953.0, 20.071428571428573], [954.0, 48.333333333333336], [955.0, 16.0], [957.0, 14.0], [958.0, 33.0], [959.0, 33.0], [936.0, 19.142857142857146], [938.0, 47.75], [939.0, 22.0], [940.0, 25.333333333333336], [944.0, 32.53333333333333], [945.0, 29.285714285714285], [946.0, 43.333333333333336], [947.0, 31.0], [948.0, 38.75], [964.0, 36.36363636363636], [972.0, 29.400000000000002], [960.0, 33.33333333333333], [975.0, 29.0], [973.0, 29.5], [974.0, 25.4], [965.0, 20.545454545454547], [966.0, 17.5], [967.0, 36.8], [985.0, 71.34782608695653], [988.0, 29.999999999999996], [989.0, 14.5], [990.0, 31.0], [976.0, 34.0], [978.0, 20.0], [979.0, 28.076923076923077], [980.0, 27.272727272727273], [983.0, 10.5], [968.0, 51.666666666666664], [970.0, 337.33333333333337], [971.0, 23.2], [995.0, 35.4], [992.0, 27.083333333333336], [993.0, 34.74999999999999], [994.0, 34.66666666666666], [996.0, 34.705882352941174], [997.0, 33.758620689655174], [998.0, 31.2], [999.0, 32.15384615384616], [1000.0, 15.096843003412417]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[999.94024927605, 15.102158754490148]], "isOverall": false, "label": "Get Fruit 1-Aggregated", "isController": false}, {"data": [[540.0, 517.0], [564.0, 263.0], [565.0, 83.0], [567.0, 103.0], [568.0, 123.0], [569.0, 55.87499999999999], [572.0, 81.4], [574.0, 84.0], [575.0, 30.625], [581.0, 7.0], [577.0, 20.666666666666664], [576.0, 3.666666666666667], [591.0, 18.75], [578.0, 8.5], [579.0, 3.0], [580.0, 6.25], [583.0, 25.75], [600.0, 48.25], [601.0, 5.0], [603.0, 49.0], [604.0, 24.5], [605.0, 21.2], [592.0, 22.75], [596.0, 10.333333333333332], [598.0, 2.0], [599.0, 11.0], [595.0, 5.0], [594.0, 13.5], [584.0, 7.5], [587.0, 20.333333333333332], [588.0, 9.5], [590.0, 23.666666666666668], [609.0, 9.0], [620.0, 29.0], [608.0, 21.142857142857142], [623.0, 15.0], [611.0, 15.333333333333334], [633.0, 8.0], [635.0, 3.0], [636.0, 4.5], [637.0, 7.0], [639.0, 33.0], [624.0, 22.0], [625.0, 2.0], [626.0, 48.0], [628.0, 16.5], [629.0, 39.0], [630.0, 55.0], [631.0, 18.0], [616.0, 20.0], [618.0, 22.0], [619.0, 19.5], [621.0, 52.0], [622.0, 13.0], [643.0, 39.666666666666664], [640.0, 6.0], [644.0, 40.0], [645.0, 6.0], [646.0, 7.0], [647.0, 21.0], [656.0, 28.0], [670.0, 4.5], [671.0, 6.5], [667.0, 24.5], [668.0, 12.166666666666666], [658.0, 29.0], [659.0, 51.0], [660.0, 50.5], [661.0, 16.0], [662.0, 40.333333333333336], [663.0, 12.333333333333332], [648.0, 32.85714285714286], [649.0, 16.0], [650.0, 34.0], [697.0, 6.0], [674.0, 50.0], [672.0, 5.5], [675.0, 51.0], [679.0, 36.0], [680.0, 9.5], [683.0, 4.666666666666667], [684.0, 15.727272727272727], [685.0, 14.0], [688.0, 7.444444444444445], [703.0, 15.666666666666666], [700.0, 8.333333333333334], [702.0, 19.25], [698.0, 5.166666666666666], [699.0, 5.0], [696.0, 27.6], [689.0, 8.0], [691.0, 11.1], [692.0, 16.6], [693.0, 44.0], [694.0, 20.571428571428573], [705.0, 3.0], [704.0, 13.0], [707.0, 11.5], [708.0, 5.666666666666666], [710.0, 57.5], [711.0, 4.0], [724.0, 15.619047619047617], [732.0, 82.75], [734.0, 98.5], [728.0, 63.666666666666664], [731.0, 42.0], [725.0, 46.0], [726.0, 6.0], [727.0, 83.33333333333333], [714.0, 27.0], [715.0, 29.933333333333334], [719.0, 8.0], [748.0, 5.0], [736.0, 73.25], [738.0, 61.3], [739.0, 93.0], [743.0, 6.833333333333333], [753.0, 8.0], [766.0, 49.0], [763.0, 20.0], [765.0, 27.5], [760.0, 14.0], [761.0, 24.0], [756.0, 32.0], [758.0, 22.0], [759.0, 39.5], [744.0, 25.0], [746.0, 8.857142857142858], [747.0, 48.0], [750.0, 18.285714285714285], [751.0, 33.5], [782.0, 16.57142857142857], [771.0, 55.0], [772.0, 33.44444444444444], [775.0, 28.0], [792.0, 65.0], [776.0, 40.52631578947368], [777.0, 53.0], [779.0, 51.875], [783.0, 32.300000000000004], [784.0, 16.42857142857143], [785.0, 6.0], [786.0, 10.0], [790.0, 12.0], [791.0, 18.565217391304344], [813.0, 8.0], [801.0, 44.75], [800.0, 56.42857142857142], [814.0, 20.0], [815.0, 14.666666666666668], [802.0, 26.833333333333336], [803.0, 10.333333333333334], [804.0, 6.5], [824.0, 16.666666666666668], [826.0, 51.666666666666664], [825.0, 1.0], [827.0, 38.57142857142857], [828.0, 24.624999999999996], [831.0, 2.0], [816.0, 27.375], [820.0, 19.333333333333332], [821.0, 16.0], [822.0, 12.75], [808.0, 20.545454545454547], [810.0, 6.75], [811.0, 10.0], [856.0, 21.4], [835.0, 46.0], [832.0, 36.61538461538461], [834.0, 1.5], [833.0, 2.0], [846.0, 5.0], [845.0, 2.0], [836.0, 24.238095238095237], [837.0, 20.333333333333336], [838.0, 26.0], [857.0, 3.8], [858.0, 31.166666666666668], [859.0, 23.0], [860.0, 13.0], [863.0, 0.6666666666666667], [862.0, 1.0], [848.0, 36.07142857142857], [849.0, 5.666666666666667], [850.0, 47.4], [855.0, 2.0], [853.0, 1.5], [840.0, 14.0], [842.0, 9.333333333333334], [843.0, 23.384615384615383], [844.0, 18.125], [888.0, 16.57142857142857], [877.0, 299.66666666666663], [864.0, 13.928571428571429], [865.0, 9.099999999999998], [866.0, 14.25], [869.0, 1.142857142857143], [868.0, 2.0], [892.0, 12.41176470588235], [891.0, 1.25], [890.0, 1.25], [889.0, 3.75], [893.0, 3.25], [895.0, 3.0], [894.0, 1.4285714285714286], [872.0, 4.142857142857143], [875.0, 32.0], [876.0, 53.93749999999999], [879.0, 22.0], [880.0, 30.454545454545443], [881.0, 31.0], [882.0, 1.7619047619047614], [884.0, 23.59999999999999], [885.0, 20.0], [886.0, 9.0], [887.0, 13.0], [900.0, 30.0], [901.0, 29.916666666666664], [920.0, 1.4285714285714286], [903.0, 2.095238095238095], [922.0, 2.0], [921.0, 2.0], [923.0, 29.0], [924.0, 49.918918918918905], [925.0, 1.5], [904.0, 15.833333333333334], [905.0, 2.0], [907.0, 1.25], [906.0, 1.4], [908.0, 30.888888888888893], [909.0, 5.333333333333333], [910.0, 34.0], [911.0, 14.333333333333334], [898.0, 4.0], [897.0, 1.75], [912.0, 13.952380952380949], [916.0, 16.040000000000003], [915.0, 1.0], [914.0, 1.1578947368421055], [913.0, 1.0], [917.0, 1.5], [918.0, 18.0], [919.0, 1.6666666666666667], [954.0, 19.333333333333336], [940.0, 22.000000000000004], [928.0, 40.56250000000001], [929.0, 1.6666666666666667], [931.0, 2.0], [930.0, 1.6666666666666667], [934.0, 1.6666666666666667], [932.0, 1.25], [952.0, 34.09090909090909], [953.0, 32.9], [955.0, 16.0], [956.0, 5.0], [957.0, 10.0], [958.0, 6.8], [959.0, 1.3750000000000002], [936.0, 30.200000000000003], [937.0, 1.7272727272727273], [938.0, 15.600000000000005], [939.0, 6.5], [944.0, 30.461538461538463], [945.0, 37.75], [946.0, 33.300000000000004], [948.0, 23.42857142857143], [947.0, 3.0], [951.0, 24.6], [949.0, 1.0], [962.0, 35.5], [971.0, 19.5], [960.0, 15.424242424242422], [974.0, 29.75], [975.0, 48.5], [972.0, 28.083333333333332], [973.0, 22.666666666666664], [964.0, 23.692307692307693], [963.0, 1.6666666666666667], [965.0, 37.333333333333336], [967.0, 22.166666666666664], [984.0, 24.25], [985.0, 18.966666666666665], [986.0, 0.9090909090909091], [987.0, 15.833333333333334], [988.0, 41.142857142857146], [989.0, 23.0], [990.0, 22.0], [991.0, 0.0], [976.0, 35.25], [978.0, 27.5], [979.0, 36.36842105263158], [980.0, 30.166666666666668], [981.0, 56.0], [983.0, 26.5], [968.0, 10.000000000000002], [969.0, 6.68], [970.0, 49.0], [995.0, 29.384615384615383], [992.0, 22.78571428571428], [993.0, 16.564102564102573], [994.0, 30.857142857142858], [996.0, 38.50000000000001], [997.0, 26.529411764705884], [998.0, 34.57142857142858], [999.0, 35.33333333333333], [1000.0, 15.085733631615424]], "isOverall": false, "label": "Get Candy 1", "isController": false}, {"data": [[999.9398444642394, 15.089299815079746]], "isOverall": false, "label": "Get Candy 1-Aggregated", "isController": false}, {"data": [[492.0, 8.0], [490.0, 6.0], [498.0, 7.0], [531.0, 5.25], [534.0, 5.0], [533.0, 7.0], [532.0, 5.5], [530.0, 5.0], [529.0, 5.0], [526.0, 8.0], [515.0, 9.0], [517.0, 6.166666666666666], [516.0, 7.25], [524.0, 5.75], [523.0, 8.0], [522.0, 8.0], [521.0, 8.0], [520.0, 5.5], [638.0, 4.0], [636.0, 4.0], [635.0, 5.0], [632.0, 4.0], [623.0, 3.0], [621.0, 5.0], [620.0, 5.0], [642.0, 2.3333333333333335], [641.0, 5.0], [640.0, 4.0], [734.0, 1.5], [735.0, 1.0], [722.0, 1.0], [721.0, 2.3333333333333335], [724.0, 1.5], [723.0, 1.2857142857142856], [733.0, 2.25], [732.0, 1.8], [731.0, 0.6], [729.0, 0.0], [728.0, 0.0], [726.0, 0.0], [725.0, 1.5], [763.0, 0.9615384615384616], [765.0, 1.0], [766.0, 2.0], [764.0, 1.0], [762.0, 1.75], [743.0, 2.0], [741.0, 1.75], [740.0, 1.3333333333333333], [739.0, 2.0], [737.0, 0.8333333333333334], [754.0, 2.0], [752.0, 1.0], [750.0, 2.0], [746.0, 1.0], [796.0, 1.4], [799.0, 1.75], [789.0, 1.0], [786.0, 2.0], [798.0, 1.0], [797.0, 1.125], [795.0, 0.33333333333333337], [794.0, 1.3333333333333333], [793.0, 1.0], [792.0, 1.3000000000000003], [782.0, 1.0], [769.0, 1.0], [768.0, 1.7500000000000002], [772.0, 2.5], [770.0, 1.1428571428571428], [778.0, 1.3333333333333333], [777.0, 1.8333333333333335], [776.0, 1.5], [791.0, 1.1176470588235297], [790.0, 1.5], [828.0, 1.0], [818.0, 1.3333333333333333], [830.0, 2.3333333333333335], [831.0, 2.0], [817.0, 0.0], [816.0, 1.0], [829.0, 1.5], [825.0, 3.2], [807.0, 2.0], [805.0, 1.0833333333333333], [804.0, 1.0], [803.0, 0.0], [802.0, 0.6], [801.0, 0.6], [800.0, 1.2500000000000002], [815.0, 1.0], [814.0, 1.0], [812.0, 1.75], [810.0, 1.5], [809.0, 1.0], [808.0, 3.0], [823.0, 2.5], [822.0, 2.0], [819.0, 1.5], [862.0, 0.25000000000000006], [863.0, 1.2], [852.0, 2.5], [849.0, 1.0], [861.0, 2.0], [860.0, 1.25], [859.0, 2.0], [858.0, 1.6666666666666667], [857.0, 2.6666666666666665], [838.0, 1.0], [835.0, 2.0], [834.0, 2.0], [833.0, 2.5], [832.0, 2.5714285714285716], [846.0, 1.0], [845.0, 1.8], [844.0, 5.0], [842.0, 8.0], [855.0, 4.0], [853.0, 3.0], [892.0, 4.374999999999999], [880.0, 3.4166666666666665], [879.0, 426.0], [865.0, 1.5714285714285714], [864.0, 2.0], [867.0, 1.5], [866.0, 2.0], [869.0, 0.7142857142857143], [868.0, 2.0], [889.0, 2.0], [888.0, 1.0], [885.0, 8.0], [884.0, 1.958333333333333], [883.0, 1.6666666666666667], [882.0, 1.952380952380952], [881.0, 1.0], [887.0, 2.6666666666666665], [886.0, 1.0], [893.0, 10.571428571428573], [895.0, 4.0], [894.0, 1.5], [891.0, 1.4285714285714286], [890.0, 1.5555555555555556], [900.0, 6.0], [908.0, 7.0], [907.0, 2.375], [906.0, 0.5], [905.0, 2.8], [904.0, 1.75], [909.0, 13.0], [911.0, 38.5], [898.0, 2.0], [897.0, 2.0], [910.0, 1.0], [912.0, 3.125], [916.0, 41.5], [915.0, 2.0], [914.0, 0.8888888888888888], [919.0, 1.7142857142857144], [917.0, 1.7692307692307692], [924.0, 33.2], [927.0, 2.0], [921.0, 2.0], [920.0, 2.0], [903.0, 2.0], [901.0, 5.0], [931.0, 28.666666666666664], [928.0, 39.5], [930.0, 2.25], [929.0, 2.166666666666667], [934.0, 78.0], [932.0, 1.0], [936.0, 23.2], [937.0, 1.25], [938.0, 4.0], [940.0, 10.352941176470589], [939.0, 2.166666666666667], [944.0, 21.0], [945.0, 16.0], [946.0, 5.5], [951.0, 1.5], [948.0, 2.0], [952.0, 33.75], [954.0, 7.833333333333333], [953.0, 2.0], [955.0, 8.0], [957.0, 20.666666666666664], [958.0, 9.428571428571429], [959.0, 0.5714285714285714], [964.0, 5.5], [960.0, 4.695652173913043], [963.0, 1.6], [961.0, 1.0], [965.0, 13.0], [966.0, 30.0], [967.0, 14.0], [985.0, 9.588235294117647], [986.0, 9.2], [987.0, 1.2], [988.0, 24.666666666666668], [990.0, 18.0], [970.0, 35.0], [969.0, 1.7826086956521738], [968.0, 1.75], [972.0, 64.0], [975.0, 36.0], [976.0, 20.0], [977.0, 23.0], [979.0, 22.833333333333332], [980.0, 52.5], [992.0, 10.285714285714286], [993.0, 9.304347826086957], [994.0, 19.555555555555557], [996.0, 20.285714285714285], [997.0, 42.75], [998.0, 35.5], [999.0, 30.5], [1000.0, 15.139538215209205]], "isOverall": false, "label": "Get Candy 2", "isController": false}, {"data": [[999.9701882767711, 15.137722413891833]], "isOverall": false, "label": "Get Candy 2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2210802.933333333, "minX": 1.64976156E12, "maxY": 7944538.883333334, "series": [{"data": [[1.64976174E12, 5777843.8], [1.64976156E12, 3312038.3333333335], [1.64976186E12, 2210802.933333333], [1.64976168E12, 5772846.666666667], [1.6497618E12, 5772630.466666667], [1.64976162E12, 5774491.933333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64976174E12, 7944538.883333334], [1.64976156E12, 4554134.316666666], [1.64976186E12, 3039830.3], [1.64976168E12, 7937663.366666666], [1.6497618E12, 7937366.633333334], [1.64976162E12, 7939933.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64976186E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 14.872784802754564, "minX": 1.64976156E12, "maxY": 15.953803855900764, "series": [{"data": [[1.64976174E12, 14.872784802754564], [1.64976156E12, 15.727045577922995], [1.64976186E12, 14.968380928055385], [1.64976168E12, 15.057827508305175], [1.6497618E12, 15.119318187845886], [1.64976162E12, 15.064536691740953]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.64976174E12, 14.91556645424909], [1.64976156E12, 15.474846302765922], [1.64976186E12, 15.005455112219638], [1.64976168E12, 15.047696004468156], [1.6497618E12, 15.157391279366216], [1.64976162E12, 15.108169023668262]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[1.64976174E12, 14.909975855186888], [1.64976156E12, 15.51625698406073], [1.64976186E12, 14.92036717857346], [1.64976168E12, 15.050319054477344], [1.6497618E12, 15.111955002817313], [1.64976162E12, 15.102721321449888]], "isOverall": false, "label": "Get Candy 1", "isController": false}, {"data": [[1.64976174E12, 14.88930953879032], [1.64976156E12, 15.953803855900764], [1.64976186E12, 14.932165628922677], [1.64976168E12, 15.057271994949875], [1.6497618E12, 15.153730679535721], [1.64976162E12, 15.070010663299689]], "isOverall": false, "label": "Get Candy 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64976186E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 14.869938337168504, "minX": 1.64976156E12, "maxY": 15.95096963251256, "series": [{"data": [[1.64976174E12, 14.869938337168504], [1.64976156E12, 15.724260632245919], [1.64976186E12, 14.965432516921378], [1.64976168E12, 15.055201594684853], [1.6497618E12, 15.116707177467054], [1.64976162E12, 15.061725998803702]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.64976174E12, 14.912781258976311], [1.64976156E12, 15.47222298392969], [1.64976186E12, 15.002699723904367], [1.64976168E12, 15.044678304949159], [1.6497618E12, 15.154535404232888], [1.64976162E12, 15.104974261165086]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[1.64976174E12, 14.907170467907985], [1.64976156E12, 15.513588173534922], [1.64976186E12, 14.917650411250031], [1.64976168E12, 15.047723285029416], [1.6497618E12, 15.109383007642895], [1.64976162E12, 15.099968299828564]], "isOverall": false, "label": "Get Candy 1", "isController": false}, {"data": [[1.64976174E12, 14.88662931040846], [1.64976156E12, 15.95096963251256], [1.64976186E12, 14.929461121317265], [1.64976168E12, 15.054621527238492], [1.6497618E12, 15.150846440608788], [1.64976162E12, 15.067266853053354]], "isOverall": false, "label": "Get Candy 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64976186E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64976156E12, "maxY": 6.215528950654118E-5, "series": [{"data": [[1.64976174E12, 3.812230695022613E-5], [1.64976156E12, 5.2055059379952E-5], [1.64976186E12, 0.0], [1.64976168E12, 3.18936877076409E-5], [1.6497618E12, 2.652387626293516E-5], [1.64976162E12, 2.5455332255724262E-5]], "isOverall": false, "label": "Get Fruit 2", "isController": false}, {"data": [[1.64976174E12, 3.723523091162517E-5], [1.64976156E12, 6.215528950654118E-5], [1.64976186E12, 0.0], [1.64976168E12, 2.442191729039999E-5], [1.6497618E12, 2.1280738697001384E-5], [1.64976162E12, 3.295761650517308E-5]], "isOverall": false, "label": "Get Fruit 1", "isController": false}, {"data": [[1.64976174E12, 3.186732993202717E-5], [1.64976156E12, 4.221639758302073E-5], [1.64976186E12, 0.0], [1.64976168E12, 2.7614568596712198E-5], [1.6497618E12, 3.289267755944702E-5], [1.64976162E12, 2.6594103768065958E-5]], "isOverall": false, "label": "Get Candy 1", "isController": false}, {"data": [[1.64976174E12, 2.546535279593671E-5], [1.64976156E12, 4.902848177648683E-5], [1.64976186E12, 0.0], [1.64976168E12, 6.163878397306731E-5], [1.6497618E12, 3.0853164470773275E-5], [1.64976162E12, 2.2281521721831118E-5]], "isOverall": false, "label": "Get Candy 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64976186E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64976156E12, "maxY": 3404.0, "series": [{"data": [[1.64976174E12, 1059.0], [1.64976156E12, 3404.0], [1.64976186E12, 229.0], [1.64976168E12, 1043.0], [1.6497618E12, 1072.0], [1.64976162E12, 1068.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64976174E12, 31.0], [1.64976156E12, 30.0], [1.64976186E12, 32.0], [1.64976168E12, 31.0], [1.6497618E12, 32.0], [1.64976162E12, 31.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64976174E12, 72.0], [1.64976156E12, 52.0], [1.64976186E12, 83.0], [1.64976168E12, 67.0], [1.6497618E12, 125.0], [1.64976162E12, 146.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64976174E12, 40.0], [1.64976156E12, 36.0], [1.64976186E12, 42.0], [1.64976168E12, 41.95000000000073], [1.6497618E12, 44.0], [1.64976162E12, 46.95000000000073]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64976174E12, 0.0], [1.64976156E12, 0.0], [1.64976186E12, 0.0], [1.64976168E12, 0.0], [1.6497618E12, 0.0], [1.64976162E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64976174E12, 12.0], [1.64976156E12, 13.0], [1.64976186E12, 11.0], [1.64976168E12, 11.0], [1.6497618E12, 11.0], [1.64976162E12, 9.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64976186E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 4216.0, "maxY": 23.0, "series": [{"data": [[63303.0, 9.5], [62599.0, 10.0], [62999.0, 11.0], [62807.0, 11.0], [62743.0, 12.0], [62295.0, 9.0], [62615.0, 9.0], [62903.0, 13.0], [63191.0, 10.0], [63559.0, 9.0], [63543.0, 12.0], [62822.0, 11.0], [63238.0, 11.0], [63206.0, 11.0], [62870.0, 12.0], [62966.0, 11.0], [62854.0, 10.0], [62758.0, 11.0], [62742.0, 12.0], [62630.0, 12.0], [63334.0, 12.0], [62550.0, 10.0], [63414.0, 11.0], [62502.0, 9.0], [63014.0, 11.0], [62214.0, 10.0], [63078.0, 12.0], [63798.0, 10.0], [63750.0, 11.0], [63654.0, 12.0], [63574.0, 10.0], [64166.0, 11.0], [64054.0, 11.0], [43669.0, 15.0], [63333.0, 13.0], [61845.0, 9.0], [61701.0, 11.0], [62213.0, 10.0], [63365.0, 9.0], [63349.0, 12.0], [62901.0, 13.0], [62741.0, 11.0], [62613.0, 11.0], [62469.0, 13.0], [63077.0, 10.0], [63189.0, 12.0], [63109.0, 10.0], [63061.0, 10.0], [63845.0, 10.0], [63797.0, 11.0], [63541.0, 9.0], [53060.0, 11.0], [63204.0, 10.0], [62356.0, 10.0], [62900.0, 12.0], [62756.0, 9.0], [62676.0, 9.0], [62628.0, 11.0], [63444.0, 12.0], [63364.0, 13.0], [62548.0, 11.0], [63044.0, 11.0], [63108.0, 10.0], [61652.0, 10.0], [63652.0, 13.0], [63860.0, 13.0], [61123.0, 11.0], [61379.0, 11.0], [60691.0, 11.0], [62627.0, 12.0], [63139.0, 13.0], [62979.0, 13.0], [63027.0, 12.0], [62195.0, 12.0], [62435.0, 11.0], [63395.0, 11.0], [62611.0, 12.0], [62835.0, 10.0], [62963.0, 11.0], [62931.0, 12.0], [62723.0, 10.0], [62787.0, 9.0], [62131.0, 10.0], [62147.0, 11.0], [64035.0, 12.0], [56770.0, 13.0], [61282.0, 10.0], [60322.0, 11.0], [63202.0, 11.0], [61986.0, 13.0], [61970.0, 13.0], [63138.0, 10.0], [63122.0, 9.0], [63218.0, 12.0], [63362.0, 12.0], [62738.0, 12.0], [62882.0, 10.0], [63922.0, 9.0], [64610.0, 12.0], [64386.0, 12.0], [4216.0, 23.0], [33745.0, 12.0], [63361.0, 8.0], [62961.0, 11.0], [62913.0, 12.0], [63121.0, 12.0], [61649.0, 9.0], [62129.0, 11.0], [63089.0, 12.0], [62609.0, 10.0], [62673.0, 10.0], [63441.0, 9.0], [63377.0, 10.0], [62465.0, 10.0], [63153.0, 10.0], [63217.0, 11.0], [63329.0, 12.0], [63617.0, 9.0], [63809.0, 11.0], [63905.0, 13.0], [63489.0, 10.0], [60992.0, 11.0], [63200.0, 11.0], [63424.0, 11.0], [62464.0, 12.0], [62480.0, 10.0], [61760.0, 12.0], [61616.0, 12.0], [63168.0, 10.0], [62976.0, 11.0], [63056.0, 8.0], [62896.0, 12.0], [62928.0, 10.0], [62832.0, 11.0], [63504.0, 11.0], [64272.0, 12.0], [63840.0, 11.0], [48703.0, 16.0], [63295.0, 13.0], [61887.0, 10.0], [61807.0, 9.0], [61503.0, 9.0], [62271.0, 12.0], [62399.0, 10.0], [63151.0, 13.0], [63055.0, 11.0], [63087.0, 12.0], [63375.0, 13.0], [63311.0, 10.0], [63359.0, 11.0], [62703.0, 13.0], [62239.0, 12.0], [62191.0, 12.0], [62223.0, 12.0], [62031.0, 11.0], [64767.0, 11.0], [61374.0, 12.0], [62574.0, 12.0], [63102.0, 12.0], [63486.0, 10.0], [63310.0, 9.0], [62878.0, 9.0], [62910.0, 11.0], [62750.0, 10.0], [62062.0, 11.0], [62222.0, 10.0], [62238.0, 8.0], [63006.0, 10.0], [63038.0, 14.0], [62462.0, 10.0], [62382.0, 11.0], [62366.0, 10.0], [63054.0, 12.0], [63070.0, 10.0], [63694.0, 10.0], [63550.0, 12.0], [63902.0, 12.0], [63213.0, 12.0], [63149.0, 11.0], [63389.0, 13.0], [63309.0, 12.0], [61725.0, 11.0], [62205.0, 11.0], [62461.0, 12.0], [62445.0, 10.0], [62893.0, 10.0], [62813.0, 12.0], [62797.0, 13.0], [63037.0, 12.0], [60828.0, 13.0], [63036.0, 12.0], [62300.0, 10.0], [63292.0, 13.0], [62236.0, 12.0], [62140.0, 12.0], [62316.0, 11.0], [62620.0, 10.0], [63484.0, 11.0], [63084.0, 11.0], [61692.0, 12.0], [62988.0, 11.0], [61852.0, 9.0], [63180.0, 9.0], [62860.0, 11.0], [62828.0, 13.0], [62732.0, 10.0], [62636.0, 12.0], [63692.0, 13.0], [63612.0, 13.0], [63628.0, 12.0], [56795.0, 12.0], [61227.0, 11.0], [62491.0, 9.0], [63035.0, 10.0], [62571.0, 13.0], [63003.0, 8.0], [62459.0, 11.0], [63419.0, 11.0], [63371.0, 12.0], [63163.0, 14.0], [62779.0, 11.0], [62731.0, 9.0], [62603.0, 11.0], [62379.0, 12.0], [63963.0, 8.0], [63771.0, 12.0], [63739.0, 11.0], [63563.0, 11.0], [63707.0, 11.0], [63499.0, 10.0], [59690.0, 10.0], [63274.0, 12.0], [62906.0, 11.0], [62682.0, 10.0], [62330.0, 9.0], [62170.0, 10.0], [61962.0, 11.0], [62458.0, 10.0], [61738.0, 11.0], [63114.0, 11.0], [62490.0, 12.0], [63386.0, 12.0], [63354.0, 11.0], [62602.0, 11.5], [62554.0, 11.0], [63738.0, 13.0], [63498.0, 11.0], [63690.0, 13.0], [53449.0, 7.0], [57961.0, 11.0], [63257.0, 13.0], [62313.0, 12.0], [62873.0, 9.0], [62009.0, 9.0], [62121.0, 10.0], [62761.0, 9.0], [63401.0, 9.0], [63145.0, 12.0], [63209.0, 8.0], [62441.0, 11.0], [62393.0, 11.0], [63689.0, 12.0], [64825.0, 13.0], [63817.0, 12.0], [63529.0, 13.0], [18540.0, 20.0], [61432.0, 10.0], [63352.0, 11.0], [63400.0, 12.0], [62472.0, 10.0], [63288.0, 11.0], [63176.0, 10.0], [62648.0, 13.0], [62632.0, 11.0], [61720.0, 9.0], [62200.0, 12.0], [62024.0, 11.0], [63080.0, 12.0], [62904.0, 11.0], [63592.0, 11.0], [63736.0, 13.0], [63720.0, 12.0], [63704.0, 9.0], [63640.0, 10.0], [63576.0, 11.0], [64808.0, 12.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 64825.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 4216.0, "maxY": 23.0, "series": [{"data": [[63303.0, 9.0], [62599.0, 10.0], [62999.0, 11.0], [62807.0, 11.0], [62743.0, 12.0], [62295.0, 9.0], [62615.0, 9.0], [62903.0, 13.0], [63191.0, 10.0], [63559.0, 9.0], [63543.0, 12.0], [62822.0, 11.0], [63238.0, 11.0], [63206.0, 11.0], [62870.0, 12.0], [62966.0, 11.0], [62854.0, 10.0], [62758.0, 11.0], [62742.0, 12.0], [62630.0, 12.0], [63334.0, 12.0], [62550.0, 10.0], [63414.0, 11.0], [62502.0, 9.0], [63014.0, 11.0], [62214.0, 10.0], [63078.0, 12.0], [63798.0, 10.0], [63750.0, 11.0], [63654.0, 12.0], [63574.0, 10.0], [64166.0, 11.0], [64054.0, 11.0], [43669.0, 15.0], [63333.0, 13.0], [61845.0, 9.0], [61701.0, 11.0], [62213.0, 10.0], [63365.0, 9.0], [63349.0, 11.0], [62901.0, 13.0], [62741.0, 11.0], [62613.0, 11.0], [62469.0, 13.0], [63077.0, 10.0], [63189.0, 12.0], [63109.0, 10.0], [63061.0, 10.0], [63845.0, 10.0], [63797.0, 11.0], [63541.0, 9.0], [53060.0, 11.0], [63204.0, 10.0], [62356.0, 10.0], [62900.0, 12.0], [62756.0, 9.0], [62676.0, 9.0], [62628.0, 11.0], [63444.0, 12.0], [63364.0, 13.0], [62548.0, 11.0], [63044.0, 11.0], [63108.0, 10.0], [61652.0, 10.0], [63652.0, 13.0], [63860.0, 13.0], [61123.0, 11.0], [61379.0, 11.0], [60691.0, 11.0], [62627.0, 12.0], [63139.0, 13.0], [62979.0, 13.0], [63027.0, 12.0], [62195.0, 12.0], [62435.0, 11.0], [63395.0, 11.0], [62611.0, 12.0], [62835.0, 10.0], [62963.0, 11.0], [62931.0, 12.0], [62723.0, 10.0], [62787.0, 9.0], [62131.0, 10.0], [62147.0, 11.0], [64035.0, 12.0], [56770.0, 13.0], [61282.0, 10.0], [60322.0, 11.0], [63202.0, 11.0], [61986.0, 13.0], [61970.0, 13.0], [63138.0, 10.0], [63122.0, 9.0], [63218.0, 12.0], [63362.0, 12.0], [62738.0, 12.0], [62882.0, 10.0], [63922.0, 9.0], [64610.0, 12.0], [64386.0, 12.0], [4216.0, 23.0], [33745.0, 12.0], [63361.0, 8.0], [62961.0, 11.0], [62913.0, 12.0], [63121.0, 12.0], [61649.0, 9.0], [62129.0, 11.0], [63089.0, 12.0], [62609.0, 10.0], [62673.0, 10.0], [63441.0, 9.0], [63377.0, 10.0], [62465.0, 10.0], [63153.0, 10.0], [63217.0, 11.0], [63329.0, 12.0], [63617.0, 9.0], [63809.0, 11.0], [63905.0, 13.0], [63489.0, 10.0], [60992.0, 11.0], [63200.0, 11.0], [63424.0, 11.0], [62464.0, 12.0], [62480.0, 10.0], [61760.0, 12.0], [61616.0, 12.0], [63168.0, 10.0], [62976.0, 11.0], [63056.0, 8.0], [62896.0, 12.0], [62928.0, 10.0], [62832.0, 11.0], [63504.0, 11.0], [64272.0, 12.0], [63840.0, 11.0], [48703.0, 16.0], [63295.0, 13.0], [61887.0, 10.0], [61807.0, 9.0], [61503.0, 9.0], [62271.0, 12.0], [62399.0, 10.0], [63151.0, 13.0], [63055.0, 11.0], [63087.0, 12.0], [63375.0, 13.0], [63311.0, 10.0], [63359.0, 11.0], [62703.0, 13.0], [62239.0, 12.0], [62191.0, 12.0], [62223.0, 12.0], [62031.0, 11.0], [64767.0, 11.0], [61374.0, 12.0], [62574.0, 12.0], [63102.0, 12.0], [63486.0, 10.0], [63310.0, 9.0], [62878.0, 9.0], [62910.0, 11.0], [62750.0, 10.0], [62062.0, 11.0], [62222.0, 10.0], [62238.0, 8.0], [63006.0, 10.0], [63038.0, 14.0], [62462.0, 10.0], [62382.0, 11.0], [62366.0, 10.0], [63054.0, 12.0], [63070.0, 10.0], [63694.0, 10.0], [63550.0, 12.0], [63902.0, 12.0], [63213.0, 12.0], [63149.0, 11.0], [63389.0, 13.0], [63309.0, 12.0], [61725.0, 11.0], [62205.0, 11.0], [62461.0, 12.0], [62445.0, 10.0], [62893.0, 10.0], [62813.0, 12.0], [62797.0, 13.0], [63037.0, 12.0], [60828.0, 13.0], [63036.0, 12.0], [62300.0, 10.0], [63292.0, 13.0], [62236.0, 12.0], [62140.0, 12.0], [62316.0, 11.0], [62620.0, 10.0], [63484.0, 11.0], [63084.0, 11.0], [61692.0, 12.0], [62988.0, 11.0], [61852.0, 9.0], [63180.0, 9.0], [62860.0, 11.0], [62828.0, 13.0], [62732.0, 10.0], [62636.0, 12.0], [63692.0, 13.0], [63612.0, 13.0], [63628.0, 12.0], [56795.0, 12.0], [61227.0, 11.0], [62491.0, 9.0], [63035.0, 10.0], [62571.0, 13.0], [63003.0, 8.0], [62459.0, 11.0], [63419.0, 11.0], [63371.0, 12.0], [63163.0, 14.0], [62779.0, 11.0], [62731.0, 9.0], [62603.0, 11.0], [62379.0, 12.0], [63963.0, 8.0], [63771.0, 12.0], [63739.0, 11.0], [63563.0, 11.0], [63707.0, 11.0], [63499.0, 10.0], [59690.0, 10.0], [63274.0, 12.0], [62906.0, 11.0], [62682.0, 10.0], [62330.0, 9.0], [62170.0, 10.0], [61962.0, 11.0], [62458.0, 10.0], [61738.0, 11.0], [63114.0, 11.0], [62490.0, 12.0], [63386.0, 12.0], [63354.0, 11.0], [62602.0, 11.0], [62554.0, 11.0], [63738.0, 12.5], [63498.0, 11.0], [63690.0, 13.0], [53449.0, 7.0], [57961.0, 11.0], [63257.0, 13.0], [62313.0, 12.0], [62873.0, 9.0], [62009.0, 9.0], [62121.0, 10.0], [62761.0, 9.0], [63401.0, 9.0], [63145.0, 12.0], [63209.0, 8.0], [62441.0, 11.0], [62393.0, 11.0], [63689.0, 12.0], [64825.0, 13.0], [63817.0, 12.0], [63529.0, 13.0], [18540.0, 20.0], [61432.0, 10.0], [63352.0, 11.0], [63400.0, 12.0], [62472.0, 10.0], [63288.0, 11.0], [63176.0, 10.0], [62648.0, 13.0], [62632.0, 11.0], [61720.0, 9.0], [62200.0, 12.0], [62024.0, 11.0], [63080.0, 12.0], [62904.0, 11.0], [63592.0, 11.0], [63736.0, 13.0], [63720.0, 12.0], [63704.0, 9.0], [63640.0, 10.0], [63576.0, 11.0], [64808.0, 12.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 64825.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 24013.85, "minX": 1.64976156E12, "maxY": 62802.65, "series": [{"data": [[1.64976174E12, 62802.65], [1.64976156E12, 36016.96666666667], [1.64976186E12, 24013.85], [1.64976168E12, 62748.36666666667], [1.6497618E12, 62745.933333333334], [1.64976162E12, 62766.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64976186E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 24030.466666666667, "minX": 1.64976156E12, "maxY": 62802.65, "series": [{"data": [[1.64976174E12, 62802.65], [1.64976156E12, 36000.416666666664], [1.64976186E12, 24030.466666666667], [1.64976168E12, 62748.333333333336], [1.6497618E12, 62745.98333333333], [1.64976162E12, 62766.21666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64976186E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5988.266666666666, "minX": 1.64976156E12, "maxY": 15738.816666666668, "series": [{"data": [[1.64976174E12, 15666.166666666666], [1.64976156E12, 9116.95], [1.64976186E12, 5988.266666666666], [1.64976168E12, 15696.283333333333], [1.6497618E12, 15663.616666666667], [1.64976162E12, 15676.7]], "isOverall": false, "label": "Get Fruit 1-success", "isController": false}, {"data": [[1.64976174E12, 15690.05], [1.64976156E12, 9080.2], [1.64976186E12, 6024.316666666667], [1.64976168E12, 15692.2], [1.6497618E12, 15707.65], [1.64976162E12, 15667.633333333333]], "isOverall": false, "label": "Get Candy 1-success", "isController": false}, {"data": [[1.64976174E12, 15707.616666666667], [1.64976156E12, 8838.4], [1.64976186E12, 6014.65], [1.64976168E12, 15682.766666666666], [1.6497618E12, 15665.6], [1.64976162E12, 15708.083333333334]], "isOverall": false, "label": "Get Candy 2-success", "isController": false}, {"data": [[1.64976174E12, 15738.816666666668], [1.64976156E12, 8964.866666666667], [1.64976186E12, 6003.233333333334], [1.64976168E12, 15677.083333333334], [1.6497618E12, 15709.116666666667], [1.64976162E12, 15713.8]], "isOverall": false, "label": "Get Fruit 2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64976186E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 24030.466666666667, "minX": 1.64976156E12, "maxY": 62802.65, "series": [{"data": [[1.64976174E12, 62802.65], [1.64976156E12, 36000.416666666664], [1.64976186E12, 24030.466666666667], [1.64976168E12, 62748.333333333336], [1.6497618E12, 62745.98333333333], [1.64976162E12, 62766.21666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64976186E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

