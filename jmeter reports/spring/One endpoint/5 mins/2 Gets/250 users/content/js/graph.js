/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 50062.0, "series": [{"data": [[0.0, 1.0], [0.1, 15.0], [0.2, 17.0], [0.3, 18.0], [0.4, 18.0], [0.5, 19.0], [0.6, 19.0], [0.7, 19.0], [0.8, 19.0], [0.9, 19.0], [1.0, 19.0], [1.1, 20.0], [1.2, 20.0], [1.3, 20.0], [1.4, 20.0], [1.5, 20.0], [1.6, 20.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 20.0], [2.1, 20.0], [2.2, 20.0], [2.3, 20.0], [2.4, 20.0], [2.5, 20.0], [2.6, 21.0], [2.7, 21.0], [2.8, 21.0], [2.9, 21.0], [3.0, 21.0], [3.1, 21.0], [3.2, 21.0], [3.3, 21.0], [3.4, 21.0], [3.5, 21.0], [3.6, 21.0], [3.7, 21.0], [3.8, 21.0], [3.9, 21.0], [4.0, 21.0], [4.1, 21.0], [4.2, 21.0], [4.3, 21.0], [4.4, 21.0], [4.5, 21.0], [4.6, 21.0], [4.7, 21.0], [4.8, 21.0], [4.9, 21.0], [5.0, 21.0], [5.1, 21.0], [5.2, 21.0], [5.3, 21.0], [5.4, 21.0], [5.5, 21.0], [5.6, 21.0], [5.7, 21.0], [5.8, 21.0], [5.9, 21.0], [6.0, 21.0], [6.1, 21.0], [6.2, 21.0], [6.3, 21.0], [6.4, 21.0], [6.5, 21.0], [6.6, 21.0], [6.7, 22.0], [6.8, 22.0], [6.9, 22.0], [7.0, 22.0], [7.1, 22.0], [7.2, 22.0], [7.3, 22.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 22.0], [7.9, 22.0], [8.0, 22.0], [8.1, 22.0], [8.2, 22.0], [8.3, 22.0], [8.4, 22.0], [8.5, 22.0], [8.6, 22.0], [8.7, 22.0], [8.8, 22.0], [8.9, 22.0], [9.0, 22.0], [9.1, 22.0], [9.2, 22.0], [9.3, 22.0], [9.4, 22.0], [9.5, 22.0], [9.6, 22.0], [9.7, 22.0], [9.8, 22.0], [9.9, 22.0], [10.0, 22.0], [10.1, 22.0], [10.2, 22.0], [10.3, 22.0], [10.4, 22.0], [10.5, 22.0], [10.6, 22.0], [10.7, 22.0], [10.8, 22.0], [10.9, 22.0], [11.0, 22.0], [11.1, 22.0], [11.2, 22.0], [11.3, 22.0], [11.4, 22.0], [11.5, 22.0], [11.6, 22.0], [11.7, 22.0], [11.8, 22.0], [11.9, 22.0], [12.0, 22.0], [12.1, 22.0], [12.2, 22.0], [12.3, 22.0], [12.4, 22.0], [12.5, 22.0], [12.6, 22.0], [12.7, 22.0], [12.8, 22.0], [12.9, 22.0], [13.0, 22.0], [13.1, 22.0], [13.2, 22.0], [13.3, 22.0], [13.4, 22.0], [13.5, 22.0], [13.6, 22.0], [13.7, 22.0], [13.8, 22.0], [13.9, 22.0], [14.0, 22.0], [14.1, 22.0], [14.2, 22.0], [14.3, 22.0], [14.4, 22.0], [14.5, 22.0], [14.6, 22.0], [14.7, 22.0], [14.8, 22.0], [14.9, 22.0], [15.0, 22.0], [15.1, 22.0], [15.2, 22.0], [15.3, 22.0], [15.4, 22.0], [15.5, 22.0], [15.6, 22.0], [15.7, 22.0], [15.8, 22.0], [15.9, 22.0], [16.0, 22.0], [16.1, 22.0], [16.2, 22.0], [16.3, 22.0], [16.4, 22.0], [16.5, 22.0], [16.6, 22.0], [16.7, 22.0], [16.8, 22.0], [16.9, 22.0], [17.0, 23.0], [17.1, 23.0], [17.2, 23.0], [17.3, 23.0], [17.4, 23.0], [17.5, 23.0], [17.6, 23.0], [17.7, 23.0], [17.8, 23.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 23.0], [18.5, 23.0], [18.6, 23.0], [18.7, 23.0], [18.8, 23.0], [18.9, 23.0], [19.0, 23.0], [19.1, 23.0], [19.2, 23.0], [19.3, 23.0], [19.4, 23.0], [19.5, 23.0], [19.6, 23.0], [19.7, 23.0], [19.8, 23.0], [19.9, 23.0], [20.0, 23.0], [20.1, 23.0], [20.2, 23.0], [20.3, 23.0], [20.4, 23.0], [20.5, 23.0], [20.6, 23.0], [20.7, 23.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 23.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 23.0], [22.0, 23.0], [22.1, 23.0], [22.2, 23.0], [22.3, 23.0], [22.4, 23.0], [22.5, 23.0], [22.6, 23.0], [22.7, 23.0], [22.8, 23.0], [22.9, 23.0], [23.0, 23.0], [23.1, 23.0], [23.2, 23.0], [23.3, 23.0], [23.4, 23.0], [23.5, 23.0], [23.6, 23.0], [23.7, 23.0], [23.8, 23.0], [23.9, 23.0], [24.0, 23.0], [24.1, 23.0], [24.2, 23.0], [24.3, 23.0], [24.4, 23.0], [24.5, 23.0], [24.6, 23.0], [24.7, 23.0], [24.8, 23.0], [24.9, 23.0], [25.0, 23.0], [25.1, 23.0], [25.2, 23.0], [25.3, 23.0], [25.4, 23.0], [25.5, 23.0], [25.6, 23.0], [25.7, 23.0], [25.8, 23.0], [25.9, 23.0], [26.0, 23.0], [26.1, 23.0], [26.2, 23.0], [26.3, 23.0], [26.4, 23.0], [26.5, 23.0], [26.6, 23.0], [26.7, 23.0], [26.8, 23.0], [26.9, 23.0], [27.0, 23.0], [27.1, 23.0], [27.2, 23.0], [27.3, 23.0], [27.4, 23.0], [27.5, 23.0], [27.6, 23.0], [27.7, 23.0], [27.8, 23.0], [27.9, 23.0], [28.0, 23.0], [28.1, 23.0], [28.2, 23.0], [28.3, 23.0], [28.4, 23.0], [28.5, 23.0], [28.6, 23.0], [28.7, 23.0], [28.8, 23.0], [28.9, 23.0], [29.0, 23.0], [29.1, 23.0], [29.2, 23.0], [29.3, 23.0], [29.4, 23.0], [29.5, 23.0], [29.6, 23.0], [29.7, 23.0], [29.8, 23.0], [29.9, 23.0], [30.0, 23.0], [30.1, 23.0], [30.2, 23.0], [30.3, 23.0], [30.4, 23.0], [30.5, 23.0], [30.6, 23.0], [30.7, 23.0], [30.8, 23.0], [30.9, 23.0], [31.0, 23.0], [31.1, 23.0], [31.2, 23.0], [31.3, 23.0], [31.4, 23.0], [31.5, 23.0], [31.6, 23.0], [31.7, 23.0], [31.8, 23.0], [31.9, 23.0], [32.0, 23.0], [32.1, 23.0], [32.2, 23.0], [32.3, 23.0], [32.4, 23.0], [32.5, 23.0], [32.6, 23.0], [32.7, 23.0], [32.8, 23.0], [32.9, 23.0], [33.0, 23.0], [33.1, 23.0], [33.2, 23.0], [33.3, 23.0], [33.4, 23.0], [33.5, 23.0], [33.6, 23.0], [33.7, 23.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 23.0], [34.3, 23.0], [34.4, 23.0], [34.5, 23.0], [34.6, 23.0], [34.7, 23.0], [34.8, 23.0], [34.9, 23.0], [35.0, 23.0], [35.1, 23.0], [35.2, 23.0], [35.3, 23.0], [35.4, 23.0], [35.5, 23.0], [35.6, 23.0], [35.7, 23.0], [35.8, 23.0], [35.9, 23.0], [36.0, 23.0], [36.1, 23.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 23.0], [36.6, 23.0], [36.7, 23.0], [36.8, 23.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 23.0], [37.6, 23.0], [37.7, 23.0], [37.8, 24.0], [37.9, 24.0], [38.0, 24.0], [38.1, 24.0], [38.2, 24.0], [38.3, 24.0], [38.4, 24.0], [38.5, 24.0], [38.6, 24.0], [38.7, 24.0], [38.8, 24.0], [38.9, 24.0], [39.0, 24.0], [39.1, 24.0], [39.2, 24.0], [39.3, 24.0], [39.4, 24.0], [39.5, 24.0], [39.6, 24.0], [39.7, 24.0], [39.8, 24.0], [39.9, 24.0], [40.0, 24.0], [40.1, 24.0], [40.2, 24.0], [40.3, 24.0], [40.4, 24.0], [40.5, 24.0], [40.6, 24.0], [40.7, 24.0], [40.8, 24.0], [40.9, 24.0], [41.0, 24.0], [41.1, 24.0], [41.2, 24.0], [41.3, 24.0], [41.4, 24.0], [41.5, 24.0], [41.6, 24.0], [41.7, 24.0], [41.8, 24.0], [41.9, 24.0], [42.0, 24.0], [42.1, 24.0], [42.2, 24.0], [42.3, 24.0], [42.4, 24.0], [42.5, 24.0], [42.6, 24.0], [42.7, 24.0], [42.8, 24.0], [42.9, 24.0], [43.0, 24.0], [43.1, 24.0], [43.2, 24.0], [43.3, 24.0], [43.4, 24.0], [43.5, 24.0], [43.6, 24.0], [43.7, 24.0], [43.8, 24.0], [43.9, 24.0], [44.0, 24.0], [44.1, 24.0], [44.2, 24.0], [44.3, 24.0], [44.4, 24.0], [44.5, 24.0], [44.6, 24.0], [44.7, 24.0], [44.8, 24.0], [44.9, 24.0], [45.0, 24.0], [45.1, 24.0], [45.2, 24.0], [45.3, 24.0], [45.4, 24.0], [45.5, 24.0], [45.6, 24.0], [45.7, 24.0], [45.8, 24.0], [45.9, 24.0], [46.0, 24.0], [46.1, 24.0], [46.2, 24.0], [46.3, 24.0], [46.4, 24.0], [46.5, 24.0], [46.6, 24.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 24.0], [47.3, 24.0], [47.4, 24.0], [47.5, 24.0], [47.6, 24.0], [47.7, 24.0], [47.8, 24.0], [47.9, 24.0], [48.0, 24.0], [48.1, 24.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 24.0], [49.5, 24.0], [49.6, 24.0], [49.7, 24.0], [49.8, 24.0], [49.9, 24.0], [50.0, 24.0], [50.1, 24.0], [50.2, 24.0], [50.3, 24.0], [50.4, 24.0], [50.5, 24.0], [50.6, 24.0], [50.7, 24.0], [50.8, 24.0], [50.9, 24.0], [51.0, 24.0], [51.1, 24.0], [51.2, 24.0], [51.3, 24.0], [51.4, 24.0], [51.5, 24.0], [51.6, 24.0], [51.7, 24.0], [51.8, 24.0], [51.9, 24.0], [52.0, 24.0], [52.1, 24.0], [52.2, 24.0], [52.3, 24.0], [52.4, 24.0], [52.5, 24.0], [52.6, 24.0], [52.7, 24.0], [52.8, 24.0], [52.9, 24.0], [53.0, 24.0], [53.1, 24.0], [53.2, 24.0], [53.3, 24.0], [53.4, 24.0], [53.5, 24.0], [53.6, 24.0], [53.7, 24.0], [53.8, 24.0], [53.9, 24.0], [54.0, 24.0], [54.1, 24.0], [54.2, 24.0], [54.3, 24.0], [54.4, 24.0], [54.5, 24.0], [54.6, 24.0], [54.7, 24.0], [54.8, 24.0], [54.9, 24.0], [55.0, 24.0], [55.1, 24.0], [55.2, 24.0], [55.3, 24.0], [55.4, 24.0], [55.5, 24.0], [55.6, 24.0], [55.7, 24.0], [55.8, 24.0], [55.9, 24.0], [56.0, 24.0], [56.1, 24.0], [56.2, 24.0], [56.3, 24.0], [56.4, 24.0], [56.5, 24.0], [56.6, 24.0], [56.7, 24.0], [56.8, 24.0], [56.9, 24.0], [57.0, 24.0], [57.1, 24.0], [57.2, 24.0], [57.3, 24.0], [57.4, 24.0], [57.5, 24.0], [57.6, 24.0], [57.7, 24.0], [57.8, 24.0], [57.9, 24.0], [58.0, 24.0], [58.1, 24.0], [58.2, 24.0], [58.3, 24.0], [58.4, 24.0], [58.5, 24.0], [58.6, 24.0], [58.7, 24.0], [58.8, 24.0], [58.9, 24.0], [59.0, 24.0], [59.1, 24.0], [59.2, 24.0], [59.3, 24.0], [59.4, 24.0], [59.5, 24.0], [59.6, 24.0], [59.7, 24.0], [59.8, 24.0], [59.9, 25.0], [60.0, 25.0], [60.1, 25.0], [60.2, 25.0], [60.3, 25.0], [60.4, 25.0], [60.5, 25.0], [60.6, 25.0], [60.7, 25.0], [60.8, 25.0], [60.9, 25.0], [61.0, 25.0], [61.1, 25.0], [61.2, 25.0], [61.3, 25.0], [61.4, 25.0], [61.5, 25.0], [61.6, 25.0], [61.7, 25.0], [61.8, 25.0], [61.9, 25.0], [62.0, 25.0], [62.1, 25.0], [62.2, 25.0], [62.3, 25.0], [62.4, 25.0], [62.5, 25.0], [62.6, 25.0], [62.7, 25.0], [62.8, 25.0], [62.9, 25.0], [63.0, 25.0], [63.1, 25.0], [63.2, 25.0], [63.3, 25.0], [63.4, 25.0], [63.5, 25.0], [63.6, 25.0], [63.7, 25.0], [63.8, 25.0], [63.9, 25.0], [64.0, 25.0], [64.1, 25.0], [64.2, 25.0], [64.3, 25.0], [64.4, 25.0], [64.5, 25.0], [64.6, 25.0], [64.7, 25.0], [64.8, 25.0], [64.9, 25.0], [65.0, 25.0], [65.1, 25.0], [65.2, 25.0], [65.3, 25.0], [65.4, 25.0], [65.5, 25.0], [65.6, 25.0], [65.7, 25.0], [65.8, 25.0], [65.9, 25.0], [66.0, 25.0], [66.1, 25.0], [66.2, 25.0], [66.3, 25.0], [66.4, 25.0], [66.5, 25.0], [66.6, 25.0], [66.7, 25.0], [66.8, 25.0], [66.9, 25.0], [67.0, 25.0], [67.1, 25.0], [67.2, 25.0], [67.3, 25.0], [67.4, 25.0], [67.5, 25.0], [67.6, 25.0], [67.7, 25.0], [67.8, 25.0], [67.9, 25.0], [68.0, 25.0], [68.1, 25.0], [68.2, 25.0], [68.3, 25.0], [68.4, 25.0], [68.5, 25.0], [68.6, 25.0], [68.7, 25.0], [68.8, 25.0], [68.9, 25.0], [69.0, 25.0], [69.1, 25.0], [69.2, 25.0], [69.3, 25.0], [69.4, 25.0], [69.5, 25.0], [69.6, 25.0], [69.7, 25.0], [69.8, 25.0], [69.9, 25.0], [70.0, 25.0], [70.1, 25.0], [70.2, 25.0], [70.3, 25.0], [70.4, 25.0], [70.5, 25.0], [70.6, 25.0], [70.7, 25.0], [70.8, 25.0], [70.9, 25.0], [71.0, 25.0], [71.1, 25.0], [71.2, 25.0], [71.3, 25.0], [71.4, 25.0], [71.5, 25.0], [71.6, 25.0], [71.7, 25.0], [71.8, 25.0], [71.9, 25.0], [72.0, 25.0], [72.1, 25.0], [72.2, 25.0], [72.3, 25.0], [72.4, 25.0], [72.5, 25.0], [72.6, 25.0], [72.7, 25.0], [72.8, 25.0], [72.9, 25.0], [73.0, 25.0], [73.1, 25.0], [73.2, 25.0], [73.3, 25.0], [73.4, 25.0], [73.5, 25.0], [73.6, 25.0], [73.7, 25.0], [73.8, 25.0], [73.9, 25.0], [74.0, 25.0], [74.1, 25.0], [74.2, 25.0], [74.3, 25.0], [74.4, 25.0], [74.5, 25.0], [74.6, 26.0], [74.7, 26.0], [74.8, 26.0], [74.9, 26.0], [75.0, 26.0], [75.1, 26.0], [75.2, 26.0], [75.3, 26.0], [75.4, 26.0], [75.5, 26.0], [75.6, 26.0], [75.7, 26.0], [75.8, 26.0], [75.9, 26.0], [76.0, 26.0], [76.1, 26.0], [76.2, 26.0], [76.3, 26.0], [76.4, 26.0], [76.5, 26.0], [76.6, 26.0], [76.7, 26.0], [76.8, 26.0], [76.9, 26.0], [77.0, 26.0], [77.1, 26.0], [77.2, 26.0], [77.3, 26.0], [77.4, 26.0], [77.5, 26.0], [77.6, 26.0], [77.7, 26.0], [77.8, 26.0], [77.9, 26.0], [78.0, 26.0], [78.1, 26.0], [78.2, 26.0], [78.3, 26.0], [78.4, 26.0], [78.5, 26.0], [78.6, 26.0], [78.7, 26.0], [78.8, 26.0], [78.9, 26.0], [79.0, 26.0], [79.1, 26.0], [79.2, 26.0], [79.3, 26.0], [79.4, 26.0], [79.5, 26.0], [79.6, 26.0], [79.7, 26.0], [79.8, 26.0], [79.9, 26.0], [80.0, 26.0], [80.1, 26.0], [80.2, 26.0], [80.3, 26.0], [80.4, 26.0], [80.5, 26.0], [80.6, 26.0], [80.7, 26.0], [80.8, 26.0], [80.9, 26.0], [81.0, 26.0], [81.1, 26.0], [81.2, 26.0], [81.3, 26.0], [81.4, 26.0], [81.5, 26.0], [81.6, 26.0], [81.7, 26.0], [81.8, 26.0], [81.9, 26.0], [82.0, 26.0], [82.1, 26.0], [82.2, 26.0], [82.3, 26.0], [82.4, 26.0], [82.5, 26.0], [82.6, 26.0], [82.7, 26.0], [82.8, 26.0], [82.9, 26.0], [83.0, 26.0], [83.1, 26.0], [83.2, 26.0], [83.3, 26.0], [83.4, 26.0], [83.5, 26.0], [83.6, 26.0], [83.7, 26.0], [83.8, 26.0], [83.9, 26.0], [84.0, 26.0], [84.1, 26.0], [84.2, 26.0], [84.3, 27.0], [84.4, 27.0], [84.5, 27.0], [84.6, 27.0], [84.7, 27.0], [84.8, 27.0], [84.9, 27.0], [85.0, 27.0], [85.1, 27.0], [85.2, 27.0], [85.3, 27.0], [85.4, 27.0], [85.5, 27.0], [85.6, 27.0], [85.7, 27.0], [85.8, 27.0], [85.9, 27.0], [86.0, 27.0], [86.1, 27.0], [86.2, 27.0], [86.3, 27.0], [86.4, 27.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 27.0], [87.6, 27.0], [87.7, 27.0], [87.8, 27.0], [87.9, 27.0], [88.0, 27.0], [88.1, 27.0], [88.2, 27.0], [88.3, 27.0], [88.4, 27.0], [88.5, 27.0], [88.6, 27.0], [88.7, 27.0], [88.8, 27.0], [88.9, 27.0], [89.0, 27.0], [89.1, 27.0], [89.2, 27.0], [89.3, 27.0], [89.4, 27.0], [89.5, 27.0], [89.6, 27.0], [89.7, 28.0], [89.8, 28.0], [89.9, 28.0], [90.0, 28.0], [90.1, 28.0], [90.2, 28.0], [90.3, 28.0], [90.4, 28.0], [90.5, 28.0], [90.6, 28.0], [90.7, 28.0], [90.8, 28.0], [90.9, 28.0], [91.0, 28.0], [91.1, 28.0], [91.2, 28.0], [91.3, 28.0], [91.4, 28.0], [91.5, 28.0], [91.6, 28.0], [91.7, 28.0], [91.8, 28.0], [91.9, 28.0], [92.0, 28.0], [92.1, 28.0], [92.2, 28.0], [92.3, 28.0], [92.4, 28.0], [92.5, 28.0], [92.6, 28.0], [92.7, 28.0], [92.8, 28.0], [92.9, 29.0], [93.0, 29.0], [93.1, 29.0], [93.2, 29.0], [93.3, 29.0], [93.4, 29.0], [93.5, 29.0], [93.6, 29.0], [93.7, 29.0], [93.8, 29.0], [93.9, 29.0], [94.0, 29.0], [94.1, 29.0], [94.2, 29.0], [94.3, 29.0], [94.4, 29.0], [94.5, 29.0], [94.6, 29.0], [94.7, 29.0], [94.8, 29.0], [94.9, 29.0], [95.0, 30.0], [95.1, 30.0], [95.2, 30.0], [95.3, 30.0], [95.4, 30.0], [95.5, 30.0], [95.6, 30.0], [95.7, 30.0], [95.8, 30.0], [95.9, 30.0], [96.0, 30.0], [96.1, 30.0], [96.2, 30.0], [96.3, 31.0], [96.4, 31.0], [96.5, 31.0], [96.6, 31.0], [96.7, 31.0], [96.8, 31.0], [96.9, 31.0], [97.0, 31.0], [97.1, 31.0], [97.2, 32.0], [97.3, 32.0], [97.4, 32.0], [97.5, 32.0], [97.6, 32.0], [97.7, 32.0], [97.8, 33.0], [97.9, 33.0], [98.0, 33.0], [98.1, 33.0], [98.2, 33.0], [98.3, 34.0], [98.4, 34.0], [98.5, 34.0], [98.6, 35.0], [98.7, 35.0], [98.8, 35.0], [98.9, 35.0], [99.0, 36.0], [99.1, 36.0], [99.2, 37.0], [99.3, 37.0], [99.4, 38.0], [99.5, 39.0], [99.6, 40.0], [99.7, 41.0], [99.8, 43.0], [99.9, 47.0]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[0.0, 1.0], [0.1, 15.0], [0.2, 17.0], [0.3, 18.0], [0.4, 18.0], [0.5, 19.0], [0.6, 19.0], [0.7, 19.0], [0.8, 19.0], [0.9, 19.0], [1.0, 19.0], [1.1, 20.0], [1.2, 20.0], [1.3, 20.0], [1.4, 20.0], [1.5, 20.0], [1.6, 20.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 20.0], [2.1, 20.0], [2.2, 20.0], [2.3, 20.0], [2.4, 20.0], [2.5, 20.0], [2.6, 21.0], [2.7, 21.0], [2.8, 21.0], [2.9, 21.0], [3.0, 21.0], [3.1, 21.0], [3.2, 21.0], [3.3, 21.0], [3.4, 21.0], [3.5, 21.0], [3.6, 21.0], [3.7, 21.0], [3.8, 21.0], [3.9, 21.0], [4.0, 21.0], [4.1, 21.0], [4.2, 21.0], [4.3, 21.0], [4.4, 21.0], [4.5, 21.0], [4.6, 21.0], [4.7, 21.0], [4.8, 21.0], [4.9, 21.0], [5.0, 21.0], [5.1, 21.0], [5.2, 21.0], [5.3, 21.0], [5.4, 21.0], [5.5, 21.0], [5.6, 21.0], [5.7, 21.0], [5.8, 21.0], [5.9, 21.0], [6.0, 21.0], [6.1, 21.0], [6.2, 21.0], [6.3, 21.0], [6.4, 21.0], [6.5, 21.0], [6.6, 21.0], [6.7, 22.0], [6.8, 22.0], [6.9, 22.0], [7.0, 22.0], [7.1, 22.0], [7.2, 22.0], [7.3, 22.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 22.0], [7.9, 22.0], [8.0, 22.0], [8.1, 22.0], [8.2, 22.0], [8.3, 22.0], [8.4, 22.0], [8.5, 22.0], [8.6, 22.0], [8.7, 22.0], [8.8, 22.0], [8.9, 22.0], [9.0, 22.0], [9.1, 22.0], [9.2, 22.0], [9.3, 22.0], [9.4, 22.0], [9.5, 22.0], [9.6, 22.0], [9.7, 22.0], [9.8, 22.0], [9.9, 22.0], [10.0, 22.0], [10.1, 22.0], [10.2, 22.0], [10.3, 22.0], [10.4, 22.0], [10.5, 22.0], [10.6, 22.0], [10.7, 22.0], [10.8, 22.0], [10.9, 22.0], [11.0, 22.0], [11.1, 22.0], [11.2, 22.0], [11.3, 22.0], [11.4, 22.0], [11.5, 22.0], [11.6, 22.0], [11.7, 22.0], [11.8, 22.0], [11.9, 22.0], [12.0, 22.0], [12.1, 22.0], [12.2, 22.0], [12.3, 22.0], [12.4, 22.0], [12.5, 22.0], [12.6, 22.0], [12.7, 22.0], [12.8, 22.0], [12.9, 22.0], [13.0, 22.0], [13.1, 22.0], [13.2, 22.0], [13.3, 22.0], [13.4, 22.0], [13.5, 22.0], [13.6, 22.0], [13.7, 22.0], [13.8, 22.0], [13.9, 22.0], [14.0, 22.0], [14.1, 22.0], [14.2, 22.0], [14.3, 22.0], [14.4, 22.0], [14.5, 22.0], [14.6, 22.0], [14.7, 22.0], [14.8, 22.0], [14.9, 22.0], [15.0, 22.0], [15.1, 22.0], [15.2, 22.0], [15.3, 22.0], [15.4, 22.0], [15.5, 22.0], [15.6, 22.0], [15.7, 22.0], [15.8, 22.0], [15.9, 22.0], [16.0, 22.0], [16.1, 22.0], [16.2, 22.0], [16.3, 22.0], [16.4, 22.0], [16.5, 22.0], [16.6, 22.0], [16.7, 22.0], [16.8, 23.0], [16.9, 23.0], [17.0, 23.0], [17.1, 23.0], [17.2, 23.0], [17.3, 23.0], [17.4, 23.0], [17.5, 23.0], [17.6, 23.0], [17.7, 23.0], [17.8, 23.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 23.0], [18.5, 23.0], [18.6, 23.0], [18.7, 23.0], [18.8, 23.0], [18.9, 23.0], [19.0, 23.0], [19.1, 23.0], [19.2, 23.0], [19.3, 23.0], [19.4, 23.0], [19.5, 23.0], [19.6, 23.0], [19.7, 23.0], [19.8, 23.0], [19.9, 23.0], [20.0, 23.0], [20.1, 23.0], [20.2, 23.0], [20.3, 23.0], [20.4, 23.0], [20.5, 23.0], [20.6, 23.0], [20.7, 23.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 23.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 23.0], [22.0, 23.0], [22.1, 23.0], [22.2, 23.0], [22.3, 23.0], [22.4, 23.0], [22.5, 23.0], [22.6, 23.0], [22.7, 23.0], [22.8, 23.0], [22.9, 23.0], [23.0, 23.0], [23.1, 23.0], [23.2, 23.0], [23.3, 23.0], [23.4, 23.0], [23.5, 23.0], [23.6, 23.0], [23.7, 23.0], [23.8, 23.0], [23.9, 23.0], [24.0, 23.0], [24.1, 23.0], [24.2, 23.0], [24.3, 23.0], [24.4, 23.0], [24.5, 23.0], [24.6, 23.0], [24.7, 23.0], [24.8, 23.0], [24.9, 23.0], [25.0, 23.0], [25.1, 23.0], [25.2, 23.0], [25.3, 23.0], [25.4, 23.0], [25.5, 23.0], [25.6, 23.0], [25.7, 23.0], [25.8, 23.0], [25.9, 23.0], [26.0, 23.0], [26.1, 23.0], [26.2, 23.0], [26.3, 23.0], [26.4, 23.0], [26.5, 23.0], [26.6, 23.0], [26.7, 23.0], [26.8, 23.0], [26.9, 23.0], [27.0, 23.0], [27.1, 23.0], [27.2, 23.0], [27.3, 23.0], [27.4, 23.0], [27.5, 23.0], [27.6, 23.0], [27.7, 23.0], [27.8, 23.0], [27.9, 23.0], [28.0, 23.0], [28.1, 23.0], [28.2, 23.0], [28.3, 23.0], [28.4, 23.0], [28.5, 23.0], [28.6, 23.0], [28.7, 23.0], [28.8, 23.0], [28.9, 23.0], [29.0, 23.0], [29.1, 23.0], [29.2, 23.0], [29.3, 23.0], [29.4, 23.0], [29.5, 23.0], [29.6, 23.0], [29.7, 23.0], [29.8, 23.0], [29.9, 23.0], [30.0, 23.0], [30.1, 23.0], [30.2, 23.0], [30.3, 23.0], [30.4, 23.0], [30.5, 23.0], [30.6, 23.0], [30.7, 23.0], [30.8, 23.0], [30.9, 23.0], [31.0, 23.0], [31.1, 23.0], [31.2, 23.0], [31.3, 23.0], [31.4, 23.0], [31.5, 23.0], [31.6, 23.0], [31.7, 23.0], [31.8, 23.0], [31.9, 23.0], [32.0, 23.0], [32.1, 23.0], [32.2, 23.0], [32.3, 23.0], [32.4, 23.0], [32.5, 23.0], [32.6, 23.0], [32.7, 23.0], [32.8, 23.0], [32.9, 23.0], [33.0, 23.0], [33.1, 23.0], [33.2, 23.0], [33.3, 23.0], [33.4, 23.0], [33.5, 23.0], [33.6, 23.0], [33.7, 23.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 23.0], [34.3, 23.0], [34.4, 23.0], [34.5, 23.0], [34.6, 23.0], [34.7, 23.0], [34.8, 23.0], [34.9, 23.0], [35.0, 23.0], [35.1, 23.0], [35.2, 23.0], [35.3, 23.0], [35.4, 23.0], [35.5, 23.0], [35.6, 23.0], [35.7, 23.0], [35.8, 23.0], [35.9, 23.0], [36.0, 23.0], [36.1, 23.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 23.0], [36.6, 23.0], [36.7, 23.0], [36.8, 23.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 23.0], [37.6, 24.0], [37.7, 24.0], [37.8, 24.0], [37.9, 24.0], [38.0, 24.0], [38.1, 24.0], [38.2, 24.0], [38.3, 24.0], [38.4, 24.0], [38.5, 24.0], [38.6, 24.0], [38.7, 24.0], [38.8, 24.0], [38.9, 24.0], [39.0, 24.0], [39.1, 24.0], [39.2, 24.0], [39.3, 24.0], [39.4, 24.0], [39.5, 24.0], [39.6, 24.0], [39.7, 24.0], [39.8, 24.0], [39.9, 24.0], [40.0, 24.0], [40.1, 24.0], [40.2, 24.0], [40.3, 24.0], [40.4, 24.0], [40.5, 24.0], [40.6, 24.0], [40.7, 24.0], [40.8, 24.0], [40.9, 24.0], [41.0, 24.0], [41.1, 24.0], [41.2, 24.0], [41.3, 24.0], [41.4, 24.0], [41.5, 24.0], [41.6, 24.0], [41.7, 24.0], [41.8, 24.0], [41.9, 24.0], [42.0, 24.0], [42.1, 24.0], [42.2, 24.0], [42.3, 24.0], [42.4, 24.0], [42.5, 24.0], [42.6, 24.0], [42.7, 24.0], [42.8, 24.0], [42.9, 24.0], [43.0, 24.0], [43.1, 24.0], [43.2, 24.0], [43.3, 24.0], [43.4, 24.0], [43.5, 24.0], [43.6, 24.0], [43.7, 24.0], [43.8, 24.0], [43.9, 24.0], [44.0, 24.0], [44.1, 24.0], [44.2, 24.0], [44.3, 24.0], [44.4, 24.0], [44.5, 24.0], [44.6, 24.0], [44.7, 24.0], [44.8, 24.0], [44.9, 24.0], [45.0, 24.0], [45.1, 24.0], [45.2, 24.0], [45.3, 24.0], [45.4, 24.0], [45.5, 24.0], [45.6, 24.0], [45.7, 24.0], [45.8, 24.0], [45.9, 24.0], [46.0, 24.0], [46.1, 24.0], [46.2, 24.0], [46.3, 24.0], [46.4, 24.0], [46.5, 24.0], [46.6, 24.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 24.0], [47.3, 24.0], [47.4, 24.0], [47.5, 24.0], [47.6, 24.0], [47.7, 24.0], [47.8, 24.0], [47.9, 24.0], [48.0, 24.0], [48.1, 24.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 24.0], [49.5, 24.0], [49.6, 24.0], [49.7, 24.0], [49.8, 24.0], [49.9, 24.0], [50.0, 24.0], [50.1, 24.0], [50.2, 24.0], [50.3, 24.0], [50.4, 24.0], [50.5, 24.0], [50.6, 24.0], [50.7, 24.0], [50.8, 24.0], [50.9, 24.0], [51.0, 24.0], [51.1, 24.0], [51.2, 24.0], [51.3, 24.0], [51.4, 24.0], [51.5, 24.0], [51.6, 24.0], [51.7, 24.0], [51.8, 24.0], [51.9, 24.0], [52.0, 24.0], [52.1, 24.0], [52.2, 24.0], [52.3, 24.0], [52.4, 24.0], [52.5, 24.0], [52.6, 24.0], [52.7, 24.0], [52.8, 24.0], [52.9, 24.0], [53.0, 24.0], [53.1, 24.0], [53.2, 24.0], [53.3, 24.0], [53.4, 24.0], [53.5, 24.0], [53.6, 24.0], [53.7, 24.0], [53.8, 24.0], [53.9, 24.0], [54.0, 24.0], [54.1, 24.0], [54.2, 24.0], [54.3, 24.0], [54.4, 24.0], [54.5, 24.0], [54.6, 24.0], [54.7, 24.0], [54.8, 24.0], [54.9, 24.0], [55.0, 24.0], [55.1, 24.0], [55.2, 24.0], [55.3, 24.0], [55.4, 24.0], [55.5, 24.0], [55.6, 24.0], [55.7, 24.0], [55.8, 24.0], [55.9, 24.0], [56.0, 24.0], [56.1, 24.0], [56.2, 24.0], [56.3, 24.0], [56.4, 24.0], [56.5, 24.0], [56.6, 24.0], [56.7, 24.0], [56.8, 24.0], [56.9, 24.0], [57.0, 24.0], [57.1, 24.0], [57.2, 24.0], [57.3, 24.0], [57.4, 24.0], [57.5, 24.0], [57.6, 24.0], [57.7, 24.0], [57.8, 24.0], [57.9, 24.0], [58.0, 24.0], [58.1, 24.0], [58.2, 24.0], [58.3, 24.0], [58.4, 24.0], [58.5, 24.0], [58.6, 24.0], [58.7, 24.0], [58.8, 24.0], [58.9, 24.0], [59.0, 24.0], [59.1, 24.0], [59.2, 24.0], [59.3, 24.0], [59.4, 24.0], [59.5, 24.0], [59.6, 24.0], [59.7, 25.0], [59.8, 25.0], [59.9, 25.0], [60.0, 25.0], [60.1, 25.0], [60.2, 25.0], [60.3, 25.0], [60.4, 25.0], [60.5, 25.0], [60.6, 25.0], [60.7, 25.0], [60.8, 25.0], [60.9, 25.0], [61.0, 25.0], [61.1, 25.0], [61.2, 25.0], [61.3, 25.0], [61.4, 25.0], [61.5, 25.0], [61.6, 25.0], [61.7, 25.0], [61.8, 25.0], [61.9, 25.0], [62.0, 25.0], [62.1, 25.0], [62.2, 25.0], [62.3, 25.0], [62.4, 25.0], [62.5, 25.0], [62.6, 25.0], [62.7, 25.0], [62.8, 25.0], [62.9, 25.0], [63.0, 25.0], [63.1, 25.0], [63.2, 25.0], [63.3, 25.0], [63.4, 25.0], [63.5, 25.0], [63.6, 25.0], [63.7, 25.0], [63.8, 25.0], [63.9, 25.0], [64.0, 25.0], [64.1, 25.0], [64.2, 25.0], [64.3, 25.0], [64.4, 25.0], [64.5, 25.0], [64.6, 25.0], [64.7, 25.0], [64.8, 25.0], [64.9, 25.0], [65.0, 25.0], [65.1, 25.0], [65.2, 25.0], [65.3, 25.0], [65.4, 25.0], [65.5, 25.0], [65.6, 25.0], [65.7, 25.0], [65.8, 25.0], [65.9, 25.0], [66.0, 25.0], [66.1, 25.0], [66.2, 25.0], [66.3, 25.0], [66.4, 25.0], [66.5, 25.0], [66.6, 25.0], [66.7, 25.0], [66.8, 25.0], [66.9, 25.0], [67.0, 25.0], [67.1, 25.0], [67.2, 25.0], [67.3, 25.0], [67.4, 25.0], [67.5, 25.0], [67.6, 25.0], [67.7, 25.0], [67.8, 25.0], [67.9, 25.0], [68.0, 25.0], [68.1, 25.0], [68.2, 25.0], [68.3, 25.0], [68.4, 25.0], [68.5, 25.0], [68.6, 25.0], [68.7, 25.0], [68.8, 25.0], [68.9, 25.0], [69.0, 25.0], [69.1, 25.0], [69.2, 25.0], [69.3, 25.0], [69.4, 25.0], [69.5, 25.0], [69.6, 25.0], [69.7, 25.0], [69.8, 25.0], [69.9, 25.0], [70.0, 25.0], [70.1, 25.0], [70.2, 25.0], [70.3, 25.0], [70.4, 25.0], [70.5, 25.0], [70.6, 25.0], [70.7, 25.0], [70.8, 25.0], [70.9, 25.0], [71.0, 25.0], [71.1, 25.0], [71.2, 25.0], [71.3, 25.0], [71.4, 25.0], [71.5, 25.0], [71.6, 25.0], [71.7, 25.0], [71.8, 25.0], [71.9, 25.0], [72.0, 25.0], [72.1, 25.0], [72.2, 25.0], [72.3, 25.0], [72.4, 25.0], [72.5, 25.0], [72.6, 25.0], [72.7, 25.0], [72.8, 25.0], [72.9, 25.0], [73.0, 25.0], [73.1, 25.0], [73.2, 25.0], [73.3, 25.0], [73.4, 25.0], [73.5, 25.0], [73.6, 25.0], [73.7, 25.0], [73.8, 25.0], [73.9, 25.0], [74.0, 25.0], [74.1, 25.0], [74.2, 25.0], [74.3, 25.0], [74.4, 25.0], [74.5, 26.0], [74.6, 26.0], [74.7, 26.0], [74.8, 26.0], [74.9, 26.0], [75.0, 26.0], [75.1, 26.0], [75.2, 26.0], [75.3, 26.0], [75.4, 26.0], [75.5, 26.0], [75.6, 26.0], [75.7, 26.0], [75.8, 26.0], [75.9, 26.0], [76.0, 26.0], [76.1, 26.0], [76.2, 26.0], [76.3, 26.0], [76.4, 26.0], [76.5, 26.0], [76.6, 26.0], [76.7, 26.0], [76.8, 26.0], [76.9, 26.0], [77.0, 26.0], [77.1, 26.0], [77.2, 26.0], [77.3, 26.0], [77.4, 26.0], [77.5, 26.0], [77.6, 26.0], [77.7, 26.0], [77.8, 26.0], [77.9, 26.0], [78.0, 26.0], [78.1, 26.0], [78.2, 26.0], [78.3, 26.0], [78.4, 26.0], [78.5, 26.0], [78.6, 26.0], [78.7, 26.0], [78.8, 26.0], [78.9, 26.0], [79.0, 26.0], [79.1, 26.0], [79.2, 26.0], [79.3, 26.0], [79.4, 26.0], [79.5, 26.0], [79.6, 26.0], [79.7, 26.0], [79.8, 26.0], [79.9, 26.0], [80.0, 26.0], [80.1, 26.0], [80.2, 26.0], [80.3, 26.0], [80.4, 26.0], [80.5, 26.0], [80.6, 26.0], [80.7, 26.0], [80.8, 26.0], [80.9, 26.0], [81.0, 26.0], [81.1, 26.0], [81.2, 26.0], [81.3, 26.0], [81.4, 26.0], [81.5, 26.0], [81.6, 26.0], [81.7, 26.0], [81.8, 26.0], [81.9, 26.0], [82.0, 26.0], [82.1, 26.0], [82.2, 26.0], [82.3, 26.0], [82.4, 26.0], [82.5, 26.0], [82.6, 26.0], [82.7, 26.0], [82.8, 26.0], [82.9, 26.0], [83.0, 26.0], [83.1, 26.0], [83.2, 26.0], [83.3, 26.0], [83.4, 26.0], [83.5, 26.0], [83.6, 26.0], [83.7, 26.0], [83.8, 26.0], [83.9, 26.0], [84.0, 26.0], [84.1, 26.0], [84.2, 27.0], [84.3, 27.0], [84.4, 27.0], [84.5, 27.0], [84.6, 27.0], [84.7, 27.0], [84.8, 27.0], [84.9, 27.0], [85.0, 27.0], [85.1, 27.0], [85.2, 27.0], [85.3, 27.0], [85.4, 27.0], [85.5, 27.0], [85.6, 27.0], [85.7, 27.0], [85.8, 27.0], [85.9, 27.0], [86.0, 27.0], [86.1, 27.0], [86.2, 27.0], [86.3, 27.0], [86.4, 27.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 27.0], [87.6, 27.0], [87.7, 27.0], [87.8, 27.0], [87.9, 27.0], [88.0, 27.0], [88.1, 27.0], [88.2, 27.0], [88.3, 27.0], [88.4, 27.0], [88.5, 27.0], [88.6, 27.0], [88.7, 27.0], [88.8, 27.0], [88.9, 27.0], [89.0, 27.0], [89.1, 27.0], [89.2, 27.0], [89.3, 27.0], [89.4, 27.0], [89.5, 27.0], [89.6, 27.0], [89.7, 28.0], [89.8, 28.0], [89.9, 28.0], [90.0, 28.0], [90.1, 28.0], [90.2, 28.0], [90.3, 28.0], [90.4, 28.0], [90.5, 28.0], [90.6, 28.0], [90.7, 28.0], [90.8, 28.0], [90.9, 28.0], [91.0, 28.0], [91.1, 28.0], [91.2, 28.0], [91.3, 28.0], [91.4, 28.0], [91.5, 28.0], [91.6, 28.0], [91.7, 28.0], [91.8, 28.0], [91.9, 28.0], [92.0, 28.0], [92.1, 28.0], [92.2, 28.0], [92.3, 28.0], [92.4, 28.0], [92.5, 28.0], [92.6, 28.0], [92.7, 28.0], [92.8, 28.0], [92.9, 29.0], [93.0, 29.0], [93.1, 29.0], [93.2, 29.0], [93.3, 29.0], [93.4, 29.0], [93.5, 29.0], [93.6, 29.0], [93.7, 29.0], [93.8, 29.0], [93.9, 29.0], [94.0, 29.0], [94.1, 29.0], [94.2, 29.0], [94.3, 29.0], [94.4, 29.0], [94.5, 29.0], [94.6, 29.0], [94.7, 29.0], [94.8, 29.0], [94.9, 29.0], [95.0, 30.0], [95.1, 30.0], [95.2, 30.0], [95.3, 30.0], [95.4, 30.0], [95.5, 30.0], [95.6, 30.0], [95.7, 30.0], [95.8, 30.0], [95.9, 30.0], [96.0, 30.0], [96.1, 30.0], [96.2, 30.0], [96.3, 31.0], [96.4, 31.0], [96.5, 31.0], [96.6, 31.0], [96.7, 31.0], [96.8, 31.0], [96.9, 31.0], [97.0, 31.0], [97.1, 31.0], [97.2, 32.0], [97.3, 32.0], [97.4, 32.0], [97.5, 32.0], [97.6, 32.0], [97.7, 32.0], [97.8, 33.0], [97.9, 33.0], [98.0, 33.0], [98.1, 33.0], [98.2, 33.0], [98.3, 34.0], [98.4, 34.0], [98.5, 34.0], [98.6, 34.0], [98.7, 35.0], [98.8, 35.0], [98.9, 35.0], [99.0, 36.0], [99.1, 36.0], [99.2, 37.0], [99.3, 37.0], [99.4, 38.0], [99.5, 39.0], [99.6, 40.0], [99.7, 41.0], [99.8, 43.0], [99.9, 47.0]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2833765.0, "series": [{"data": [[0.0, 2833765.0], [1300.0, 2.0], [1400.0, 22.0], [2400.0, 5.0], [2500.0, 3.0], [2800.0, 6.0], [2700.0, 2.0], [3400.0, 6.0], [3500.0, 14.0], [4600.0, 16.0], [4500.0, 1.0], [4700.0, 21.0], [5600.0, 1.0], [5500.0, 1.0], [5800.0, 2.0], [5700.0, 2.0], [6000.0, 3.0], [6100.0, 1.0], [5900.0, 3.0], [6200.0, 2.0], [6300.0, 2.0], [6600.0, 1.0], [6400.0, 1.0], [7100.0, 1.0], [7800.0, 20.0], [8800.0, 18.0], [9200.0, 20.0], [9000.0, 1.0], [9300.0, 3.0], [9400.0, 2.0], [12600.0, 17.0], [14500.0, 2.0], [16300.0, 2.0], [16200.0, 3.0], [16100.0, 2.0], [16000.0, 2.0], [16800.0, 3.0], [16700.0, 2.0], [16500.0, 2.0], [16400.0, 3.0], [16600.0, 1.0], [100.0, 60.0], [25900.0, 1.0], [27400.0, 2.0], [27300.0, 1.0], [47000.0, 1.0], [47100.0, 3.0], [46900.0, 2.0], [46700.0, 2.0], [46800.0, 1.0], [46600.0, 2.0], [46500.0, 2.0], [46300.0, 2.0], [46400.0, 1.0], [50000.0, 55.0], [300.0, 18.0], [500.0, 3.0]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[0.0, 2781946.0], [800.0, 1.0], [1200.0, 3.0], [1300.0, 4.0], [1400.0, 14.0], [2400.0, 2.0], [2500.0, 5.0], [2600.0, 3.0], [2800.0, 17.0], [2700.0, 2.0], [3000.0, 1.0], [3100.0, 3.0], [3400.0, 4.0], [3500.0, 12.0], [4600.0, 25.0], [4700.0, 21.0], [5600.0, 3.0], [5500.0, 4.0], [5700.0, 4.0], [5800.0, 3.0], [6000.0, 4.0], [5900.0, 10.0], [6100.0, 2.0], [6300.0, 1.0], [6400.0, 2.0], [7100.0, 2.0], [7800.0, 22.0], [8800.0, 24.0], [9200.0, 18.0], [9300.0, 2.0], [9800.0, 1.0], [12600.0, 25.0], [14500.0, 1.0], [16300.0, 2.0], [16200.0, 1.0], [16100.0, 2.0], [16000.0, 1.0], [15900.0, 4.0], [16800.0, 1.0], [16600.0, 3.0], [16700.0, 2.0], [16500.0, 1.0], [16400.0, 1.0], [100.0, 49.0], [26300.0, 2.0], [26100.0, 1.0], [47000.0, 2.0], [47100.0, 2.0], [46900.0, 1.0], [46800.0, 2.0], [46700.0, 2.0], [46600.0, 1.0], [46400.0, 2.0], [46500.0, 1.0], [46300.0, 2.0], [46200.0, 1.0], [50000.0, 76.0], [300.0, 26.0], [500.0, 3.0]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 50000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 52.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5615864.0, "series": [{"data": [[0.0, 5615864.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 52.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 477.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 131.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 222.61113310634332, "minX": 1.65235142E12, "maxY": 250.0, "series": [{"data": [[1.65235157E12, 250.0], [1.65235153E12, 250.0], [1.6523517E12, 250.0], [1.65235165E12, 250.0], [1.65235148E12, 250.0], [1.65235161E12, 250.0], [1.65235144E12, 250.0], [1.65235156E12, 250.0], [1.65235143E12, 250.0], [1.65235169E12, 250.0], [1.65235152E12, 250.0], [1.65235164E12, 250.0], [1.65235151E12, 250.0], [1.6523516E12, 250.0], [1.65235147E12, 250.0], [1.65235172E12, 249.48541605557458], [1.65235159E12, 250.0], [1.65235142E12, 222.61113310634332], [1.65235168E12, 250.0], [1.65235155E12, 250.0], [1.65235167E12, 250.0], [1.6523515E12, 250.0], [1.65235163E12, 250.0], [1.65235146E12, 250.0], [1.65235158E12, 250.0], [1.65235171E12, 250.0], [1.65235154E12, 250.0], [1.65235149E12, 250.0], [1.65235166E12, 250.0], [1.65235145E12, 250.0], [1.65235162E12, 250.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235172E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 3.0, "maxY": 9816.0, "series": [{"data": [[3.0, 7313.666666666667], [6.0, 9339.5], [24.0, 3489.0], [25.0, 3490.0], [26.0, 3489.0], [31.0, 3493.4], [32.0, 3504.0], [35.0, 3507.0], [34.0, 3504.0], [37.0, 3508.0], [36.0, 3510.6666666666665], [41.0, 3513.3333333333335], [40.0, 3509.0], [57.0, 31.16666666666667], [58.0, 20.333333333333332], [60.0, 11.142857142857142], [61.0, 19.333333333333332], [62.0, 10.499999999999998], [64.0, 4.249999999999999], [66.0, 6.571428571428571], [67.0, 20.6], [68.0, 2.3333333333333335], [70.0, 3.111111111111111], [71.0, 4.0], [73.0, 14.999999999999998], [74.0, 5.250000000000001], [75.0, 2.25], [72.0, 11.999999999999998], [76.0, 4.166666666666666], [77.0, 1.5], [78.0, 2.6], [79.0, 3.0], [80.0, 7.333333333333333], [82.0, 2.375], [83.0, 1.5], [84.0, 2.428571428571429], [85.0, 2.5], [86.0, 1.4], [87.0, 1.8333333333333333], [88.0, 4.222222222222222], [89.0, 3.0], [90.0, 2.818181818181818], [91.0, 5.0], [92.0, 2.5555555555555554], [93.0, 2.0], [94.0, 2.4], [95.0, 2.6666666666666665], [96.0, 1.9333333333333333], [97.0, 1.1111111111111112], [99.0, 1.5], [100.0, 1.722222222222222], [101.0, 3.0], [102.0, 2.583333333333333], [103.0, 1.0], [104.0, 2.4210526315789473], [108.0, 10.8], [109.0, 26.666666666666668], [110.0, 14.7], [111.0, 2.0], [112.0, 8.75], [113.0, 3.166666666666667], [114.0, 6.6499999999999995], [115.0, 2.5], [116.0, 12.0], [117.0, 3.0], [118.0, 7.6], [119.0, 4.0], [120.0, 2.888888888888889], [122.0, 5.928571428571429], [123.0, 9.0], [124.0, 5.0], [126.0, 4.111111111111111], [127.0, 3.4], [128.0, 5.333333333333335], [129.0, 4.5], [130.0, 4.0], [131.0, 4.25], [132.0, 5.6], [134.0, 4.666666666666667], [135.0, 6.374999999999999], [136.0, 7.571428571428572], [137.0, 4.75], [138.0, 5.75], [140.0, 5.111111111111111], [142.0, 6.4], [141.0, 1.0], [143.0, 5.0], [144.0, 5.157894736842105], [145.0, 6.0], [146.0, 5.6923076923076925], [147.0, 4.0], [148.0, 3.076923076923077], [149.0, 3.8888888888888884], [150.0, 3.5999999999999996], [151.0, 8.5], [152.0, 5.375], [153.0, 4.833333333333334], [154.0, 4.777777777777778], [155.0, 5.75], [156.0, 3.4999999999999996], [157.0, 6.5], [158.0, 6.181818181818182], [159.0, 3.5555555555555562], [160.0, 5.0], [161.0, 3.25], [162.0, 3.0], [163.0, 1.75], [164.0, 4.777777777777778], [165.0, 6.0], [166.0, 4.285714285714286], [167.0, 3.75], [168.0, 4.615384615384616], [169.0, 3.4], [170.0, 7.076923076923076], [171.0, 3.0], [172.0, 5.583333333333333], [174.0, 19.73333333333333], [176.0, 6.636363636363637], [177.0, 8.0], [178.0, 8.714285714285715], [182.0, 16.5], [183.0, 13.75], [181.0, 10.846153846153845], [180.0, 8.8], [184.0, 6.624999999999999], [185.0, 5.75], [186.0, 3.727272727272727], [187.0, 27.0], [188.0, 5.461538461538461], [189.0, 4.333333333333333], [190.0, 6.666666666666667], [191.0, 4.75], [192.0, 5.7272727272727275], [194.0, 4.9], [195.0, 4.833333333333334], [196.0, 6.133333333333334], [197.0, 4.428571428571429], [198.0, 8.333333333333332], [199.0, 5.333333333333333], [200.0, 6.076923076923077], [201.0, 5.75], [202.0, 5.75], [203.0, 6.0], [204.0, 7.0], [205.0, 9.5], [206.0, 8.666666666666666], [208.0, 8.75], [209.0, 11.0], [210.0, 14.153846153846155], [211.0, 9.5], [212.0, 10.57142857142857], [213.0, 9.0], [214.0, 10.5], [215.0, 10.833333333333334], [216.0, 11.777777777777777], [217.0, 13.0], [218.0, 11.857142857142858], [219.0, 13.600000000000001], [220.0, 23.6], [221.0, 13.0], [222.0, 12.0], [223.0, 13.333333333333334], [224.0, 13.230769230769232], [225.0, 11.0], [226.0, 14.444444444444445], [228.0, 15.333333333333334], [229.0, 15.142857142857144], [230.0, 16.0], [231.0, 19.0], [232.0, 16.727272727272727], [233.0, 18.25], [234.0, 18.700000000000003], [235.0, 20.049999999999997], [236.0, 23.0], [239.0, 19.142857142857142], [237.0, 17.5], [243.0, 38.7], [244.0, 24.0], [246.0, 21.055555555555554], [247.0, 8.333333333333334], [242.0, 19.700000000000003], [241.0, 20.066666666666666], [240.0, 23.0], [248.0, 17.0], [249.0, 7.428571428571429], [250.0, 8.11111111111111], [251.0, 11.454545454545453], [252.0, 11.26666666666667], [253.0, 11.375], [254.0, 12.692307692307692], [258.0, 13.7], [256.0, 12.333333333333334], [259.0, 14.714285714285714], [268.0, 22.0], [269.0, 20.57142857142857], [270.0, 22.76923076923077], [271.0, 23.0], [260.0, 14.899999999999999], [261.0, 16.666666666666668], [262.0, 19.1], [263.0, 17.375], [264.0, 21.666666666666668], [265.0, 21.6], [266.0, 23.666666666666668], [267.0, 19.6], [274.0, 25.833333333333332], [272.0, 24.666666666666664], [275.0, 28.0], [284.0, 28.083333333333336], [285.0, 30.857142857142858], [286.0, 29.555555555555557], [287.0, 30.666666666666668], [276.0, 26.8695652173913], [277.0, 24.625], [278.0, 28.833333333333332], [279.0, 27.0], [280.0, 25.941176470588232], [281.0, 25.0], [282.0, 26.5], [283.0, 29.666666666666668], [289.0, 28.666666666666668], [288.0, 31.037037037037038], [290.0, 29.25], [291.0, 30.166666666666668], [292.0, 31.714285714285715], [294.0, 33.00000000000001], [295.0, 32.857142857142854], [296.0, 32.72727272727273], [297.0, 32.0], [302.0, 33.0], [303.0, 33.882352941176464], [300.0, 34.63636363636363], [301.0, 33.375], [298.0, 32.800000000000004], [299.0, 32.0], [305.0, 35.166666666666664], [304.0, 34.625], [306.0, 35.0], [307.0, 37.0], [308.0, 35.285714285714285], [309.0, 32.5], [310.0, 38.444444444444436], [311.0, 36.0], [312.0, 38.111111111111114], [318.0, 39.142857142857146], [319.0, 37.333333333333336], [316.0, 39.0], [317.0, 38.75], [313.0, 37.6], [314.0, 36.64285714285714], [315.0, 37.0], [321.0, 38.333333333333336], [320.0, 40.12499999999999], [322.0, 38.888888888888886], [323.0, 39.857142857142854], [324.0, 40.25], [325.0, 39.769230769230774], [326.0, 40.285714285714285], [327.0, 40.5], [328.0, 39.31249999999999], [334.0, 42.0909090909091], [335.0, 42.26666666666666], [332.0, 44.666666666666664], [333.0, 43.0], [329.0, 46.0], [330.0, 40.71428571428571], [331.0, 39.666666666666664], [336.0, 40.333333333333336], [337.0, 39.81249999999999], [340.0, 40.07692307692308], [339.0, 39.3125], [342.0, 36.41176470588235], [343.0, 38.42857142857143], [344.0, 38.15384615384615], [351.0, 33.0], [348.0, 36.15384615384615], [349.0, 35.0], [350.0, 34.06666666666668], [346.0, 38.33333333333333], [347.0, 35.0], [341.0, 40.0], [353.0, 38.666666666666664], [352.0, 35.36363636363637], [354.0, 30.500000000000004], [355.0, 31.857142857142854], [356.0, 27.937500000000004], [358.0, 27.58823529411765], [359.0, 29.714285714285715], [360.0, 28.5], [366.0, 29.0], [367.0, 29.72727272727273], [364.0, 28.0], [365.0, 29.42857142857143], [361.0, 30.833333333333332], [362.0, 28.8], [363.0, 27.8], [369.0, 31.307692307692307], [368.0, 30.333333333333332], [370.0, 33.66666666666667], [371.0, 32.99999999999999], [372.0, 33.52941176470589], [373.0, 33.714285714285715], [374.0, 32.06666666666667], [375.0, 34.0], [376.0, 34.92307692307692], [382.0, 34.25], [383.0, 33.17391304347826], [380.0, 39.5], [381.0, 36.16], [377.0, 40.0], [378.0, 39.22222222222222], [379.0, 36.2], [385.0, 35.8], [384.0, 36.300000000000004], [386.0, 34.416666666666664], [387.0, 34.333333333333336], [388.0, 33.4], [389.0, 33.333333333333336], [390.0, 35.99999999999999], [391.0, 32.666666666666664], [392.0, 39.86666666666666], [398.0, 36.26666666666666], [399.0, 36.73333333333333], [396.0, 37.33333333333333], [397.0, 36.75], [393.0, 37.28571428571429], [394.0, 36.0], [395.0, 33.833333333333336], [401.0, 34.75], [402.0, 36.0], [403.0, 31.333333333333332], [412.0, 44.375], [413.0, 44.99999999999999], [414.0, 40.75000000000001], [415.0, 51.2], [404.0, 40.22222222222223], [405.0, 43.0], [406.0, 38.9], [407.0, 40.714285714285715], [400.0, 32.0], [408.0, 39.958333333333336], [410.0, 42.6], [409.0, 31.0], [411.0, 37.5], [417.0, 44.666666666666664], [416.0, 43.63157894736841], [418.0, 46.0], [428.0, 41.76923076923077], [430.0, 46.84615384615385], [429.0, 30.0], [420.0, 43.699999999999996], [421.0, 46.0], [422.0, 42.875], [423.0, 46.0], [424.0, 42.153846153846146], [425.0, 43.5], [427.0, 32.0], [433.0, 43.888888888888886], [432.0, 44.705882352941174], [434.0, 47.375], [435.0, 47.38888888888889], [437.0, 47.5], [436.0, 30.0], [438.0, 47.47368421052632], [439.0, 49.625], [440.0, 37.333333333333336], [446.0, 50.0], [447.0, 31.0], [444.0, 50.12], [445.0, 43.38888888888889], [441.0, 44.083333333333336], [442.0, 49.0], [443.0, 29.0], [450.0, 43.285714285714285], [448.0, 47.0625], [451.0, 49.25], [460.0, 46.363636363636374], [462.0, 43.99999999999999], [463.0, 48.36363636363636], [452.0, 49.17647058823529], [453.0, 44.55555555555556], [454.0, 47.07692307692308], [455.0, 33.5], [456.0, 44.0], [457.0, 46.0], [458.0, 42.66666666666667], [459.0, 40.99999999999999], [467.0, 48.44827586206897], [465.0, 45.857142857142854], [464.0, 47.25], [466.0, 30.0], [470.0, 47.06666666666667], [469.0, 28.666666666666668], [471.0, 50.0], [474.0, 49.4375], [475.0, 53.42857142857143], [476.0, 45.857142857142854], [477.0, 54.5], [478.0, 42.53846153846153], [479.0, 49.0], [473.0, 29.0], [472.0, 29.0], [481.0, 38.78947368421052], [480.0, 50.09090909090909], [482.0, 45.9], [483.0, 49.0], [484.0, 45.806451612903224], [485.0, 51.333333333333336], [486.0, 48.81250000000001], [487.0, 26.2], [488.0, 47.0], [494.0, 48.84615384615385], [495.0, 43.45454545454545], [492.0, 45.82758620689655], [493.0, 45.25], [489.0, 41.0], [490.0, 51.523809523809526], [491.0, 44.0], [496.0, 52.05555555555556], [497.0, 49.42857142857143], [498.0, 41.217391304347835], [499.0, 51.772727272727266], [500.0, 26.33540654675271]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[499.7284560900706, 26.374727518946568]], "isOverall": false, "label": "Get Member 1-Aggregated", "isController": false}, {"data": [[6.0, 9816.0], [24.0, 3490.0], [31.0, 3494.8], [34.0, 3507.0], [41.0, 3516.125], [40.0, 3511.0], [44.0, 8.333333333333334], [47.0, 6.0], [49.0, 13.0], [51.0, 5.0], [53.0, 4.0], [55.0, 2.0], [54.0, 6.0], [57.0, 26.444444444444443], [58.0, 23.625], [59.0, 13.0], [60.0, 10.875], [61.0, 4.428571428571429], [62.0, 2.7272727272727275], [63.0, 6.0], [64.0, 3.5833333333333335], [65.0, 2.5], [66.0, 3.8571428571428568], [67.0, 16.0], [68.0, 3.090909090909091], [69.0, 1.3333333333333333], [70.0, 2.3], [73.0, 14.0], [74.0, 3.166666666666667], [75.0, 8.75], [72.0, 12.3125], [76.0, 4.090909090909091], [78.0, 4.888888888888889], [79.0, 2.6666666666666665], [77.0, 8.666666666666666], [80.0, 6.055555555555555], [82.0, 1.4], [83.0, 1.5], [84.0, 3.7777777777777777], [86.0, 4.333333333333334], [87.0, 3.75], [85.0, 12.0], [88.0, 4.6], [89.0, 9.6], [90.0, 8.466666666666667], [91.0, 1.6666666666666667], [92.0, 1.7499999999999998], [93.0, 8.75], [94.0, 3.1], [95.0, 2.0], [96.0, 5.307692307692308], [97.0, 4.875], [99.0, 7.166666666666667], [100.0, 2.3333333333333335], [101.0, 5.285714285714286], [102.0, 3.428571428571429], [103.0, 2.0], [104.0, 2.1], [107.0, 13.5], [106.0, 14.0], [105.0, 13.75], [108.0, 14.0], [109.0, 15.5], [110.0, 18.25], [111.0, 7.6], [112.0, 2.75], [113.0, 3.142857142857143], [114.0, 8.11111111111111], [115.0, 6.375], [116.0, 9.0], [117.0, 4.4], [118.0, 2.1333333333333333], [119.0, 2.2], [120.0, 4.0], [121.0, 9.714285714285714], [122.0, 8.649999999999999], [123.0, 11.6], [124.0, 6.466666666666666], [126.0, 4.444444444444445], [127.0, 2.5714285714285716], [125.0, 20.0], [128.0, 7.333333333333333], [131.0, 4.857142857142858], [132.0, 9.2], [133.0, 4.0], [134.0, 5.333333333333333], [135.0, 6.6923076923076925], [130.0, 4.266666666666667], [129.0, 5.0], [136.0, 10.222222222222221], [137.0, 5.8], [138.0, 9.125], [139.0, 3.0], [140.0, 6.0], [141.0, 3.0], [142.0, 11.416666666666668], [143.0, 8.6], [144.0, 8.692307692307692], [145.0, 6.0], [146.0, 8.25], [147.0, 13.777777777777779], [148.0, 3.692307692307692], [149.0, 4.0], [150.0, 3.090909090909091], [151.0, 10.75], [152.0, 9.0], [153.0, 4.142857142857143], [154.0, 6.642857142857142], [155.0, 9.0], [156.0, 8.555555555555557], [157.0, 3.166666666666667], [158.0, 6.125], [159.0, 5.0], [160.0, 4.375], [161.0, 10.0], [162.0, 8.9], [163.0, 8.75], [164.0, 6.777777777777778], [165.0, 14.5], [166.0, 5.777777777777778], [167.0, 5.666666666666668], [168.0, 6.0], [169.0, 7.666666666666666], [170.0, 6.25], [171.0, 2.8], [172.0, 5.307692307692308], [173.0, 3.0], [174.0, 12.833333333333334], [175.0, 19.22222222222222], [176.0, 6.066666666666666], [178.0, 11.666666666666666], [182.0, 11.4], [183.0, 5.444444444444445], [181.0, 16.0], [180.0, 10.8], [179.0, 23.999999999999996], [184.0, 7.6], [185.0, 11.5], [186.0, 7.222222222222222], [188.0, 5.0], [189.0, 16.857142857142858], [190.0, 8.666666666666666], [191.0, 26.0], [192.0, 13.40909090909091], [194.0, 4.666666666666667], [195.0, 8.125], [196.0, 5.0], [197.0, 5.777777777777778], [198.0, 4.0], [193.0, 24.0], [200.0, 7.0], [201.0, 7.5], [202.0, 14.304347826086957], [203.0, 7.75], [204.0, 7.555555555555555], [205.0, 7.4], [206.0, 9.9375], [207.0, 8.0], [208.0, 9.733333333333334], [209.0, 8.0], [210.0, 16.4], [211.0, 9.8], [212.0, 12.999999999999998], [213.0, 18.0], [214.0, 9.333333333333334], [215.0, 9.0], [216.0, 13.916666666666666], [217.0, 10.0], [218.0, 10.875], [219.0, 13.10526315789474], [221.0, 14.75], [222.0, 18.0], [223.0, 22.833333333333336], [220.0, 26.833333333333336], [224.0, 12.307692307692308], [226.0, 14.5], [225.0, 12.0], [227.0, 25.25], [228.0, 21.833333333333336], [229.0, 13.6], [230.0, 20.454545454545453], [231.0, 16.5], [232.0, 17.923076923076923], [233.0, 17.0], [234.0, 17.923076923076923], [235.0, 21.842105263157897], [236.0, 17.5], [239.0, 22.07142857142857], [238.0, 18.25], [237.0, 17.875], [243.0, 19.333333333333332], [244.0, 25.214285714285715], [242.0, 19.0], [246.0, 25.125], [247.0, 29.124999999999996], [241.0, 23.833333333333336], [240.0, 20.333333333333332], [245.0, 31.0], [248.0, 9.000000000000002], [249.0, 14.166666666666668], [250.0, 29.11111111111111], [251.0, 17.90909090909091], [252.0, 10.083333333333334], [253.0, 22.833333333333332], [254.0, 13.85714285714286], [257.0, 12.0], [256.0, 14.166666666666666], [258.0, 14.375], [259.0, 13.0], [260.0, 16.0], [261.0, 16.0], [262.0, 15.222222222222221], [263.0, 18.3], [264.0, 22.666666666666668], [270.0, 25.099999999999998], [271.0, 28.333333333333332], [268.0, 21.9], [269.0, 21.5], [265.0, 19.666666666666668], [266.0, 25.75], [267.0, 22.71428571428571], [274.0, 23.57142857142857], [272.0, 24.631578947368418], [275.0, 25.0], [284.0, 28.166666666666664], [285.0, 29.125], [286.0, 29.499999999999996], [287.0, 31.75], [276.0, 27.625], [277.0, 23.0], [278.0, 25.22222222222222], [279.0, 24.6], [280.0, 23.8], [281.0, 27.4], [282.0, 26.375], [283.0, 31.111111111111114], [289.0, 29.8], [288.0, 29.444444444444446], [290.0, 30.444444444444443], [291.0, 31.555555555555554], [292.0, 30.5], [294.0, 30.538461538461537], [295.0, 32.44444444444444], [296.0, 31.666666666666668], [302.0, 34.333333333333336], [303.0, 34.23076923076923], [300.0, 33.714285714285715], [301.0, 35.4], [298.0, 32.0], [299.0, 34.0], [305.0, 35.37500000000001], [304.0, 33.0], [306.0, 34.8], [307.0, 35.25], [308.0, 35.92307692307693], [309.0, 34.666666666666664], [310.0, 36.21428571428572], [311.0, 35.833333333333336], [312.0, 38.0], [318.0, 38.0], [319.0, 37.5], [316.0, 38.77777777777778], [317.0, 38.0], [313.0, 37.4], [314.0, 36.916666666666664], [315.0, 36.333333333333336], [321.0, 36.5], [320.0, 39.285714285714285], [322.0, 39.25], [323.0, 34.333333333333336], [324.0, 38.76923076923076], [325.0, 41.3], [326.0, 38.5], [327.0, 39.333333333333336], [328.0, 37.5], [334.0, 42.583333333333336], [335.0, 43.333333333333336], [332.0, 42.75], [333.0, 42.0], [329.0, 41.0], [330.0, 41.87500000000001], [331.0, 40.375], [337.0, 40.2], [336.0, 39.888888888888886], [339.0, 38.93749999999999], [348.0, 35.37499999999999], [349.0, 33.75], [350.0, 35.4], [351.0, 33.6], [342.0, 35.22222222222222], [343.0, 36.2], [344.0, 38.375], [346.0, 38.69230769230769], [340.0, 43.09090909090909], [341.0, 35.42857142857143], [347.0, 38.0], [353.0, 41.25], [352.0, 36.75], [354.0, 31.923076923076923], [355.0, 25.0], [356.0, 29.499999999999996], [358.0, 27.63157894736842], [359.0, 29.0], [360.0, 25.666666666666668], [366.0, 27.857142857142858], [367.0, 30.5], [364.0, 28.18181818181818], [365.0, 29.666666666666668], [361.0, 29.0], [362.0, 27.210526315789473], [363.0, 27.2], [369.0, 30.0], [368.0, 32.0], [370.0, 35.75], [371.0, 32.75], [372.0, 34.5], [373.0, 32.5], [374.0, 34.125], [375.0, 33.2], [376.0, 32.93333333333333], [382.0, 34.625], [383.0, 35.00000000000001], [380.0, 38.29411764705883], [381.0, 35.647058823529406], [377.0, 33.833333333333336], [378.0, 39.095238095238095], [379.0, 34.5], [385.0, 38.0], [384.0, 34.5], [386.0, 31.75], [396.0, 34.699999999999996], [397.0, 35.62500000000001], [398.0, 37.125], [399.0, 37.78947368421052], [388.0, 33.0], [389.0, 33.0], [390.0, 38.57894736842106], [391.0, 33.42857142857143], [392.0, 35.26315789473684], [393.0, 38.0], [394.0, 36.857142857142854], [395.0, 35.0], [402.0, 46.0], [401.0, 33.625], [400.0, 31.5], [403.0, 38.0], [412.0, 43.8], [413.0, 41.909090909090914], [414.0, 41.909090909090914], [415.0, 48.166666666666664], [404.0, 41.166666666666664], [405.0, 38.66666666666667], [406.0, 37.8421052631579], [407.0, 38.0], [408.0, 37.333333333333336], [410.0, 43.87499999999999], [409.0, 31.0], [411.0, 41.833333333333336], [417.0, 44.70588235294117], [416.0, 44.125], [418.0, 43.5], [428.0, 42.55], [429.0, 38.25], [430.0, 47.55555555555556], [431.0, 31.0], [420.0, 43.00000000000001], [421.0, 45.0], [422.0, 43.0], [423.0, 45.6], [424.0, 43.35294117647058], [425.0, 45.4], [426.0, 43.0], [433.0, 39.714285714285715], [432.0, 47.42857142857143], [434.0, 44.0], [435.0, 46.6], [437.0, 38.5], [436.0, 29.0], [438.0, 48.64999999999999], [439.0, 49.0], [441.0, 48.14285714285714], [444.0, 48.25], [445.0, 39.55], [446.0, 47.916666666666664], [447.0, 40.6], [440.0, 30.5], [442.0, 41.666666666666664], [443.0, 28.0], [450.0, 48.46153846153846], [448.0, 49.857142857142854], [449.0, 28.0], [451.0, 49.0], [460.0, 46.78571428571429], [462.0, 45.9], [463.0, 48.25], [452.0, 46.090909090909086], [453.0, 50.8], [454.0, 49.18181818181818], [455.0, 49.0], [456.0, 46.833333333333336], [458.0, 41.99999999999999], [459.0, 44.0], [465.0, 43.66666666666667], [464.0, 48.285714285714285], [466.0, 31.142857142857142], [467.0, 48.58064516129032], [469.0, 34.857142857142854], [470.0, 50.42857142857143], [471.0, 53.0], [472.0, 43.6], [473.0, 27.0], [478.0, 46.53846153846154], [479.0, 48.5], [476.0, 48.21428571428571], [477.0, 51.0], [474.0, 50.472222222222214], [475.0, 47.75], [481.0, 31.999999999999996], [480.0, 52.54545454545455], [482.0, 41.5], [492.0, 44.851851851851855], [493.0, 47.25], [494.0, 47.04166666666667], [495.0, 47.0], [484.0, 41.606060606060616], [485.0, 34.333333333333336], [486.0, 43.400000000000006], [487.0, 26.0], [488.0, 51.26315789473684], [489.0, 34.666666666666664], [490.0, 49.26666666666668], [491.0, 45.18518518518518], [496.0, 51.73333333333333], [497.0, 43.57142857142857], [498.0, 36.851851851851855], [499.0, 54.61904761904761], [500.0, 26.843059128554685]], "isOverall": false, "label": "Get Member 2", "isController": false}, {"data": [[499.71331901945734, 26.866094590894313]], "isOverall": false, "label": "Get Member 2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 232373.6, "minX": 1.65235142E12, "maxY": 2441150.8, "series": [{"data": [[1.65235157E12, 1739103.6], [1.65235153E12, 1521532.8], [1.6523517E12, 1778033.3], [1.65235165E12, 1792366.3], [1.65235148E12, 1792804.0], [1.65235161E12, 1742489.2], [1.65235144E12, 1788342.0], [1.65235156E12, 1743694.4], [1.65235143E12, 1722019.2], [1.65235169E12, 1793530.8], [1.65235152E12, 1579106.4], [1.65235164E12, 1784388.7], [1.65235151E12, 1635070.0], [1.6523516E12, 1739802.8], [1.65235147E12, 1790044.1], [1.65235172E12, 1285948.4], [1.65235159E12, 1753253.2], [1.65235142E12, 232373.6], [1.65235168E12, 1789179.2], [1.65235155E12, 1686277.2], [1.65235167E12, 1789560.0], [1.6523515E12, 1564874.0], [1.65235163E12, 1779528.4], [1.65235146E12, 1811176.4], [1.65235158E12, 1748892.4], [1.65235171E12, 1751312.9], [1.65235154E12, 1569290.0], [1.65235149E12, 1649072.4], [1.65235166E12, 1779353.6], [1.65235145E12, 1806659.2], [1.65235162E12, 1766805.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65235157E12, 2344009.2], [1.65235153E12, 2050761.6], [1.6523517E12, 2394675.6], [1.65235165E12, 2403169.6], [1.65235148E12, 2416388.0], [1.65235161E12, 2348572.4], [1.65235144E12, 2410374.0], [1.65235156E12, 2350196.8], [1.65235143E12, 2320982.4], [1.65235169E12, 2417367.6], [1.65235152E12, 2128360.8], [1.65235164E12, 2403963.2], [1.65235151E12, 2203790.0], [1.6523516E12, 2344951.6], [1.65235147E12, 2397874.8], [1.65235172E12, 1733234.8], [1.65235159E12, 2363080.4], [1.65235142E12, 313199.2], [1.65235168E12, 2411502.4], [1.65235155E12, 2272808.4], [1.65235167E12, 2410572.4], [1.6523515E12, 2109178.0], [1.65235163E12, 2398494.8], [1.65235146E12, 2441150.8], [1.65235158E12, 2357202.8], [1.65235171E12, 2360104.4], [1.65235154E12, 2115130.0], [1.65235149E12, 2222662.8], [1.65235166E12, 2398259.2], [1.65235145E12, 2435062.4], [1.65235162E12, 2366192.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235172E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 22.129086915594627, "minX": 1.65235142E12, "maxY": 38.96792017766664, "series": [{"data": [[1.65235157E12, 25.845513442789127], [1.65235153E12, 28.13988067051792], [1.6523517E12, 24.824366626320288], [1.65235165E12, 32.234523396172825], [1.65235148E12, 25.001279125691973], [1.65235161E12, 22.129086915594627], [1.65235144E12, 23.582885036860073], [1.65235156E12, 26.56966322937101], [1.65235143E12, 24.488082183277527], [1.65235169E12, 23.50948403151367], [1.65235152E12, 28.504427950425566], [1.65235164E12, 24.637903365939657], [1.65235151E12, 28.712230295881863], [1.6523516E12, 23.638164831920434], [1.65235147E12, 30.60652106052838], [1.65235172E12, 28.53278257283846], [1.65235159E12, 23.96888619475128], [1.65235142E12, 36.84434464910934], [1.65235168E12, 23.685613008263978], [1.65235155E12, 27.142329890810423], [1.65235167E12, 24.083986137314408], [1.6523515E12, 31.004759909689888], [1.65235163E12, 23.64315003895521], [1.65235146E12, 23.27959199732475], [1.65235158E12, 24.05514705882335], [1.65235171E12, 32.83491672716177], [1.65235154E12, 30.94855527124437], [1.65235149E12, 25.512287397883576], [1.65235166E12, 24.96381348601557], [1.65235145E12, 23.336183094702722], [1.65235162E12, 32.907675379409056]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[1.65235157E12, 25.900054105091485], [1.65235153E12, 28.661484081471038], [1.6523517E12, 25.31619521420918], [1.65235165E12, 33.970745540414995], [1.65235148E12, 25.007401154950657], [1.65235161E12, 22.14043991427758], [1.65235144E12, 23.588872932290823], [1.65235156E12, 26.556954271834254], [1.65235143E12, 24.495768610380996], [1.65235169E12, 23.509194511834753], [1.65235152E12, 28.723792074789], [1.65235164E12, 24.141100397759296], [1.65235151E12, 29.880079218739308], [1.6523516E12, 23.641328906473834], [1.65235147E12, 38.96792017766664], [1.65235172E12, 29.152195824334406], [1.65235159E12, 23.9727579302349], [1.65235142E12, 36.78919141914206], [1.65235168E12, 23.6757672174896], [1.65235155E12, 26.95646974408042], [1.65235167E12, 25.124312272262646], [1.6523515E12, 31.31897729567916], [1.65235163E12, 23.64272677019975], [1.65235146E12, 23.285438178170274], [1.65235158E12, 24.06057595772792], [1.65235171E12, 31.37661492606197], [1.65235154E12, 32.17917823692759], [1.65235149E12, 25.503564137746366], [1.65235166E12, 24.963219106956963], [1.65235145E12, 23.34303525546492], [1.65235162E12, 34.16514334073846]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235172E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 22.126953247568345, "minX": 1.65235142E12, "maxY": 36.821510123306396, "series": [{"data": [[1.65235157E12, 25.843550837800244], [1.65235153E12, 28.13790368406106], [1.6523517E12, 23.777818356358626], [1.65235165E12, 24.055074447009105], [1.65235148E12, 24.999539514751177], [1.65235161E12, 22.126953247568345], [1.65235144E12, 23.580932456664513], [1.65235156E12, 26.567723160625068], [1.65235143E12, 24.486188988433877], [1.65235169E12, 23.507377616240127], [1.65235152E12, 28.502289123196068], [1.65235164E12, 23.612727811678674], [1.65235151E12, 28.71011606040054], [1.6523516E12, 23.63626681850791], [1.65235147E12, 24.052845160055877], [1.65235172E12, 28.530877187993223], [1.65235159E12, 23.966889978156757], [1.65235142E12, 36.821510123306396], [1.65235168E12, 23.68366547822659], [1.65235155E12, 27.14029285174516], [1.65235167E12, 23.568913542777462], [1.6523515E12, 31.002653445988603], [1.65235163E12, 23.641151023085712], [1.65235146E12, 23.277634607440227], [1.65235158E12, 24.05307315233792], [1.65235171E12, 32.30642089869467], [1.65235154E12, 30.946498884175938], [1.65235149E12, 25.510077675103563], [1.65235166E12, 24.96188779503237], [1.65235145E12, 23.334565929081464], [1.65235162E12, 22.515404737683326]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[1.65235157E12, 25.89818694900364], [1.65235153E12, 28.65927180146326], [1.6523517E12, 23.77112285173911], [1.65235165E12, 24.05506844459256], [1.65235148E12, 25.0054968244001], [1.65235161E12, 22.1384674435713], [1.65235144E12, 23.58711770650495], [1.65235156E12, 26.555000528038782], [1.65235143E12, 24.49373577568134], [1.65235169E12, 23.507359686856578], [1.65235152E12, 28.721548869001275], [1.65235164E12, 23.618130323413503], [1.65235151E12, 29.8778597281978], [1.6523516E12, 23.639621100420968], [1.65235147E12, 24.074934384596755], [1.65235172E12, 29.15013678905703], [1.65235159E12, 23.970734534724354], [1.65235142E12, 36.770709570957195], [1.65235168E12, 23.67397105614276], [1.65235155E12, 26.954338892392098], [1.65235167E12, 23.572726240489953], [1.6523515E12, 31.316624885647144], [1.65235163E12, 23.640911982811843], [1.65235146E12, 23.283494921272027], [1.65235158E12, 24.05836723910185], [1.65235171E12, 31.37478878708684], [1.65235154E12, 32.17701322539618], [1.65235149E12, 25.5014446192118], [1.65235166E12, 24.9614641744549], [1.65235145E12, 23.341150330651487], [1.65235162E12, 22.51551888289436]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235172E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65235142E12, "maxY": 0.09171867864210682, "series": [{"data": [[1.65235157E12, 0.0], [1.65235153E12, 0.0], [1.6523517E12, 0.0], [1.65235165E12, 1.021220971793863E-4], [1.65235148E12, 4.911842657306857E-4], [1.65235161E12, 0.0], [1.65235144E12, 0.0], [1.65235156E12, 0.0], [1.65235143E12, 0.0], [1.65235169E12, 0.0], [1.65235152E12, 0.0], [1.65235164E12, 0.0], [1.65235151E12, 0.0], [1.6523516E12, 3.2688008773039797E-4], [1.65235147E12, 2.215307776737242E-4], [1.65235172E12, 5.6877159554651634E-5], [1.65235159E12, 1.0451395783906872E-5], [1.65235142E12, 0.09171867864210682], [1.65235168E12, 2.0608783463511908E-5], [1.65235155E12, 1.0951822930926786E-5], [1.65235167E12, 0.0], [1.6523515E12, 8.146544701254581E-5], [1.65235163E12, 0.0], [1.65235146E12, 0.0], [1.65235158E12, 0.0], [1.65235171E12, 4.208355690222909E-5], [1.65235154E12, 6.776730110881257E-4], [1.65235149E12, 0.0], [1.65235166E12, 2.471475058697524E-4], [1.65235145E12, 0.0], [1.65235162E12, 1.038055099964695E-5]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[1.65235157E12, 0.0], [1.65235153E12, 0.0], [1.6523517E12, 0.0], [1.65235165E12, 9.383112482667312E-5], [1.65235148E12, 4.838028966411641E-4], [1.65235161E12, 0.0], [1.65235144E12, 0.0], [1.65235156E12, 0.0], [1.65235143E12, 0.0], [1.65235169E12, 0.0], [1.65235152E12, 0.0], [1.65235164E12, 0.0], [1.65235151E12, 0.0], [1.6523516E12, 4.03084658385752E-4], [1.65235147E12, 3.931611216780529E-4], [1.65235172E12, 5.759539236861127E-5], [1.65235159E12, 5.269259142164524E-5], [1.65235142E12, 0.07590759075907565], [1.65235168E12, 1.0263779123473139E-5], [1.65235155E12, 1.0871692287621397E-5], [1.65235167E12, 1.0322367538218502E-5], [1.6523515E12, 7.128515249082175E-5], [1.65235163E12, 0.0], [1.65235146E12, 0.0], [1.65235158E12, 0.0], [1.65235171E12, 3.148515474953546E-5], [1.65235154E12, 5.059537817103516E-4], [1.65235149E12, 0.0], [1.65235166E12, 2.3883696780892854E-4], [1.65235145E12, 0.0], [1.65235162E12, 1.0578652279699484E-5]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235172E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.65235142E12, "maxY": 47170.0, "series": [{"data": [[1.65235157E12, 4744.0], [1.65235153E12, 4627.0], [1.6523517E12, 35.0], [1.65235165E12, 49.0], [1.65235148E12, 49.0], [1.65235161E12, 38.0], [1.65235144E12, 45.0], [1.65235156E12, 7124.0], [1.65235143E12, 51.0], [1.65235169E12, 42.0], [1.65235152E12, 7846.0], [1.65235164E12, 41.0], [1.65235151E12, 12651.0], [1.6523516E12, 43.0], [1.65235147E12, 45.0], [1.65235172E12, 9816.0], [1.65235159E12, 49.0], [1.65235142E12, 118.0], [1.65235168E12, 48.0], [1.65235155E12, 14584.0], [1.65235167E12, 37.0], [1.6523515E12, 26382.0], [1.65235163E12, 37.0], [1.65235146E12, 47.0], [1.65235158E12, 38.0], [1.65235171E12, 47170.0], [1.65235154E12, 8860.0], [1.65235149E12, 47.0], [1.65235166E12, 37.0], [1.65235145E12, 37.0], [1.65235162E12, 37.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65235157E12, 26.0], [1.65235153E12, 28.0], [1.6523517E12, 26.0], [1.65235165E12, 27.0], [1.65235148E12, 29.0], [1.65235161E12, 24.0], [1.65235144E12, 25.0], [1.65235156E12, 28.0], [1.65235143E12, 25.0], [1.65235169E12, 25.0], [1.65235152E12, 32.0], [1.65235164E12, 26.0], [1.65235151E12, 29.0], [1.6523516E12, 24.0], [1.65235147E12, 27.0], [1.65235172E12, 26.0], [1.65235159E12, 26.0], [1.65235142E12, 48.0], [1.65235168E12, 26.0], [1.65235155E12, 26.0], [1.65235167E12, 25.0], [1.6523515E12, 28.0], [1.65235163E12, 25.0], [1.65235146E12, 24.0], [1.65235158E12, 26.0], [1.65235171E12, 23.0], [1.65235154E12, 29.0], [1.65235149E12, 36.0], [1.65235166E12, 25.0], [1.65235145E12, 24.0], [1.65235162E12, 26.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65235157E12, 28.0], [1.65235153E12, 30.0], [1.6523517E12, 28.0], [1.65235165E12, 41.0], [1.65235148E12, 32.0], [1.65235161E12, 27.0], [1.65235144E12, 28.0], [1.65235156E12, 31.0], [1.65235143E12, 27.0], [1.65235169E12, 28.0], [1.65235152E12, 36.0], [1.65235164E12, 28.0], [1.65235151E12, 36.0], [1.6523516E12, 26.0], [1.65235147E12, 30.0], [1.65235172E12, 33.0], [1.65235159E12, 29.0], [1.65235142E12, 55.0], [1.65235168E12, 29.0], [1.65235155E12, 29.0], [1.65235167E12, 28.0], [1.6523515E12, 31.0], [1.65235163E12, 27.0], [1.65235146E12, 27.0], [1.65235158E12, 29.0], [1.65235171E12, 24.0], [1.65235154E12, 33.0], [1.65235149E12, 43.0], [1.65235166E12, 28.0], [1.65235145E12, 26.0], [1.65235162E12, 28.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65235157E12, 27.0], [1.65235153E12, 28.0], [1.6523517E12, 26.0], [1.65235165E12, 29.0], [1.65235148E12, 30.0], [1.65235161E12, 25.0], [1.65235144E12, 26.0], [1.65235156E12, 28.0], [1.65235143E12, 26.0], [1.65235169E12, 26.0], [1.65235152E12, 33.0], [1.65235164E12, 26.0], [1.65235151E12, 30.0], [1.6523516E12, 25.0], [1.65235147E12, 28.0], [1.65235172E12, 27.0], [1.65235159E12, 27.0], [1.65235142E12, 51.0], [1.65235168E12, 27.0], [1.65235155E12, 27.0], [1.65235167E12, 26.0], [1.6523515E12, 29.0], [1.65235163E12, 26.0], [1.65235146E12, 25.0], [1.65235158E12, 27.0], [1.65235171E12, 23.0], [1.65235154E12, 30.0], [1.65235149E12, 37.0], [1.65235166E12, 26.0], [1.65235145E12, 25.0], [1.65235162E12, 27.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65235157E12, 15.0], [1.65235153E12, 11.0], [1.6523517E12, 14.0], [1.65235165E12, 13.0], [1.65235148E12, 14.0], [1.65235161E12, 8.0], [1.65235144E12, 14.0], [1.65235156E12, 19.0], [1.65235143E12, 10.0], [1.65235169E12, 14.0], [1.65235152E12, 5.0], [1.65235164E12, 13.0], [1.65235151E12, 11.0], [1.6523516E12, 12.0], [1.65235147E12, 14.0], [1.65235172E12, 2.0], [1.65235159E12, 10.0], [1.65235142E12, 1.0], [1.65235168E12, 14.0], [1.65235155E12, 10.0], [1.65235167E12, 11.0], [1.6523515E12, 3.0], [1.65235163E12, 11.0], [1.65235146E12, 15.0], [1.65235158E12, 13.0], [1.65235171E12, 1.0], [1.65235154E12, 3.0], [1.65235149E12, 11.0], [1.65235166E12, 13.0], [1.65235145E12, 15.0], [1.65235162E12, 10.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65235157E12, 24.0], [1.65235153E12, 25.0], [1.6523517E12, 24.0], [1.65235165E12, 25.0], [1.65235148E12, 24.0], [1.65235161E12, 22.0], [1.65235144E12, 23.0], [1.65235156E12, 26.0], [1.65235143E12, 23.0], [1.65235169E12, 23.0], [1.65235152E12, 28.0], [1.65235164E12, 24.0], [1.65235151E12, 26.0], [1.6523516E12, 22.0], [1.65235147E12, 25.0], [1.65235172E12, 24.0], [1.65235159E12, 24.0], [1.65235142E12, 40.0], [1.65235168E12, 24.0], [1.65235155E12, 24.0], [1.65235167E12, 24.0], [1.6523515E12, 25.0], [1.65235163E12, 23.0], [1.65235146E12, 23.0], [1.65235158E12, 24.0], [1.65235171E12, 21.0], [1.65235154E12, 27.0], [1.65235149E12, 30.0], [1.65235166E12, 23.0], [1.65235145E12, 23.0], [1.65235162E12, 24.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235172E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 3679.0, "maxY": 50049.0, "series": [{"data": [[17283.0, 26.0], [18067.0, 25.0], [17531.0, 25.0], [18259.0, 27.0], [19371.0, 24.0], [18963.0, 24.0], [19427.0, 23.0], [19435.0, 24.0], [19011.0, 24.0], [18979.0, 22.0], [19067.0, 22.0], [19171.0, 24.0], [19283.0, 24.0], [18595.0, 23.0], [19267.0, 24.0], [19259.0, 24.0], [18923.0, 24.0], [19331.0, 24.0], [19307.0, 24.0], [19291.0, 24.0], [19363.0, 23.0], [18787.0, 24.0], [18803.0, 22.0], [18883.0, 24.0], [19483.0, 23.0], [19731.0, 25.0], [19667.0, 23.0], [19923.0, 23.0], [19939.0, 25.0], [19523.0, 24.0], [19563.0, 23.0], [19467.0, 23.0], [19555.0, 23.0], [14849.0, 32.0], [15033.0, 29.0], [15113.0, 30.0], [15313.0, 29.0], [16490.0, 29.0], [17346.0, 29.0], [17458.0, 26.0], [17642.0, 25.0], [17978.0, 25.0], [18162.0, 25.0], [18042.0, 25.0], [17946.0, 25.0], [19202.0, 23.0], [19226.0, 24.0], [19242.0, 24.0], [19210.0, 24.0], [19314.0, 24.0], [19370.0, 24.0], [19394.0, 24.0], [19410.0, 23.0], [19386.0, 24.0], [19418.0, 23.0], [18922.0, 24.0], [18706.0, 24.0], [18898.0, 26.0], [18810.0, 24.0], [19042.0, 24.0], [18946.0, 24.0], [19002.0, 24.0], [19010.0, 21.0], [18970.0, 24.0], [19434.0, 23.0], [19098.0, 24.0], [19578.0, 23.0], [19674.0, 23.0], [19802.0, 23.0], [19786.0, 25.0], [19722.0, 23.0], [19970.0, 23.0], [19874.0, 25.0], [19506.0, 25.0], [19642.0, 23.0], [19634.0, 23.0], [19666.0, 23.0], [18121.0, 24.0], [18305.0, 25.0], [18041.0, 27.0], [18953.0, 22.0], [18673.0, 24.0], [19441.0, 24.0], [19425.0, 24.0], [19409.0, 24.0], [19385.0, 24.0], [19321.0, 24.0], [18961.0, 24.0], [18889.0, 22.0], [18721.0, 22.0], [18785.0, 24.0], [19089.0, 24.0], [19177.0, 24.0], [19073.0, 22.0], [18913.0, 22.0], [19641.0, 23.0], [19457.0, 23.0], [19505.0, 23.0], [19529.0, 23.0], [19585.0, 24.0], [19721.0, 23.0], [19569.0, 23.0], [19665.0, 23.0], [3679.0, 9.0], [7424.0, 25.0], [9840.0, 42.0], [13948.0, 35.0], [15972.0, 29.0], [18048.0, 25.0], [18208.0, 27.0], [18968.0, 24.0], [19368.0, 22.0], [19424.0, 25.0], [19408.0, 25.0], [19376.0, 23.0], [19320.0, 24.0], [19256.0, 25.0], [18976.0, 24.0], [19016.0, 22.0], [19104.0, 24.0], [19056.0, 22.0], [18536.0, 24.0], [18888.0, 24.0], [18904.0, 24.0], [19160.0, 26.0], [19184.0, 24.0], [19152.0, 26.0], [18624.0, 26.0], [18664.0, 26.0], [18728.0, 24.0], [19576.0, 23.0], [19600.0, 23.0], [19488.0, 23.0], [19464.0, 23.0], [19696.0, 23.0], [19520.0, 23.0], [16671.0, 27.0], [17759.0, 26.0], [18039.0, 25.0], [17743.0, 26.0], [17431.0, 28.0], [18255.0, 27.0], [19055.0, 21.0], [19103.0, 22.0], [19079.0, 24.0], [19031.0, 24.0], [18967.0, 24.0], [19223.0, 22.0], [19215.0, 24.0], [18935.0, 24.0], [18855.0, 24.0], [18887.0, 24.0], [18927.0, 21.0], [19375.0, 24.0], [19335.0, 24.0], [19455.0, 25.0], [19383.0, 24.0], [18951.0, 24.0], [19127.0, 24.0], [19175.0, 24.0], [19167.0, 24.0], [18791.0, 24.0], [19855.0, 23.0], [19767.0, 23.0], [19479.0, 23.0], [19615.0, 23.0], [19839.0, 23.0], [19551.0, 24.0], [11739.0, 38.0], [13875.0, 32.0], [14995.0, 31.0], [15119.0, 30.0], [17238.0, 26.0], [17150.0, 27.0], [16702.0, 25.0], [16598.0, 25.0], [17518.0, 26.0], [17670.0, 26.0], [17694.0, 28.0], [17702.0, 26.0], [17846.0, 25.0], [18918.0, 26.0], [18702.0, 24.0], [18742.0, 26.0], [18758.0, 24.0], [19246.0, 25.0], [19310.0, 24.0], [19262.0, 24.0], [19454.0, 23.0], [19430.0, 23.0], [19406.0, 23.0], [19006.0, 26.0], [19094.0, 22.0], [19070.0, 22.0], [19030.0, 22.0], [19054.0, 24.0], [19126.0, 24.0], [19118.0, 25.0], [19846.0, 23.0], [19966.0, 25.0], [19830.0, 25.0], [19702.0, 23.0], [19894.0, 23.0], [19590.0, 23.0], [19654.0, 25.0], [16741.0, 29.0], [16861.0, 27.0], [16901.0, 25.0], [18397.0, 27.0], [18061.0, 25.0], [18277.0, 25.0], [17637.0, 26.0], [18405.0, 27.0], [17997.0, 26.0], [18517.0, 25.0], [18965.0, 24.0], [19013.0, 24.0], [18989.0, 25.0], [19061.0, 24.0], [18621.0, 26.0], [19277.0, 24.0], [19309.0, 25.0], [19453.0, 23.0], [19421.0, 24.0], [19397.0, 23.0], [19333.0, 23.0], [18893.0, 26.0], [18829.0, 26.0], [18781.0, 24.0], [18925.0, 24.0], [18901.0, 24.0], [19509.0, 23.0], [19829.0, 25.0], [19749.0, 23.0], [19669.0, 23.0], [20149.0, 23.0], [19685.0, 23.0], [19469.0, 23.0], [19965.0, 23.0], [19525.0, 23.0], [19621.0, 23.0], [15342.0, 30.0], [15334.0, 30.0], [15490.0, 31.0], [15574.0, 32.0], [16102.0, 29.0], [16150.0, 28.0], [17788.0, 28.0], [18140.0, 25.0], [18068.0, 24.0], [18212.0, 25.0], [18508.0, 24.0], [19364.0, 23.0], [19356.0, 23.0], [19300.0, 25.0], [19212.0, 24.0], [19372.0, 23.0], [19004.0, 22.0], [19380.0, 24.0], [19404.0, 24.0], [18452.0, 26.0], [18932.0, 26.0], [18860.0, 22.0], [18876.0, 22.0], [18884.0, 24.0], [18900.0, 21.0], [19196.0, 24.0], [19148.0, 24.0], [19052.0, 24.0], [18796.0, 26.0], [18740.0, 24.0], [18836.0, 26.0], [18820.0, 24.0], [19676.0, 23.0], [19772.0, 23.0], [20052.0, 23.0], [19476.0, 23.0], [19492.0, 23.0], [19468.0, 24.0], [19460.0, 24.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16741.0, 50048.0], [18702.0, 50048.5], [18758.0, 50048.0], [19406.0, 50047.0], [19441.0, 50048.5], [19424.0, 50048.0], [19314.0, 50047.0], [19148.0, 50047.0], [19215.0, 50047.0], [19210.0, 50049.0], [19685.0, 50047.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20149.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3679.0, "maxY": 42.0, "series": [{"data": [[17283.0, 26.0], [18067.0, 25.0], [17531.0, 25.0], [18259.0, 27.0], [19371.0, 24.0], [18963.0, 24.0], [19427.0, 23.0], [19435.0, 24.0], [19011.0, 24.0], [18979.0, 22.0], [19067.0, 22.0], [19171.0, 24.0], [19283.0, 24.0], [18595.0, 23.0], [19267.0, 24.0], [19259.0, 24.0], [18923.0, 24.0], [19331.0, 24.0], [19307.0, 24.0], [19291.0, 24.0], [19363.0, 23.0], [18787.0, 24.0], [18803.0, 22.0], [18883.0, 24.0], [19483.0, 23.0], [19731.0, 25.0], [19667.0, 23.0], [19923.0, 23.0], [19939.0, 25.0], [19523.0, 24.0], [19563.0, 23.0], [19467.0, 23.0], [19555.0, 23.0], [14849.0, 32.0], [15033.0, 29.0], [15113.0, 30.0], [15313.0, 29.0], [16490.0, 29.0], [17346.0, 29.0], [17458.0, 26.0], [17642.0, 25.0], [17978.0, 25.0], [18162.0, 25.0], [18042.0, 25.0], [17946.0, 25.0], [19202.0, 23.0], [19226.0, 24.0], [19242.0, 24.0], [19210.0, 24.0], [19314.0, 24.0], [19370.0, 24.0], [19394.0, 24.0], [19410.0, 23.0], [19386.0, 24.0], [19418.0, 23.0], [18922.0, 24.0], [18706.0, 24.0], [18898.0, 26.0], [18810.0, 24.0], [19042.0, 24.0], [18946.0, 24.0], [19002.0, 24.0], [19010.0, 21.0], [18970.0, 24.0], [19434.0, 23.0], [19098.0, 24.0], [19578.0, 23.0], [19674.0, 23.0], [19802.0, 23.0], [19786.0, 25.0], [19722.0, 23.0], [19970.0, 23.0], [19874.0, 25.0], [19506.0, 25.0], [19642.0, 23.0], [19634.0, 23.0], [19666.0, 23.0], [18121.0, 24.0], [18305.0, 25.0], [18041.0, 27.0], [18953.0, 22.0], [18673.0, 24.0], [19441.0, 24.0], [19425.0, 24.0], [19409.0, 24.0], [19385.0, 24.0], [19321.0, 24.0], [18961.0, 24.0], [18889.0, 22.0], [18721.0, 22.0], [18785.0, 24.0], [19089.0, 24.0], [19177.0, 24.0], [19073.0, 22.0], [18913.0, 22.0], [19641.0, 23.0], [19457.0, 23.0], [19505.0, 23.0], [19529.0, 23.0], [19585.0, 24.0], [19721.0, 23.0], [19569.0, 23.0], [19665.0, 23.0], [3679.0, 9.0], [7424.0, 25.0], [9840.0, 42.0], [13948.0, 35.0], [15972.0, 29.0], [18048.0, 25.0], [18208.0, 27.0], [18968.0, 24.0], [19368.0, 22.0], [19424.0, 25.0], [19408.0, 25.0], [19376.0, 23.0], [19320.0, 24.0], [19256.0, 25.0], [18976.0, 24.0], [19016.0, 22.0], [19104.0, 24.0], [19056.0, 22.0], [18536.0, 24.0], [18888.0, 24.0], [18904.0, 24.0], [19160.0, 26.0], [19184.0, 24.0], [19152.0, 26.0], [18624.0, 26.0], [18664.0, 26.0], [18728.0, 24.0], [19576.0, 23.0], [19600.0, 23.0], [19488.0, 23.0], [19464.0, 23.0], [19696.0, 23.0], [19520.0, 23.0], [16671.0, 27.0], [17759.0, 26.0], [18039.0, 25.0], [17743.0, 26.0], [17431.0, 28.0], [18255.0, 27.0], [19055.0, 21.0], [19103.0, 22.0], [19079.0, 24.0], [19031.0, 24.0], [18967.0, 24.0], [19223.0, 22.0], [19215.0, 24.0], [18935.0, 24.0], [18855.0, 24.0], [18887.0, 24.0], [18927.0, 21.0], [19375.0, 24.0], [19335.0, 24.0], [19455.0, 25.0], [19383.0, 24.0], [18951.0, 24.0], [19127.0, 24.0], [19175.0, 24.0], [19167.0, 24.0], [18791.0, 24.0], [19855.0, 23.0], [19767.0, 23.0], [19479.0, 23.0], [19615.0, 23.0], [19839.0, 23.0], [19551.0, 24.0], [11739.0, 38.0], [13875.0, 32.0], [14995.0, 31.0], [15119.0, 30.0], [17238.0, 26.0], [17150.0, 27.0], [16702.0, 25.0], [16598.0, 25.0], [17518.0, 26.0], [17670.0, 26.0], [17694.0, 28.0], [17702.0, 26.0], [17846.0, 25.0], [18918.0, 26.0], [18702.0, 24.0], [18742.0, 26.0], [18758.0, 24.0], [19246.0, 25.0], [19310.0, 24.0], [19262.0, 24.0], [19454.0, 23.0], [19430.0, 23.0], [19406.0, 23.0], [19006.0, 26.0], [19094.0, 22.0], [19070.0, 22.0], [19030.0, 22.0], [19054.0, 24.0], [19126.0, 24.0], [19118.0, 25.0], [19846.0, 23.0], [19966.0, 25.0], [19830.0, 25.0], [19702.0, 23.0], [19894.0, 23.0], [19590.0, 23.0], [19654.0, 25.0], [16741.0, 29.0], [16861.0, 27.0], [16901.0, 25.0], [18397.0, 27.0], [18061.0, 25.0], [18277.0, 25.0], [17637.0, 26.0], [18405.0, 27.0], [17997.0, 26.0], [18517.0, 25.0], [18965.0, 24.0], [19013.0, 24.0], [18989.0, 25.0], [19061.0, 24.0], [18621.0, 26.0], [19277.0, 24.0], [19309.0, 25.0], [19453.0, 23.0], [19421.0, 24.0], [19397.0, 23.0], [19333.0, 23.0], [18893.0, 26.0], [18829.0, 26.0], [18781.0, 24.0], [18925.0, 24.0], [18901.0, 24.0], [19509.0, 23.0], [19829.0, 25.0], [19749.0, 23.0], [19669.0, 23.0], [20149.0, 23.0], [19685.0, 23.0], [19469.0, 23.0], [19965.0, 23.0], [19525.0, 23.0], [19621.0, 23.0], [15342.0, 30.0], [15334.0, 30.0], [15490.0, 31.0], [15574.0, 32.0], [16102.0, 29.0], [16150.0, 28.0], [17788.0, 28.0], [18140.0, 25.0], [18068.0, 24.0], [18212.0, 25.0], [18508.0, 24.0], [19364.0, 23.0], [19356.0, 23.0], [19300.0, 25.0], [19212.0, 24.0], [19372.0, 23.0], [19004.0, 22.0], [19380.0, 24.0], [19404.0, 24.0], [18452.0, 26.0], [18932.0, 26.0], [18860.0, 22.0], [18876.0, 22.0], [18884.0, 24.0], [18900.0, 21.0], [19196.0, 24.0], [19148.0, 24.0], [19052.0, 24.0], [18796.0, 26.0], [18740.0, 24.0], [18836.0, 26.0], [18820.0, 24.0], [19676.0, 23.0], [19772.0, 23.0], [20052.0, 23.0], [19476.0, 23.0], [19492.0, 23.0], [19468.0, 24.0], [19460.0, 24.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16741.0, 0.0], [18702.0, 0.0], [18758.0, 0.0], [19406.0, 0.0], [19441.0, 0.0], [19424.0, 0.0], [19314.0, 0.0], [19148.0, 0.0], [19215.0, 0.0], [19210.0, 0.0], [19685.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20149.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2575.7, "minX": 1.65235142E12, "maxY": 19686.8, "series": [{"data": [[1.65235157E12, 18902.5], [1.65235153E12, 16538.4], [1.6523517E12, 19312.3], [1.65235165E12, 19384.0], [1.65235148E12, 19486.6], [1.65235161E12, 18940.5], [1.65235144E12, 19438.5], [1.65235156E12, 18953.2], [1.65235143E12, 18717.7], [1.65235169E12, 19494.9], [1.65235152E12, 17164.6], [1.65235164E12, 19387.5], [1.65235151E12, 17772.3], [1.6523516E12, 18911.7], [1.65235147E12, 19341.6], [1.65235172E12, 13927.7], [1.65235159E12, 19056.1], [1.65235142E12, 2575.7], [1.65235168E12, 19447.6], [1.65235155E12, 18329.4], [1.65235167E12, 19440.8], [1.6523515E12, 17009.3], [1.65235163E12, 19342.5], [1.65235146E12, 19686.8], [1.65235158E12, 19010.2], [1.65235171E12, 19033.3], [1.65235154E12, 17057.2], [1.65235149E12, 17925.4], [1.65235166E12, 19340.5], [1.65235145E12, 19637.4], [1.65235162E12, 19086.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235172E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.65235142E12, "maxY": 19686.7, "series": [{"data": [[1.65235157E12, 18903.3], [1.65235153E12, 16538.4], [1.6523517E12, 19311.9], [1.65235165E12, 19380.4], [1.65235148E12, 19487.0], [1.65235161E12, 18940.1], [1.65235144E12, 19438.5], [1.65235156E12, 18953.2], [1.65235143E12, 18717.6], [1.65235169E12, 19494.9], [1.65235152E12, 17164.2], [1.65235164E12, 19386.8], [1.65235151E12, 17772.5], [1.6523516E12, 18910.9], [1.65235147E12, 19337.7], [1.65235172E12, 13977.7], [1.65235159E12, 19057.1], [1.65235142E12, 2525.8], [1.65235168E12, 19447.6], [1.65235155E12, 18329.1], [1.65235167E12, 19440.1], [1.6523515E12, 17009.5], [1.65235163E12, 19342.7], [1.65235146E12, 19686.7], [1.65235158E12, 19009.7], [1.65235171E12, 19033.1], [1.65235154E12, 17057.5], [1.65235149E12, 17924.7], [1.65235166E12, 19340.8], [1.65235145E12, 19637.6], [1.65235162E12, 19082.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.65235171E12, 0.1], [1.6523517E12, 0.5], [1.65235165E12, 3.5], [1.65235164E12, 0.3], [1.65235167E12, 0.4], [1.65235147E12, 4.1], [1.65235162E12, 4.2]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.65235172E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.65235142E12, "maxY": 10166.6, "series": [{"data": [[1.6523517E12, 0.3], [1.65235165E12, 1.9], [1.65235164E12, 0.1], [1.65235167E12, 0.3], [1.65235147E12, 2.8], [1.65235162E12, 2.2]], "isOverall": false, "label": "Get Member 2-failure", "isController": false}, {"data": [[1.65235157E12, 9426.1], [1.65235153E12, 8091.2], [1.6523517E12, 9728.5], [1.65235165E12, 9589.8], [1.65235148E12, 9714.7], [1.65235161E12, 9379.1], [1.65235144E12, 9400.5], [1.65235156E12, 9469.0], [1.65235143E12, 9051.4], [1.65235169E12, 9810.2], [1.65235152E12, 8514.6], [1.65235164E12, 9603.7], [1.65235151E12, 8785.8], [1.6523516E12, 9427.3], [1.65235147E12, 9408.1], [1.65235172E12, 6945.0], [1.65235159E12, 9489.0], [1.65235142E12, 1212.0], [1.65235168E12, 9743.0], [1.65235155E12, 9198.2], [1.65235167E12, 9687.4], [1.6523515E12, 8416.9], [1.65235163E12, 9587.9], [1.65235146E12, 9520.1], [1.65235158E12, 9462.5], [1.65235171E12, 9528.3], [1.65235154E12, 8498.8], [1.65235149E12, 8964.3], [1.65235166E12, 9630.0], [1.65235145E12, 9496.4], [1.65235162E12, 9450.8]], "isOverall": false, "label": "Get Member 2-success", "isController": false}, {"data": [[1.65235157E12, 9477.2], [1.65235153E12, 8447.2], [1.6523517E12, 9583.4], [1.65235165E12, 9790.6], [1.65235148E12, 9772.3], [1.65235161E12, 9561.0], [1.65235144E12, 10038.0], [1.65235156E12, 9484.2], [1.65235143E12, 9666.2], [1.65235169E12, 9684.7], [1.65235152E12, 8649.6], [1.65235164E12, 9783.1], [1.65235151E12, 8986.7], [1.6523516E12, 9483.6], [1.65235147E12, 9929.6], [1.65235172E12, 7032.7], [1.65235159E12, 9568.1], [1.65235142E12, 1313.8], [1.65235168E12, 9704.6], [1.65235155E12, 9130.9], [1.65235167E12, 9752.7], [1.6523515E12, 8592.6], [1.65235163E12, 9754.8], [1.65235146E12, 10166.6], [1.65235158E12, 9547.2], [1.65235171E12, 9504.8], [1.65235154E12, 8558.7], [1.65235149E12, 8960.4], [1.65235166E12, 9710.8], [1.65235145E12, 10141.2], [1.65235162E12, 9631.4]], "isOverall": false, "label": "Get Member 1-success", "isController": false}, {"data": [[1.65235171E12, 0.1], [1.6523517E12, 0.2], [1.65235165E12, 1.6], [1.65235164E12, 0.2], [1.65235167E12, 0.1], [1.65235147E12, 1.3], [1.65235162E12, 2.0]], "isOverall": false, "label": "Get Member 1-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235172E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.65235142E12, "maxY": 19686.7, "series": [{"data": [[1.65235157E12, 18903.3], [1.65235153E12, 16538.4], [1.6523517E12, 19311.9], [1.65235165E12, 19380.4], [1.65235148E12, 19487.0], [1.65235161E12, 18940.1], [1.65235144E12, 19438.5], [1.65235156E12, 18953.2], [1.65235143E12, 18717.6], [1.65235169E12, 19494.9], [1.65235152E12, 17164.2], [1.65235164E12, 19386.8], [1.65235151E12, 17772.5], [1.6523516E12, 18910.9], [1.65235147E12, 19337.7], [1.65235172E12, 13977.7], [1.65235159E12, 19057.1], [1.65235142E12, 2525.8], [1.65235168E12, 19447.6], [1.65235155E12, 18329.1], [1.65235167E12, 19440.1], [1.6523515E12, 17009.5], [1.65235163E12, 19342.7], [1.65235146E12, 19686.7], [1.65235158E12, 19009.7], [1.65235171E12, 19033.1], [1.65235154E12, 17057.5], [1.65235149E12, 17924.7], [1.65235166E12, 19340.8], [1.65235145E12, 19637.6], [1.65235162E12, 19082.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.65235171E12, 0.1], [1.6523517E12, 0.5], [1.65235165E12, 3.5], [1.65235164E12, 0.3], [1.65235167E12, 0.4], [1.65235147E12, 4.1], [1.65235162E12, 4.2]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.65235172E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

