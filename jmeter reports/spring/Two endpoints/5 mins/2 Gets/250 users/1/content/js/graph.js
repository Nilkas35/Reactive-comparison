/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 40561.0, "series": [{"data": [[0.0, 0.0], [0.1, 13.0], [0.2, 18.0], [0.3, 23.0], [0.4, 27.0], [0.5, 30.0], [0.6, 32.0], [0.7, 34.0], [0.8, 36.0], [0.9, 37.0], [1.0, 38.0], [1.1, 39.0], [1.2, 39.0], [1.3, 40.0], [1.4, 40.0], [1.5, 41.0], [1.6, 41.0], [1.7, 41.0], [1.8, 42.0], [1.9, 42.0], [2.0, 42.0], [2.1, 42.0], [2.2, 42.0], [2.3, 42.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 43.0], [3.4, 44.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 44.0], [4.0, 44.0], [4.1, 44.0], [4.2, 44.0], [4.3, 44.0], [4.4, 44.0], [4.5, 44.0], [4.6, 44.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 44.0], [5.1, 45.0], [5.2, 45.0], [5.3, 45.0], [5.4, 45.0], [5.5, 45.0], [5.6, 45.0], [5.7, 45.0], [5.8, 45.0], [5.9, 45.0], [6.0, 45.0], [6.1, 45.0], [6.2, 45.0], [6.3, 45.0], [6.4, 45.0], [6.5, 45.0], [6.6, 45.0], [6.7, 45.0], [6.8, 45.0], [6.9, 45.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 45.0], [7.4, 45.0], [7.5, 45.0], [7.6, 46.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 46.0], [10.6, 46.0], [10.7, 46.0], [10.8, 46.0], [10.9, 47.0], [11.0, 47.0], [11.1, 47.0], [11.2, 47.0], [11.3, 47.0], [11.4, 47.0], [11.5, 47.0], [11.6, 47.0], [11.7, 47.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 47.0], [14.1, 47.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 47.0], [15.1, 47.0], [15.2, 47.0], [15.3, 47.0], [15.4, 47.0], [15.5, 47.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 48.0], [17.3, 48.0], [17.4, 48.0], [17.5, 48.0], [17.6, 48.0], [17.7, 48.0], [17.8, 48.0], [17.9, 48.0], [18.0, 48.0], [18.1, 48.0], [18.2, 48.0], [18.3, 48.0], [18.4, 48.0], [18.5, 48.0], [18.6, 48.0], [18.7, 48.0], [18.8, 48.0], [18.9, 48.0], [19.0, 48.0], [19.1, 48.0], [19.2, 48.0], [19.3, 48.0], [19.4, 48.0], [19.5, 48.0], [19.6, 48.0], [19.7, 48.0], [19.8, 48.0], [19.9, 48.0], [20.0, 48.0], [20.1, 48.0], [20.2, 48.0], [20.3, 48.0], [20.4, 48.0], [20.5, 48.0], [20.6, 48.0], [20.7, 48.0], [20.8, 48.0], [20.9, 48.0], [21.0, 48.0], [21.1, 48.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 48.0], [22.3, 48.0], [22.4, 48.0], [22.5, 49.0], [22.6, 49.0], [22.7, 49.0], [22.8, 49.0], [22.9, 49.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 49.0], [24.2, 49.0], [24.3, 49.0], [24.4, 49.0], [24.5, 49.0], [24.6, 49.0], [24.7, 49.0], [24.8, 49.0], [24.9, 49.0], [25.0, 49.0], [25.1, 49.0], [25.2, 49.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 49.0], [26.4, 49.0], [26.5, 49.0], [26.6, 49.0], [26.7, 49.0], [26.8, 49.0], [26.9, 49.0], [27.0, 49.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 49.0], [27.6, 49.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 49.0], [29.6, 49.0], [29.7, 49.0], [29.8, 49.0], [29.9, 49.0], [30.0, 49.0], [30.1, 49.0], [30.2, 49.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 50.0], [30.9, 50.0], [31.0, 50.0], [31.1, 50.0], [31.2, 50.0], [31.3, 50.0], [31.4, 50.0], [31.5, 50.0], [31.6, 50.0], [31.7, 50.0], [31.8, 50.0], [31.9, 50.0], [32.0, 50.0], [32.1, 50.0], [32.2, 50.0], [32.3, 50.0], [32.4, 50.0], [32.5, 50.0], [32.6, 50.0], [32.7, 50.0], [32.8, 50.0], [32.9, 50.0], [33.0, 50.0], [33.1, 50.0], [33.2, 50.0], [33.3, 50.0], [33.4, 50.0], [33.5, 50.0], [33.6, 50.0], [33.7, 50.0], [33.8, 50.0], [33.9, 50.0], [34.0, 50.0], [34.1, 50.0], [34.2, 50.0], [34.3, 50.0], [34.4, 50.0], [34.5, 50.0], [34.6, 50.0], [34.7, 50.0], [34.8, 50.0], [34.9, 50.0], [35.0, 50.0], [35.1, 50.0], [35.2, 50.0], [35.3, 50.0], [35.4, 50.0], [35.5, 50.0], [35.6, 50.0], [35.7, 50.0], [35.8, 50.0], [35.9, 50.0], [36.0, 50.0], [36.1, 50.0], [36.2, 50.0], [36.3, 50.0], [36.4, 50.0], [36.5, 50.0], [36.6, 50.0], [36.7, 50.0], [36.8, 50.0], [36.9, 50.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 50.0], [37.4, 50.0], [37.5, 50.0], [37.6, 51.0], [37.7, 51.0], [37.8, 51.0], [37.9, 51.0], [38.0, 51.0], [38.1, 51.0], [38.2, 51.0], [38.3, 51.0], [38.4, 51.0], [38.5, 51.0], [38.6, 51.0], [38.7, 51.0], [38.8, 51.0], [38.9, 51.0], [39.0, 51.0], [39.1, 51.0], [39.2, 51.0], [39.3, 51.0], [39.4, 51.0], [39.5, 51.0], [39.6, 51.0], [39.7, 51.0], [39.8, 51.0], [39.9, 51.0], [40.0, 51.0], [40.1, 51.0], [40.2, 51.0], [40.3, 51.0], [40.4, 51.0], [40.5, 51.0], [40.6, 51.0], [40.7, 51.0], [40.8, 51.0], [40.9, 51.0], [41.0, 51.0], [41.1, 51.0], [41.2, 51.0], [41.3, 51.0], [41.4, 51.0], [41.5, 51.0], [41.6, 51.0], [41.7, 51.0], [41.8, 51.0], [41.9, 51.0], [42.0, 51.0], [42.1, 51.0], [42.2, 51.0], [42.3, 51.0], [42.4, 51.0], [42.5, 51.0], [42.6, 51.0], [42.7, 51.0], [42.8, 51.0], [42.9, 51.0], [43.0, 51.0], [43.1, 51.0], [43.2, 51.0], [43.3, 51.0], [43.4, 51.0], [43.5, 51.0], [43.6, 51.0], [43.7, 51.0], [43.8, 51.0], [43.9, 51.0], [44.0, 51.0], [44.1, 51.0], [44.2, 51.0], [44.3, 52.0], [44.4, 52.0], [44.5, 52.0], [44.6, 52.0], [44.7, 52.0], [44.8, 52.0], [44.9, 52.0], [45.0, 52.0], [45.1, 52.0], [45.2, 52.0], [45.3, 52.0], [45.4, 52.0], [45.5, 52.0], [45.6, 52.0], [45.7, 52.0], [45.8, 52.0], [45.9, 52.0], [46.0, 52.0], [46.1, 52.0], [46.2, 52.0], [46.3, 52.0], [46.4, 52.0], [46.5, 52.0], [46.6, 52.0], [46.7, 52.0], [46.8, 52.0], [46.9, 52.0], [47.0, 52.0], [47.1, 52.0], [47.2, 52.0], [47.3, 52.0], [47.4, 52.0], [47.5, 52.0], [47.6, 52.0], [47.7, 52.0], [47.8, 52.0], [47.9, 52.0], [48.0, 52.0], [48.1, 52.0], [48.2, 52.0], [48.3, 52.0], [48.4, 52.0], [48.5, 52.0], [48.6, 52.0], [48.7, 52.0], [48.8, 52.0], [48.9, 52.0], [49.0, 52.0], [49.1, 52.0], [49.2, 52.0], [49.3, 52.0], [49.4, 52.0], [49.5, 52.0], [49.6, 52.0], [49.7, 52.0], [49.8, 52.0], [49.9, 52.0], [50.0, 52.0], [50.1, 52.0], [50.2, 52.0], [50.3, 52.0], [50.4, 52.0], [50.5, 52.0], [50.6, 52.0], [50.7, 52.0], [50.8, 52.0], [50.9, 52.0], [51.0, 53.0], [51.1, 53.0], [51.2, 53.0], [51.3, 53.0], [51.4, 53.0], [51.5, 53.0], [51.6, 53.0], [51.7, 53.0], [51.8, 53.0], [51.9, 53.0], [52.0, 53.0], [52.1, 53.0], [52.2, 53.0], [52.3, 53.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 53.0], [53.1, 53.0], [53.2, 53.0], [53.3, 53.0], [53.4, 53.0], [53.5, 53.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 53.0], [54.1, 53.0], [54.2, 53.0], [54.3, 53.0], [54.4, 53.0], [54.5, 53.0], [54.6, 53.0], [54.7, 53.0], [54.8, 53.0], [54.9, 53.0], [55.0, 53.0], [55.1, 53.0], [55.2, 53.0], [55.3, 53.0], [55.4, 53.0], [55.5, 53.0], [55.6, 53.0], [55.7, 53.0], [55.8, 53.0], [55.9, 53.0], [56.0, 53.0], [56.1, 53.0], [56.2, 53.0], [56.3, 53.0], [56.4, 53.0], [56.5, 53.0], [56.6, 53.0], [56.7, 53.0], [56.8, 53.0], [56.9, 53.0], [57.0, 53.0], [57.1, 53.0], [57.2, 53.0], [57.3, 53.0], [57.4, 53.0], [57.5, 53.0], [57.6, 53.0], [57.7, 53.0], [57.8, 53.0], [57.9, 54.0], [58.0, 54.0], [58.1, 54.0], [58.2, 54.0], [58.3, 54.0], [58.4, 54.0], [58.5, 54.0], [58.6, 54.0], [58.7, 54.0], [58.8, 54.0], [58.9, 54.0], [59.0, 54.0], [59.1, 54.0], [59.2, 54.0], [59.3, 54.0], [59.4, 54.0], [59.5, 54.0], [59.6, 54.0], [59.7, 54.0], [59.8, 54.0], [59.9, 54.0], [60.0, 54.0], [60.1, 54.0], [60.2, 54.0], [60.3, 54.0], [60.4, 54.0], [60.5, 54.0], [60.6, 54.0], [60.7, 54.0], [60.8, 54.0], [60.9, 54.0], [61.0, 54.0], [61.1, 54.0], [61.2, 54.0], [61.3, 54.0], [61.4, 54.0], [61.5, 54.0], [61.6, 54.0], [61.7, 54.0], [61.8, 54.0], [61.9, 54.0], [62.0, 54.0], [62.1, 54.0], [62.2, 54.0], [62.3, 54.0], [62.4, 54.0], [62.5, 54.0], [62.6, 54.0], [62.7, 54.0], [62.8, 54.0], [62.9, 54.0], [63.0, 54.0], [63.1, 54.0], [63.2, 54.0], [63.3, 54.0], [63.4, 54.0], [63.5, 54.0], [63.6, 54.0], [63.7, 54.0], [63.8, 54.0], [63.9, 54.0], [64.0, 54.0], [64.1, 54.0], [64.2, 54.0], [64.3, 54.0], [64.4, 55.0], [64.5, 55.0], [64.6, 55.0], [64.7, 55.0], [64.8, 55.0], [64.9, 55.0], [65.0, 55.0], [65.1, 55.0], [65.2, 55.0], [65.3, 55.0], [65.4, 55.0], [65.5, 55.0], [65.6, 55.0], [65.7, 55.0], [65.8, 55.0], [65.9, 55.0], [66.0, 55.0], [66.1, 55.0], [66.2, 55.0], [66.3, 55.0], [66.4, 55.0], [66.5, 55.0], [66.6, 55.0], [66.7, 55.0], [66.8, 55.0], [66.9, 55.0], [67.0, 55.0], [67.1, 55.0], [67.2, 55.0], [67.3, 55.0], [67.4, 55.0], [67.5, 55.0], [67.6, 55.0], [67.7, 55.0], [67.8, 55.0], [67.9, 55.0], [68.0, 55.0], [68.1, 55.0], [68.2, 55.0], [68.3, 55.0], [68.4, 55.0], [68.5, 55.0], [68.6, 55.0], [68.7, 55.0], [68.8, 55.0], [68.9, 55.0], [69.0, 55.0], [69.1, 55.0], [69.2, 55.0], [69.3, 55.0], [69.4, 55.0], [69.5, 55.0], [69.6, 55.0], [69.7, 55.0], [69.8, 55.0], [69.9, 55.0], [70.0, 55.0], [70.1, 55.0], [70.2, 55.0], [70.3, 55.0], [70.4, 56.0], [70.5, 56.0], [70.6, 56.0], [70.7, 56.0], [70.8, 56.0], [70.9, 56.0], [71.0, 56.0], [71.1, 56.0], [71.2, 56.0], [71.3, 56.0], [71.4, 56.0], [71.5, 56.0], [71.6, 56.0], [71.7, 56.0], [71.8, 56.0], [71.9, 56.0], [72.0, 56.0], [72.1, 56.0], [72.2, 56.0], [72.3, 56.0], [72.4, 56.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 56.0], [73.0, 56.0], [73.1, 56.0], [73.2, 56.0], [73.3, 56.0], [73.4, 56.0], [73.5, 56.0], [73.6, 56.0], [73.7, 56.0], [73.8, 56.0], [73.9, 56.0], [74.0, 56.0], [74.1, 56.0], [74.2, 56.0], [74.3, 56.0], [74.4, 56.0], [74.5, 56.0], [74.6, 56.0], [74.7, 56.0], [74.8, 56.0], [74.9, 56.0], [75.0, 56.0], [75.1, 56.0], [75.2, 56.0], [75.3, 56.0], [75.4, 56.0], [75.5, 56.0], [75.6, 57.0], [75.7, 57.0], [75.8, 57.0], [75.9, 57.0], [76.0, 57.0], [76.1, 57.0], [76.2, 57.0], [76.3, 57.0], [76.4, 57.0], [76.5, 57.0], [76.6, 57.0], [76.7, 57.0], [76.8, 57.0], [76.9, 57.0], [77.0, 57.0], [77.1, 57.0], [77.2, 57.0], [77.3, 57.0], [77.4, 57.0], [77.5, 57.0], [77.6, 57.0], [77.7, 57.0], [77.8, 57.0], [77.9, 57.0], [78.0, 57.0], [78.1, 57.0], [78.2, 57.0], [78.3, 57.0], [78.4, 57.0], [78.5, 57.0], [78.6, 57.0], [78.7, 57.0], [78.8, 57.0], [78.9, 57.0], [79.0, 57.0], [79.1, 57.0], [79.2, 57.0], [79.3, 57.0], [79.4, 57.0], [79.5, 57.0], [79.6, 57.0], [79.7, 57.0], [79.8, 57.0], [79.9, 58.0], [80.0, 58.0], [80.1, 58.0], [80.2, 58.0], [80.3, 58.0], [80.4, 58.0], [80.5, 58.0], [80.6, 58.0], [80.7, 58.0], [80.8, 58.0], [80.9, 58.0], [81.0, 58.0], [81.1, 58.0], [81.2, 58.0], [81.3, 58.0], [81.4, 58.0], [81.5, 58.0], [81.6, 58.0], [81.7, 58.0], [81.8, 58.0], [81.9, 58.0], [82.0, 58.0], [82.1, 58.0], [82.2, 58.0], [82.3, 58.0], [82.4, 58.0], [82.5, 58.0], [82.6, 58.0], [82.7, 58.0], [82.8, 58.0], [82.9, 58.0], [83.0, 58.0], [83.1, 58.0], [83.2, 58.0], [83.3, 58.0], [83.4, 58.0], [83.5, 59.0], [83.6, 59.0], [83.7, 59.0], [83.8, 59.0], [83.9, 59.0], [84.0, 59.0], [84.1, 59.0], [84.2, 59.0], [84.3, 59.0], [84.4, 59.0], [84.5, 59.0], [84.6, 59.0], [84.7, 59.0], [84.8, 59.0], [84.9, 59.0], [85.0, 59.0], [85.1, 59.0], [85.2, 59.0], [85.3, 59.0], [85.4, 59.0], [85.5, 59.0], [85.6, 59.0], [85.7, 59.0], [85.8, 59.0], [85.9, 59.0], [86.0, 59.0], [86.1, 59.0], [86.2, 59.0], [86.3, 59.0], [86.4, 59.0], [86.5, 60.0], [86.6, 60.0], [86.7, 60.0], [86.8, 60.0], [86.9, 60.0], [87.0, 60.0], [87.1, 60.0], [87.2, 60.0], [87.3, 60.0], [87.4, 60.0], [87.5, 60.0], [87.6, 60.0], [87.7, 60.0], [87.8, 60.0], [87.9, 60.0], [88.0, 60.0], [88.1, 60.0], [88.2, 60.0], [88.3, 60.0], [88.4, 60.0], [88.5, 60.0], [88.6, 60.0], [88.7, 60.0], [88.8, 60.0], [88.9, 60.0], [89.0, 60.0], [89.1, 61.0], [89.2, 61.0], [89.3, 61.0], [89.4, 61.0], [89.5, 61.0], [89.6, 61.0], [89.7, 61.0], [89.8, 61.0], [89.9, 61.0], [90.0, 61.0], [90.1, 61.0], [90.2, 61.0], [90.3, 61.0], [90.4, 61.0], [90.5, 61.0], [90.6, 61.0], [90.7, 61.0], [90.8, 61.0], [90.9, 61.0], [91.0, 61.0], [91.1, 62.0], [91.2, 62.0], [91.3, 62.0], [91.4, 62.0], [91.5, 62.0], [91.6, 62.0], [91.7, 62.0], [91.8, 62.0], [91.9, 62.0], [92.0, 62.0], [92.1, 62.0], [92.2, 62.0], [92.3, 62.0], [92.4, 62.0], [92.5, 62.0], [92.6, 63.0], [92.7, 63.0], [92.8, 63.0], [92.9, 63.0], [93.0, 63.0], [93.1, 63.0], [93.2, 63.0], [93.3, 63.0], [93.4, 63.0], [93.5, 63.0], [93.6, 63.0], [93.7, 64.0], [93.8, 64.0], [93.9, 64.0], [94.0, 64.0], [94.1, 64.0], [94.2, 64.0], [94.3, 64.0], [94.4, 64.0], [94.5, 64.0], [94.6, 65.0], [94.7, 65.0], [94.8, 65.0], [94.9, 65.0], [95.0, 65.0], [95.1, 65.0], [95.2, 65.0], [95.3, 66.0], [95.4, 66.0], [95.5, 66.0], [95.6, 66.0], [95.7, 66.0], [95.8, 66.0], [95.9, 67.0], [96.0, 67.0], [96.1, 67.0], [96.2, 67.0], [96.3, 68.0], [96.4, 68.0], [96.5, 68.0], [96.6, 68.0], [96.7, 69.0], [96.8, 69.0], [96.9, 69.0], [97.0, 70.0], [97.1, 70.0], [97.2, 71.0], [97.3, 71.0], [97.4, 72.0], [97.5, 72.0], [97.6, 73.0], [97.7, 74.0], [97.8, 75.0], [97.9, 76.0], [98.0, 77.0], [98.1, 79.0], [98.2, 81.0], [98.3, 84.0], [98.4, 86.0], [98.5, 90.0], [98.6, 93.0], [98.7, 97.0], [98.8, 99.0], [98.9, 102.0], [99.0, 105.0], [99.1, 108.0], [99.2, 112.0], [99.3, 117.0], [99.4, 124.0], [99.5, 132.0], [99.6, 141.0], [99.7, 159.0], [99.8, 184.0], [99.9, 356.0], [100.0, 40341.0]], "isOverall": false, "label": "Get Cart 2", "isController": false}, {"data": [[0.0, 1.0], [0.1, 14.0], [0.2, 19.0], [0.3, 23.0], [0.4, 27.0], [0.5, 30.0], [0.6, 33.0], [0.7, 35.0], [0.8, 36.0], [0.9, 37.0], [1.0, 38.0], [1.1, 39.0], [1.2, 40.0], [1.3, 40.0], [1.4, 40.0], [1.5, 41.0], [1.6, 41.0], [1.7, 41.0], [1.8, 42.0], [1.9, 42.0], [2.0, 42.0], [2.1, 42.0], [2.2, 42.0], [2.3, 42.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 43.0], [3.4, 44.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 44.0], [4.0, 44.0], [4.1, 44.0], [4.2, 44.0], [4.3, 44.0], [4.4, 44.0], [4.5, 44.0], [4.6, 44.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 44.0], [5.1, 45.0], [5.2, 45.0], [5.3, 45.0], [5.4, 45.0], [5.5, 45.0], [5.6, 45.0], [5.7, 45.0], [5.8, 45.0], [5.9, 45.0], [6.0, 45.0], [6.1, 45.0], [6.2, 45.0], [6.3, 45.0], [6.4, 45.0], [6.5, 45.0], [6.6, 45.0], [6.7, 45.0], [6.8, 45.0], [6.9, 45.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 45.0], [7.4, 45.0], [7.5, 45.0], [7.6, 46.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 46.0], [10.6, 46.0], [10.7, 46.0], [10.8, 47.0], [10.9, 47.0], [11.0, 47.0], [11.1, 47.0], [11.2, 47.0], [11.3, 47.0], [11.4, 47.0], [11.5, 47.0], [11.6, 47.0], [11.7, 47.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 47.0], [14.1, 47.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 47.0], [15.1, 47.0], [15.2, 47.0], [15.3, 47.0], [15.4, 47.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 48.0], [17.3, 48.0], [17.4, 48.0], [17.5, 48.0], [17.6, 48.0], [17.7, 48.0], [17.8, 48.0], [17.9, 48.0], [18.0, 48.0], [18.1, 48.0], [18.2, 48.0], [18.3, 48.0], [18.4, 48.0], [18.5, 48.0], [18.6, 48.0], [18.7, 48.0], [18.8, 48.0], [18.9, 48.0], [19.0, 48.0], [19.1, 48.0], [19.2, 48.0], [19.3, 48.0], [19.4, 48.0], [19.5, 48.0], [19.6, 48.0], [19.7, 48.0], [19.8, 48.0], [19.9, 48.0], [20.0, 48.0], [20.1, 48.0], [20.2, 48.0], [20.3, 48.0], [20.4, 48.0], [20.5, 48.0], [20.6, 48.0], [20.7, 48.0], [20.8, 48.0], [20.9, 48.0], [21.0, 48.0], [21.1, 48.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 48.0], [22.3, 48.0], [22.4, 49.0], [22.5, 49.0], [22.6, 49.0], [22.7, 49.0], [22.8, 49.0], [22.9, 49.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 49.0], [24.2, 49.0], [24.3, 49.0], [24.4, 49.0], [24.5, 49.0], [24.6, 49.0], [24.7, 49.0], [24.8, 49.0], [24.9, 49.0], [25.0, 49.0], [25.1, 49.0], [25.2, 49.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 49.0], [26.4, 49.0], [26.5, 49.0], [26.6, 49.0], [26.7, 49.0], [26.8, 49.0], [26.9, 49.0], [27.0, 49.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 49.0], [27.6, 49.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 49.0], [29.6, 49.0], [29.7, 49.0], [29.8, 49.0], [29.9, 49.0], [30.0, 49.0], [30.1, 49.0], [30.2, 50.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 50.0], [30.9, 50.0], [31.0, 50.0], [31.1, 50.0], [31.2, 50.0], [31.3, 50.0], [31.4, 50.0], [31.5, 50.0], [31.6, 50.0], [31.7, 50.0], [31.8, 50.0], [31.9, 50.0], [32.0, 50.0], [32.1, 50.0], [32.2, 50.0], [32.3, 50.0], [32.4, 50.0], [32.5, 50.0], [32.6, 50.0], [32.7, 50.0], [32.8, 50.0], [32.9, 50.0], [33.0, 50.0], [33.1, 50.0], [33.2, 50.0], [33.3, 50.0], [33.4, 50.0], [33.5, 50.0], [33.6, 50.0], [33.7, 50.0], [33.8, 50.0], [33.9, 50.0], [34.0, 50.0], [34.1, 50.0], [34.2, 50.0], [34.3, 50.0], [34.4, 50.0], [34.5, 50.0], [34.6, 50.0], [34.7, 50.0], [34.8, 50.0], [34.9, 50.0], [35.0, 50.0], [35.1, 50.0], [35.2, 50.0], [35.3, 50.0], [35.4, 50.0], [35.5, 50.0], [35.6, 50.0], [35.7, 50.0], [35.8, 50.0], [35.9, 50.0], [36.0, 50.0], [36.1, 50.0], [36.2, 50.0], [36.3, 50.0], [36.4, 50.0], [36.5, 50.0], [36.6, 50.0], [36.7, 50.0], [36.8, 50.0], [36.9, 50.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 50.0], [37.4, 50.0], [37.5, 50.0], [37.6, 51.0], [37.7, 51.0], [37.8, 51.0], [37.9, 51.0], [38.0, 51.0], [38.1, 51.0], [38.2, 51.0], [38.3, 51.0], [38.4, 51.0], [38.5, 51.0], [38.6, 51.0], [38.7, 51.0], [38.8, 51.0], [38.9, 51.0], [39.0, 51.0], [39.1, 51.0], [39.2, 51.0], [39.3, 51.0], [39.4, 51.0], [39.5, 51.0], [39.6, 51.0], [39.7, 51.0], [39.8, 51.0], [39.9, 51.0], [40.0, 51.0], [40.1, 51.0], [40.2, 51.0], [40.3, 51.0], [40.4, 51.0], [40.5, 51.0], [40.6, 51.0], [40.7, 51.0], [40.8, 51.0], [40.9, 51.0], [41.0, 51.0], [41.1, 51.0], [41.2, 51.0], [41.3, 51.0], [41.4, 51.0], [41.5, 51.0], [41.6, 51.0], [41.7, 51.0], [41.8, 51.0], [41.9, 51.0], [42.0, 51.0], [42.1, 51.0], [42.2, 51.0], [42.3, 51.0], [42.4, 51.0], [42.5, 51.0], [42.6, 51.0], [42.7, 51.0], [42.8, 51.0], [42.9, 51.0], [43.0, 51.0], [43.1, 51.0], [43.2, 51.0], [43.3, 51.0], [43.4, 51.0], [43.5, 51.0], [43.6, 51.0], [43.7, 51.0], [43.8, 51.0], [43.9, 51.0], [44.0, 51.0], [44.1, 51.0], [44.2, 52.0], [44.3, 52.0], [44.4, 52.0], [44.5, 52.0], [44.6, 52.0], [44.7, 52.0], [44.8, 52.0], [44.9, 52.0], [45.0, 52.0], [45.1, 52.0], [45.2, 52.0], [45.3, 52.0], [45.4, 52.0], [45.5, 52.0], [45.6, 52.0], [45.7, 52.0], [45.8, 52.0], [45.9, 52.0], [46.0, 52.0], [46.1, 52.0], [46.2, 52.0], [46.3, 52.0], [46.4, 52.0], [46.5, 52.0], [46.6, 52.0], [46.7, 52.0], [46.8, 52.0], [46.9, 52.0], [47.0, 52.0], [47.1, 52.0], [47.2, 52.0], [47.3, 52.0], [47.4, 52.0], [47.5, 52.0], [47.6, 52.0], [47.7, 52.0], [47.8, 52.0], [47.9, 52.0], [48.0, 52.0], [48.1, 52.0], [48.2, 52.0], [48.3, 52.0], [48.4, 52.0], [48.5, 52.0], [48.6, 52.0], [48.7, 52.0], [48.8, 52.0], [48.9, 52.0], [49.0, 52.0], [49.1, 52.0], [49.2, 52.0], [49.3, 52.0], [49.4, 52.0], [49.5, 52.0], [49.6, 52.0], [49.7, 52.0], [49.8, 52.0], [49.9, 52.0], [50.0, 52.0], [50.1, 52.0], [50.2, 52.0], [50.3, 52.0], [50.4, 52.0], [50.5, 52.0], [50.6, 52.0], [50.7, 52.0], [50.8, 52.0], [50.9, 53.0], [51.0, 53.0], [51.1, 53.0], [51.2, 53.0], [51.3, 53.0], [51.4, 53.0], [51.5, 53.0], [51.6, 53.0], [51.7, 53.0], [51.8, 53.0], [51.9, 53.0], [52.0, 53.0], [52.1, 53.0], [52.2, 53.0], [52.3, 53.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 53.0], [53.1, 53.0], [53.2, 53.0], [53.3, 53.0], [53.4, 53.0], [53.5, 53.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 53.0], [54.1, 53.0], [54.2, 53.0], [54.3, 53.0], [54.4, 53.0], [54.5, 53.0], [54.6, 53.0], [54.7, 53.0], [54.8, 53.0], [54.9, 53.0], [55.0, 53.0], [55.1, 53.0], [55.2, 53.0], [55.3, 53.0], [55.4, 53.0], [55.5, 53.0], [55.6, 53.0], [55.7, 53.0], [55.8, 53.0], [55.9, 53.0], [56.0, 53.0], [56.1, 53.0], [56.2, 53.0], [56.3, 53.0], [56.4, 53.0], [56.5, 53.0], [56.6, 53.0], [56.7, 53.0], [56.8, 53.0], [56.9, 53.0], [57.0, 53.0], [57.1, 53.0], [57.2, 53.0], [57.3, 53.0], [57.4, 53.0], [57.5, 53.0], [57.6, 53.0], [57.7, 53.0], [57.8, 54.0], [57.9, 54.0], [58.0, 54.0], [58.1, 54.0], [58.2, 54.0], [58.3, 54.0], [58.4, 54.0], [58.5, 54.0], [58.6, 54.0], [58.7, 54.0], [58.8, 54.0], [58.9, 54.0], [59.0, 54.0], [59.1, 54.0], [59.2, 54.0], [59.3, 54.0], [59.4, 54.0], [59.5, 54.0], [59.6, 54.0], [59.7, 54.0], [59.8, 54.0], [59.9, 54.0], [60.0, 54.0], [60.1, 54.0], [60.2, 54.0], [60.3, 54.0], [60.4, 54.0], [60.5, 54.0], [60.6, 54.0], [60.7, 54.0], [60.8, 54.0], [60.9, 54.0], [61.0, 54.0], [61.1, 54.0], [61.2, 54.0], [61.3, 54.0], [61.4, 54.0], [61.5, 54.0], [61.6, 54.0], [61.7, 54.0], [61.8, 54.0], [61.9, 54.0], [62.0, 54.0], [62.1, 54.0], [62.2, 54.0], [62.3, 54.0], [62.4, 54.0], [62.5, 54.0], [62.6, 54.0], [62.7, 54.0], [62.8, 54.0], [62.9, 54.0], [63.0, 54.0], [63.1, 54.0], [63.2, 54.0], [63.3, 54.0], [63.4, 54.0], [63.5, 54.0], [63.6, 54.0], [63.7, 54.0], [63.8, 54.0], [63.9, 54.0], [64.0, 54.0], [64.1, 54.0], [64.2, 54.0], [64.3, 54.0], [64.4, 55.0], [64.5, 55.0], [64.6, 55.0], [64.7, 55.0], [64.8, 55.0], [64.9, 55.0], [65.0, 55.0], [65.1, 55.0], [65.2, 55.0], [65.3, 55.0], [65.4, 55.0], [65.5, 55.0], [65.6, 55.0], [65.7, 55.0], [65.8, 55.0], [65.9, 55.0], [66.0, 55.0], [66.1, 55.0], [66.2, 55.0], [66.3, 55.0], [66.4, 55.0], [66.5, 55.0], [66.6, 55.0], [66.7, 55.0], [66.8, 55.0], [66.9, 55.0], [67.0, 55.0], [67.1, 55.0], [67.2, 55.0], [67.3, 55.0], [67.4, 55.0], [67.5, 55.0], [67.6, 55.0], [67.7, 55.0], [67.8, 55.0], [67.9, 55.0], [68.0, 55.0], [68.1, 55.0], [68.2, 55.0], [68.3, 55.0], [68.4, 55.0], [68.5, 55.0], [68.6, 55.0], [68.7, 55.0], [68.8, 55.0], [68.9, 55.0], [69.0, 55.0], [69.1, 55.0], [69.2, 55.0], [69.3, 55.0], [69.4, 55.0], [69.5, 55.0], [69.6, 55.0], [69.7, 55.0], [69.8, 55.0], [69.9, 55.0], [70.0, 55.0], [70.1, 55.0], [70.2, 55.0], [70.3, 56.0], [70.4, 56.0], [70.5, 56.0], [70.6, 56.0], [70.7, 56.0], [70.8, 56.0], [70.9, 56.0], [71.0, 56.0], [71.1, 56.0], [71.2, 56.0], [71.3, 56.0], [71.4, 56.0], [71.5, 56.0], [71.6, 56.0], [71.7, 56.0], [71.8, 56.0], [71.9, 56.0], [72.0, 56.0], [72.1, 56.0], [72.2, 56.0], [72.3, 56.0], [72.4, 56.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 56.0], [73.0, 56.0], [73.1, 56.0], [73.2, 56.0], [73.3, 56.0], [73.4, 56.0], [73.5, 56.0], [73.6, 56.0], [73.7, 56.0], [73.8, 56.0], [73.9, 56.0], [74.0, 56.0], [74.1, 56.0], [74.2, 56.0], [74.3, 56.0], [74.4, 56.0], [74.5, 56.0], [74.6, 56.0], [74.7, 56.0], [74.8, 56.0], [74.9, 56.0], [75.0, 56.0], [75.1, 56.0], [75.2, 56.0], [75.3, 56.0], [75.4, 56.0], [75.5, 57.0], [75.6, 57.0], [75.7, 57.0], [75.8, 57.0], [75.9, 57.0], [76.0, 57.0], [76.1, 57.0], [76.2, 57.0], [76.3, 57.0], [76.4, 57.0], [76.5, 57.0], [76.6, 57.0], [76.7, 57.0], [76.8, 57.0], [76.9, 57.0], [77.0, 57.0], [77.1, 57.0], [77.2, 57.0], [77.3, 57.0], [77.4, 57.0], [77.5, 57.0], [77.6, 57.0], [77.7, 57.0], [77.8, 57.0], [77.9, 57.0], [78.0, 57.0], [78.1, 57.0], [78.2, 57.0], [78.3, 57.0], [78.4, 57.0], [78.5, 57.0], [78.6, 57.0], [78.7, 57.0], [78.8, 57.0], [78.9, 57.0], [79.0, 57.0], [79.1, 57.0], [79.2, 57.0], [79.3, 57.0], [79.4, 57.0], [79.5, 57.0], [79.6, 57.0], [79.7, 57.0], [79.8, 57.0], [79.9, 58.0], [80.0, 58.0], [80.1, 58.0], [80.2, 58.0], [80.3, 58.0], [80.4, 58.0], [80.5, 58.0], [80.6, 58.0], [80.7, 58.0], [80.8, 58.0], [80.9, 58.0], [81.0, 58.0], [81.1, 58.0], [81.2, 58.0], [81.3, 58.0], [81.4, 58.0], [81.5, 58.0], [81.6, 58.0], [81.7, 58.0], [81.8, 58.0], [81.9, 58.0], [82.0, 58.0], [82.1, 58.0], [82.2, 58.0], [82.3, 58.0], [82.4, 58.0], [82.5, 58.0], [82.6, 58.0], [82.7, 58.0], [82.8, 58.0], [82.9, 58.0], [83.0, 58.0], [83.1, 58.0], [83.2, 58.0], [83.3, 58.0], [83.4, 58.0], [83.5, 59.0], [83.6, 59.0], [83.7, 59.0], [83.8, 59.0], [83.9, 59.0], [84.0, 59.0], [84.1, 59.0], [84.2, 59.0], [84.3, 59.0], [84.4, 59.0], [84.5, 59.0], [84.6, 59.0], [84.7, 59.0], [84.8, 59.0], [84.9, 59.0], [85.0, 59.0], [85.1, 59.0], [85.2, 59.0], [85.3, 59.0], [85.4, 59.0], [85.5, 59.0], [85.6, 59.0], [85.7, 59.0], [85.8, 59.0], [85.9, 59.0], [86.0, 59.0], [86.1, 59.0], [86.2, 59.0], [86.3, 59.0], [86.4, 59.0], [86.5, 60.0], [86.6, 60.0], [86.7, 60.0], [86.8, 60.0], [86.9, 60.0], [87.0, 60.0], [87.1, 60.0], [87.2, 60.0], [87.3, 60.0], [87.4, 60.0], [87.5, 60.0], [87.6, 60.0], [87.7, 60.0], [87.8, 60.0], [87.9, 60.0], [88.0, 60.0], [88.1, 60.0], [88.2, 60.0], [88.3, 60.0], [88.4, 60.0], [88.5, 60.0], [88.6, 60.0], [88.7, 60.0], [88.8, 60.0], [88.9, 60.0], [89.0, 61.0], [89.1, 61.0], [89.2, 61.0], [89.3, 61.0], [89.4, 61.0], [89.5, 61.0], [89.6, 61.0], [89.7, 61.0], [89.8, 61.0], [89.9, 61.0], [90.0, 61.0], [90.1, 61.0], [90.2, 61.0], [90.3, 61.0], [90.4, 61.0], [90.5, 61.0], [90.6, 61.0], [90.7, 61.0], [90.8, 61.0], [90.9, 61.0], [91.0, 61.0], [91.1, 62.0], [91.2, 62.0], [91.3, 62.0], [91.4, 62.0], [91.5, 62.0], [91.6, 62.0], [91.7, 62.0], [91.8, 62.0], [91.9, 62.0], [92.0, 62.0], [92.1, 62.0], [92.2, 62.0], [92.3, 62.0], [92.4, 62.0], [92.5, 62.0], [92.6, 63.0], [92.7, 63.0], [92.8, 63.0], [92.9, 63.0], [93.0, 63.0], [93.1, 63.0], [93.2, 63.0], [93.3, 63.0], [93.4, 63.0], [93.5, 63.0], [93.6, 63.0], [93.7, 64.0], [93.8, 64.0], [93.9, 64.0], [94.0, 64.0], [94.1, 64.0], [94.2, 64.0], [94.3, 64.0], [94.4, 64.0], [94.5, 65.0], [94.6, 65.0], [94.7, 65.0], [94.8, 65.0], [94.9, 65.0], [95.0, 65.0], [95.1, 65.0], [95.2, 66.0], [95.3, 66.0], [95.4, 66.0], [95.5, 66.0], [95.6, 66.0], [95.7, 66.0], [95.8, 67.0], [95.9, 67.0], [96.0, 67.0], [96.1, 67.0], [96.2, 67.0], [96.3, 68.0], [96.4, 68.0], [96.5, 68.0], [96.6, 68.0], [96.7, 69.0], [96.8, 69.0], [96.9, 69.0], [97.0, 70.0], [97.1, 70.0], [97.2, 71.0], [97.3, 71.0], [97.4, 72.0], [97.5, 72.0], [97.6, 73.0], [97.7, 74.0], [97.8, 75.0], [97.9, 76.0], [98.0, 78.0], [98.1, 79.0], [98.2, 81.0], [98.3, 84.0], [98.4, 87.0], [98.5, 90.0], [98.6, 93.0], [98.7, 97.0], [98.8, 100.0], [98.9, 102.0], [99.0, 106.0], [99.1, 108.0], [99.2, 113.0], [99.3, 118.0], [99.4, 124.0], [99.5, 131.0], [99.6, 141.0], [99.7, 158.0], [99.8, 184.0], [99.9, 355.0], [100.0, 40495.0]], "isOverall": false, "label": "Get Cart 1", "isController": false}, {"data": [[0.0, 1.0], [0.1, 14.0], [0.2, 20.0], [0.3, 24.0], [0.4, 28.0], [0.5, 31.0], [0.6, 33.0], [0.7, 35.0], [0.8, 36.0], [0.9, 38.0], [1.0, 38.0], [1.1, 39.0], [1.2, 40.0], [1.3, 40.0], [1.4, 41.0], [1.5, 41.0], [1.6, 41.0], [1.7, 41.0], [1.8, 42.0], [1.9, 42.0], [2.0, 42.0], [2.1, 42.0], [2.2, 42.0], [2.3, 42.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 44.0], [3.4, 44.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 44.0], [4.0, 44.0], [4.1, 44.0], [4.2, 44.0], [4.3, 44.0], [4.4, 44.0], [4.5, 44.0], [4.6, 44.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 45.0], [5.1, 45.0], [5.2, 45.0], [5.3, 45.0], [5.4, 45.0], [5.5, 45.0], [5.6, 45.0], [5.7, 45.0], [5.8, 45.0], [5.9, 45.0], [6.0, 45.0], [6.1, 45.0], [6.2, 45.0], [6.3, 45.0], [6.4, 45.0], [6.5, 45.0], [6.6, 45.0], [6.7, 45.0], [6.8, 45.0], [6.9, 45.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 45.0], [7.4, 45.0], [7.5, 46.0], [7.6, 46.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 46.0], [10.6, 46.0], [10.7, 47.0], [10.8, 47.0], [10.9, 47.0], [11.0, 47.0], [11.1, 47.0], [11.2, 47.0], [11.3, 47.0], [11.4, 47.0], [11.5, 47.0], [11.6, 47.0], [11.7, 47.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 47.0], [14.1, 47.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 47.0], [15.1, 47.0], [15.2, 47.0], [15.3, 47.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 48.0], [17.3, 48.0], [17.4, 48.0], [17.5, 48.0], [17.6, 48.0], [17.7, 48.0], [17.8, 48.0], [17.9, 48.0], [18.0, 48.0], [18.1, 48.0], [18.2, 48.0], [18.3, 48.0], [18.4, 48.0], [18.5, 48.0], [18.6, 48.0], [18.7, 48.0], [18.8, 48.0], [18.9, 48.0], [19.0, 48.0], [19.1, 48.0], [19.2, 48.0], [19.3, 48.0], [19.4, 48.0], [19.5, 48.0], [19.6, 48.0], [19.7, 48.0], [19.8, 48.0], [19.9, 48.0], [20.0, 48.0], [20.1, 48.0], [20.2, 48.0], [20.3, 48.0], [20.4, 48.0], [20.5, 48.0], [20.6, 48.0], [20.7, 48.0], [20.8, 48.0], [20.9, 48.0], [21.0, 48.0], [21.1, 48.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 48.0], [22.3, 48.0], [22.4, 49.0], [22.5, 49.0], [22.6, 49.0], [22.7, 49.0], [22.8, 49.0], [22.9, 49.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 49.0], [24.2, 49.0], [24.3, 49.0], [24.4, 49.0], [24.5, 49.0], [24.6, 49.0], [24.7, 49.0], [24.8, 49.0], [24.9, 49.0], [25.0, 49.0], [25.1, 49.0], [25.2, 49.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 49.0], [26.4, 49.0], [26.5, 49.0], [26.6, 49.0], [26.7, 49.0], [26.8, 49.0], [26.9, 49.0], [27.0, 49.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 49.0], [27.6, 49.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 49.0], [29.6, 49.0], [29.7, 49.0], [29.8, 49.0], [29.9, 49.0], [30.0, 49.0], [30.1, 49.0], [30.2, 50.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 50.0], [30.9, 50.0], [31.0, 50.0], [31.1, 50.0], [31.2, 50.0], [31.3, 50.0], [31.4, 50.0], [31.5, 50.0], [31.6, 50.0], [31.7, 50.0], [31.8, 50.0], [31.9, 50.0], [32.0, 50.0], [32.1, 50.0], [32.2, 50.0], [32.3, 50.0], [32.4, 50.0], [32.5, 50.0], [32.6, 50.0], [32.7, 50.0], [32.8, 50.0], [32.9, 50.0], [33.0, 50.0], [33.1, 50.0], [33.2, 50.0], [33.3, 50.0], [33.4, 50.0], [33.5, 50.0], [33.6, 50.0], [33.7, 50.0], [33.8, 50.0], [33.9, 50.0], [34.0, 50.0], [34.1, 50.0], [34.2, 50.0], [34.3, 50.0], [34.4, 50.0], [34.5, 50.0], [34.6, 50.0], [34.7, 50.0], [34.8, 50.0], [34.9, 50.0], [35.0, 50.0], [35.1, 50.0], [35.2, 50.0], [35.3, 50.0], [35.4, 50.0], [35.5, 50.0], [35.6, 50.0], [35.7, 50.0], [35.8, 50.0], [35.9, 50.0], [36.0, 50.0], [36.1, 50.0], [36.2, 50.0], [36.3, 50.0], [36.4, 50.0], [36.5, 50.0], [36.6, 50.0], [36.7, 50.0], [36.8, 50.0], [36.9, 50.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 50.0], [37.4, 50.0], [37.5, 50.0], [37.6, 51.0], [37.7, 51.0], [37.8, 51.0], [37.9, 51.0], [38.0, 51.0], [38.1, 51.0], [38.2, 51.0], [38.3, 51.0], [38.4, 51.0], [38.5, 51.0], [38.6, 51.0], [38.7, 51.0], [38.8, 51.0], [38.9, 51.0], [39.0, 51.0], [39.1, 51.0], [39.2, 51.0], [39.3, 51.0], [39.4, 51.0], [39.5, 51.0], [39.6, 51.0], [39.7, 51.0], [39.8, 51.0], [39.9, 51.0], [40.0, 51.0], [40.1, 51.0], [40.2, 51.0], [40.3, 51.0], [40.4, 51.0], [40.5, 51.0], [40.6, 51.0], [40.7, 51.0], [40.8, 51.0], [40.9, 51.0], [41.0, 51.0], [41.1, 51.0], [41.2, 51.0], [41.3, 51.0], [41.4, 51.0], [41.5, 51.0], [41.6, 51.0], [41.7, 51.0], [41.8, 51.0], [41.9, 51.0], [42.0, 51.0], [42.1, 51.0], [42.2, 51.0], [42.3, 51.0], [42.4, 51.0], [42.5, 51.0], [42.6, 51.0], [42.7, 51.0], [42.8, 51.0], [42.9, 51.0], [43.0, 51.0], [43.1, 51.0], [43.2, 51.0], [43.3, 51.0], [43.4, 51.0], [43.5, 51.0], [43.6, 51.0], [43.7, 51.0], [43.8, 51.0], [43.9, 51.0], [44.0, 51.0], [44.1, 51.0], [44.2, 51.0], [44.3, 52.0], [44.4, 52.0], [44.5, 52.0], [44.6, 52.0], [44.7, 52.0], [44.8, 52.0], [44.9, 52.0], [45.0, 52.0], [45.1, 52.0], [45.2, 52.0], [45.3, 52.0], [45.4, 52.0], [45.5, 52.0], [45.6, 52.0], [45.7, 52.0], [45.8, 52.0], [45.9, 52.0], [46.0, 52.0], [46.1, 52.0], [46.2, 52.0], [46.3, 52.0], [46.4, 52.0], [46.5, 52.0], [46.6, 52.0], [46.7, 52.0], [46.8, 52.0], [46.9, 52.0], [47.0, 52.0], [47.1, 52.0], [47.2, 52.0], [47.3, 52.0], [47.4, 52.0], [47.5, 52.0], [47.6, 52.0], [47.7, 52.0], [47.8, 52.0], [47.9, 52.0], [48.0, 52.0], [48.1, 52.0], [48.2, 52.0], [48.3, 52.0], [48.4, 52.0], [48.5, 52.0], [48.6, 52.0], [48.7, 52.0], [48.8, 52.0], [48.9, 52.0], [49.0, 52.0], [49.1, 52.0], [49.2, 52.0], [49.3, 52.0], [49.4, 52.0], [49.5, 52.0], [49.6, 52.0], [49.7, 52.0], [49.8, 52.0], [49.9, 52.0], [50.0, 52.0], [50.1, 52.0], [50.2, 52.0], [50.3, 52.0], [50.4, 52.0], [50.5, 52.0], [50.6, 52.0], [50.7, 52.0], [50.8, 52.0], [50.9, 52.0], [51.0, 53.0], [51.1, 53.0], [51.2, 53.0], [51.3, 53.0], [51.4, 53.0], [51.5, 53.0], [51.6, 53.0], [51.7, 53.0], [51.8, 53.0], [51.9, 53.0], [52.0, 53.0], [52.1, 53.0], [52.2, 53.0], [52.3, 53.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 53.0], [53.1, 53.0], [53.2, 53.0], [53.3, 53.0], [53.4, 53.0], [53.5, 53.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 53.0], [54.1, 53.0], [54.2, 53.0], [54.3, 53.0], [54.4, 53.0], [54.5, 53.0], [54.6, 53.0], [54.7, 53.0], [54.8, 53.0], [54.9, 53.0], [55.0, 53.0], [55.1, 53.0], [55.2, 53.0], [55.3, 53.0], [55.4, 53.0], [55.5, 53.0], [55.6, 53.0], [55.7, 53.0], [55.8, 53.0], [55.9, 53.0], [56.0, 53.0], [56.1, 53.0], [56.2, 53.0], [56.3, 53.0], [56.4, 53.0], [56.5, 53.0], [56.6, 53.0], [56.7, 53.0], [56.8, 53.0], [56.9, 53.0], [57.0, 53.0], [57.1, 53.0], [57.2, 53.0], [57.3, 53.0], [57.4, 53.0], [57.5, 53.0], [57.6, 53.0], [57.7, 53.0], [57.8, 54.0], [57.9, 54.0], [58.0, 54.0], [58.1, 54.0], [58.2, 54.0], [58.3, 54.0], [58.4, 54.0], [58.5, 54.0], [58.6, 54.0], [58.7, 54.0], [58.8, 54.0], [58.9, 54.0], [59.0, 54.0], [59.1, 54.0], [59.2, 54.0], [59.3, 54.0], [59.4, 54.0], [59.5, 54.0], [59.6, 54.0], [59.7, 54.0], [59.8, 54.0], [59.9, 54.0], [60.0, 54.0], [60.1, 54.0], [60.2, 54.0], [60.3, 54.0], [60.4, 54.0], [60.5, 54.0], [60.6, 54.0], [60.7, 54.0], [60.8, 54.0], [60.9, 54.0], [61.0, 54.0], [61.1, 54.0], [61.2, 54.0], [61.3, 54.0], [61.4, 54.0], [61.5, 54.0], [61.6, 54.0], [61.7, 54.0], [61.8, 54.0], [61.9, 54.0], [62.0, 54.0], [62.1, 54.0], [62.2, 54.0], [62.3, 54.0], [62.4, 54.0], [62.5, 54.0], [62.6, 54.0], [62.7, 54.0], [62.8, 54.0], [62.9, 54.0], [63.0, 54.0], [63.1, 54.0], [63.2, 54.0], [63.3, 54.0], [63.4, 54.0], [63.5, 54.0], [63.6, 54.0], [63.7, 54.0], [63.8, 54.0], [63.9, 54.0], [64.0, 54.0], [64.1, 54.0], [64.2, 54.0], [64.3, 54.0], [64.4, 55.0], [64.5, 55.0], [64.6, 55.0], [64.7, 55.0], [64.8, 55.0], [64.9, 55.0], [65.0, 55.0], [65.1, 55.0], [65.2, 55.0], [65.3, 55.0], [65.4, 55.0], [65.5, 55.0], [65.6, 55.0], [65.7, 55.0], [65.8, 55.0], [65.9, 55.0], [66.0, 55.0], [66.1, 55.0], [66.2, 55.0], [66.3, 55.0], [66.4, 55.0], [66.5, 55.0], [66.6, 55.0], [66.7, 55.0], [66.8, 55.0], [66.9, 55.0], [67.0, 55.0], [67.1, 55.0], [67.2, 55.0], [67.3, 55.0], [67.4, 55.0], [67.5, 55.0], [67.6, 55.0], [67.7, 55.0], [67.8, 55.0], [67.9, 55.0], [68.0, 55.0], [68.1, 55.0], [68.2, 55.0], [68.3, 55.0], [68.4, 55.0], [68.5, 55.0], [68.6, 55.0], [68.7, 55.0], [68.8, 55.0], [68.9, 55.0], [69.0, 55.0], [69.1, 55.0], [69.2, 55.0], [69.3, 55.0], [69.4, 55.0], [69.5, 55.0], [69.6, 55.0], [69.7, 55.0], [69.8, 55.0], [69.9, 55.0], [70.0, 55.0], [70.1, 55.0], [70.2, 55.0], [70.3, 55.0], [70.4, 56.0], [70.5, 56.0], [70.6, 56.0], [70.7, 56.0], [70.8, 56.0], [70.9, 56.0], [71.0, 56.0], [71.1, 56.0], [71.2, 56.0], [71.3, 56.0], [71.4, 56.0], [71.5, 56.0], [71.6, 56.0], [71.7, 56.0], [71.8, 56.0], [71.9, 56.0], [72.0, 56.0], [72.1, 56.0], [72.2, 56.0], [72.3, 56.0], [72.4, 56.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 56.0], [73.0, 56.0], [73.1, 56.0], [73.2, 56.0], [73.3, 56.0], [73.4, 56.0], [73.5, 56.0], [73.6, 56.0], [73.7, 56.0], [73.8, 56.0], [73.9, 56.0], [74.0, 56.0], [74.1, 56.0], [74.2, 56.0], [74.3, 56.0], [74.4, 56.0], [74.5, 56.0], [74.6, 56.0], [74.7, 56.0], [74.8, 56.0], [74.9, 56.0], [75.0, 56.0], [75.1, 56.0], [75.2, 56.0], [75.3, 56.0], [75.4, 56.0], [75.5, 56.0], [75.6, 57.0], [75.7, 57.0], [75.8, 57.0], [75.9, 57.0], [76.0, 57.0], [76.1, 57.0], [76.2, 57.0], [76.3, 57.0], [76.4, 57.0], [76.5, 57.0], [76.6, 57.0], [76.7, 57.0], [76.8, 57.0], [76.9, 57.0], [77.0, 57.0], [77.1, 57.0], [77.2, 57.0], [77.3, 57.0], [77.4, 57.0], [77.5, 57.0], [77.6, 57.0], [77.7, 57.0], [77.8, 57.0], [77.9, 57.0], [78.0, 57.0], [78.1, 57.0], [78.2, 57.0], [78.3, 57.0], [78.4, 57.0], [78.5, 57.0], [78.6, 57.0], [78.7, 57.0], [78.8, 57.0], [78.9, 57.0], [79.0, 57.0], [79.1, 57.0], [79.2, 57.0], [79.3, 57.0], [79.4, 57.0], [79.5, 57.0], [79.6, 57.0], [79.7, 57.0], [79.8, 57.0], [79.9, 57.0], [80.0, 58.0], [80.1, 58.0], [80.2, 58.0], [80.3, 58.0], [80.4, 58.0], [80.5, 58.0], [80.6, 58.0], [80.7, 58.0], [80.8, 58.0], [80.9, 58.0], [81.0, 58.0], [81.1, 58.0], [81.2, 58.0], [81.3, 58.0], [81.4, 58.0], [81.5, 58.0], [81.6, 58.0], [81.7, 58.0], [81.8, 58.0], [81.9, 58.0], [82.0, 58.0], [82.1, 58.0], [82.2, 58.0], [82.3, 58.0], [82.4, 58.0], [82.5, 58.0], [82.6, 58.0], [82.7, 58.0], [82.8, 58.0], [82.9, 58.0], [83.0, 58.0], [83.1, 58.0], [83.2, 58.0], [83.3, 58.0], [83.4, 58.0], [83.5, 58.0], [83.6, 59.0], [83.7, 59.0], [83.8, 59.0], [83.9, 59.0], [84.0, 59.0], [84.1, 59.0], [84.2, 59.0], [84.3, 59.0], [84.4, 59.0], [84.5, 59.0], [84.6, 59.0], [84.7, 59.0], [84.8, 59.0], [84.9, 59.0], [85.0, 59.0], [85.1, 59.0], [85.2, 59.0], [85.3, 59.0], [85.4, 59.0], [85.5, 59.0], [85.6, 59.0], [85.7, 59.0], [85.8, 59.0], [85.9, 59.0], [86.0, 59.0], [86.1, 59.0], [86.2, 59.0], [86.3, 59.0], [86.4, 59.0], [86.5, 59.0], [86.6, 60.0], [86.7, 60.0], [86.8, 60.0], [86.9, 60.0], [87.0, 60.0], [87.1, 60.0], [87.2, 60.0], [87.3, 60.0], [87.4, 60.0], [87.5, 60.0], [87.6, 60.0], [87.7, 60.0], [87.8, 60.0], [87.9, 60.0], [88.0, 60.0], [88.1, 60.0], [88.2, 60.0], [88.3, 60.0], [88.4, 60.0], [88.5, 60.0], [88.6, 60.0], [88.7, 60.0], [88.8, 60.0], [88.9, 60.0], [89.0, 60.0], [89.1, 61.0], [89.2, 61.0], [89.3, 61.0], [89.4, 61.0], [89.5, 61.0], [89.6, 61.0], [89.7, 61.0], [89.8, 61.0], [89.9, 61.0], [90.0, 61.0], [90.1, 61.0], [90.2, 61.0], [90.3, 61.0], [90.4, 61.0], [90.5, 61.0], [90.6, 61.0], [90.7, 61.0], [90.8, 61.0], [90.9, 61.0], [91.0, 61.0], [91.1, 62.0], [91.2, 62.0], [91.3, 62.0], [91.4, 62.0], [91.5, 62.0], [91.6, 62.0], [91.7, 62.0], [91.8, 62.0], [91.9, 62.0], [92.0, 62.0], [92.1, 62.0], [92.2, 62.0], [92.3, 62.0], [92.4, 62.0], [92.5, 62.0], [92.6, 63.0], [92.7, 63.0], [92.8, 63.0], [92.9, 63.0], [93.0, 63.0], [93.1, 63.0], [93.2, 63.0], [93.3, 63.0], [93.4, 63.0], [93.5, 63.0], [93.6, 63.0], [93.7, 64.0], [93.8, 64.0], [93.9, 64.0], [94.0, 64.0], [94.1, 64.0], [94.2, 64.0], [94.3, 64.0], [94.4, 64.0], [94.5, 64.0], [94.6, 65.0], [94.7, 65.0], [94.8, 65.0], [94.9, 65.0], [95.0, 65.0], [95.1, 65.0], [95.2, 65.0], [95.3, 66.0], [95.4, 66.0], [95.5, 66.0], [95.6, 66.0], [95.7, 66.0], [95.8, 66.0], [95.9, 67.0], [96.0, 67.0], [96.1, 67.0], [96.2, 67.0], [96.3, 68.0], [96.4, 68.0], [96.5, 68.0], [96.6, 68.0], [96.7, 69.0], [96.8, 69.0], [96.9, 69.0], [97.0, 70.0], [97.1, 70.0], [97.2, 70.0], [97.3, 71.0], [97.4, 71.0], [97.5, 72.0], [97.6, 73.0], [97.7, 74.0], [97.8, 75.0], [97.9, 76.0], [98.0, 77.0], [98.1, 79.0], [98.2, 81.0], [98.3, 83.0], [98.4, 86.0], [98.5, 89.0], [98.6, 92.0], [98.7, 96.0], [98.8, 99.0], [98.9, 102.0], [99.0, 105.0], [99.1, 108.0], [99.2, 112.0], [99.3, 116.0], [99.4, 123.0], [99.5, 131.0], [99.6, 141.0], [99.7, 157.0], [99.8, 183.0], [99.9, 346.0]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[0.0, 1.0], [0.1, 10.0], [0.2, 16.0], [0.3, 20.0], [0.4, 24.0], [0.5, 28.0], [0.6, 31.0], [0.7, 33.0], [0.8, 35.0], [0.9, 37.0], [1.0, 38.0], [1.1, 39.0], [1.2, 39.0], [1.3, 40.0], [1.4, 40.0], [1.5, 41.0], [1.6, 41.0], [1.7, 41.0], [1.8, 42.0], [1.9, 42.0], [2.0, 42.0], [2.1, 42.0], [2.2, 42.0], [2.3, 42.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 44.0], [3.4, 44.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 44.0], [4.0, 44.0], [4.1, 44.0], [4.2, 44.0], [4.3, 44.0], [4.4, 44.0], [4.5, 44.0], [4.6, 44.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 45.0], [5.1, 45.0], [5.2, 45.0], [5.3, 45.0], [5.4, 45.0], [5.5, 45.0], [5.6, 45.0], [5.7, 45.0], [5.8, 45.0], [5.9, 45.0], [6.0, 45.0], [6.1, 45.0], [6.2, 45.0], [6.3, 45.0], [6.4, 45.0], [6.5, 45.0], [6.6, 45.0], [6.7, 45.0], [6.8, 45.0], [6.9, 45.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 45.0], [7.4, 46.0], [7.5, 46.0], [7.6, 46.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 47.0], [10.6, 47.0], [10.7, 47.0], [10.8, 47.0], [10.9, 47.0], [11.0, 47.0], [11.1, 47.0], [11.2, 47.0], [11.3, 47.0], [11.4, 47.0], [11.5, 47.0], [11.6, 47.0], [11.7, 47.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 47.0], [14.1, 47.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 47.0], [15.1, 47.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 48.0], [17.3, 48.0], [17.4, 48.0], [17.5, 48.0], [17.6, 48.0], [17.7, 48.0], [17.8, 48.0], [17.9, 48.0], [18.0, 48.0], [18.1, 48.0], [18.2, 48.0], [18.3, 48.0], [18.4, 48.0], [18.5, 48.0], [18.6, 48.0], [18.7, 48.0], [18.8, 48.0], [18.9, 48.0], [19.0, 48.0], [19.1, 48.0], [19.2, 48.0], [19.3, 48.0], [19.4, 48.0], [19.5, 48.0], [19.6, 48.0], [19.7, 48.0], [19.8, 48.0], [19.9, 48.0], [20.0, 48.0], [20.1, 48.0], [20.2, 48.0], [20.3, 48.0], [20.4, 48.0], [20.5, 48.0], [20.6, 48.0], [20.7, 48.0], [20.8, 48.0], [20.9, 48.0], [21.0, 48.0], [21.1, 48.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 49.0], [22.2, 49.0], [22.3, 49.0], [22.4, 49.0], [22.5, 49.0], [22.6, 49.0], [22.7, 49.0], [22.8, 49.0], [22.9, 49.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 49.0], [24.2, 49.0], [24.3, 49.0], [24.4, 49.0], [24.5, 49.0], [24.6, 49.0], [24.7, 49.0], [24.8, 49.0], [24.9, 49.0], [25.0, 49.0], [25.1, 49.0], [25.2, 49.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 49.0], [26.4, 49.0], [26.5, 49.0], [26.6, 49.0], [26.7, 49.0], [26.8, 49.0], [26.9, 49.0], [27.0, 49.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 49.0], [27.6, 49.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 49.0], [29.6, 49.0], [29.7, 49.0], [29.8, 49.0], [29.9, 50.0], [30.0, 50.0], [30.1, 50.0], [30.2, 50.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 50.0], [30.9, 50.0], [31.0, 50.0], [31.1, 50.0], [31.2, 50.0], [31.3, 50.0], [31.4, 50.0], [31.5, 50.0], [31.6, 50.0], [31.7, 50.0], [31.8, 50.0], [31.9, 50.0], [32.0, 50.0], [32.1, 50.0], [32.2, 50.0], [32.3, 50.0], [32.4, 50.0], [32.5, 50.0], [32.6, 50.0], [32.7, 50.0], [32.8, 50.0], [32.9, 50.0], [33.0, 50.0], [33.1, 50.0], [33.2, 50.0], [33.3, 50.0], [33.4, 50.0], [33.5, 50.0], [33.6, 50.0], [33.7, 50.0], [33.8, 50.0], [33.9, 50.0], [34.0, 50.0], [34.1, 50.0], [34.2, 50.0], [34.3, 50.0], [34.4, 50.0], [34.5, 50.0], [34.6, 50.0], [34.7, 50.0], [34.8, 50.0], [34.9, 50.0], [35.0, 50.0], [35.1, 50.0], [35.2, 50.0], [35.3, 50.0], [35.4, 50.0], [35.5, 50.0], [35.6, 50.0], [35.7, 50.0], [35.8, 50.0], [35.9, 50.0], [36.0, 50.0], [36.1, 50.0], [36.2, 50.0], [36.3, 50.0], [36.4, 50.0], [36.5, 50.0], [36.6, 50.0], [36.7, 50.0], [36.8, 50.0], [36.9, 50.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 51.0], [37.4, 51.0], [37.5, 51.0], [37.6, 51.0], [37.7, 51.0], [37.8, 51.0], [37.9, 51.0], [38.0, 51.0], [38.1, 51.0], [38.2, 51.0], [38.3, 51.0], [38.4, 51.0], [38.5, 51.0], [38.6, 51.0], [38.7, 51.0], [38.8, 51.0], [38.9, 51.0], [39.0, 51.0], [39.1, 51.0], [39.2, 51.0], [39.3, 51.0], [39.4, 51.0], [39.5, 51.0], [39.6, 51.0], [39.7, 51.0], [39.8, 51.0], [39.9, 51.0], [40.0, 51.0], [40.1, 51.0], [40.2, 51.0], [40.3, 51.0], [40.4, 51.0], [40.5, 51.0], [40.6, 51.0], [40.7, 51.0], [40.8, 51.0], [40.9, 51.0], [41.0, 51.0], [41.1, 51.0], [41.2, 51.0], [41.3, 51.0], [41.4, 51.0], [41.5, 51.0], [41.6, 51.0], [41.7, 51.0], [41.8, 51.0], [41.9, 51.0], [42.0, 51.0], [42.1, 51.0], [42.2, 51.0], [42.3, 51.0], [42.4, 51.0], [42.5, 51.0], [42.6, 51.0], [42.7, 51.0], [42.8, 51.0], [42.9, 51.0], [43.0, 51.0], [43.1, 51.0], [43.2, 51.0], [43.3, 51.0], [43.4, 51.0], [43.5, 51.0], [43.6, 51.0], [43.7, 51.0], [43.8, 51.0], [43.9, 52.0], [44.0, 52.0], [44.1, 52.0], [44.2, 52.0], [44.3, 52.0], [44.4, 52.0], [44.5, 52.0], [44.6, 52.0], [44.7, 52.0], [44.8, 52.0], [44.9, 52.0], [45.0, 52.0], [45.1, 52.0], [45.2, 52.0], [45.3, 52.0], [45.4, 52.0], [45.5, 52.0], [45.6, 52.0], [45.7, 52.0], [45.8, 52.0], [45.9, 52.0], [46.0, 52.0], [46.1, 52.0], [46.2, 52.0], [46.3, 52.0], [46.4, 52.0], [46.5, 52.0], [46.6, 52.0], [46.7, 52.0], [46.8, 52.0], [46.9, 52.0], [47.0, 52.0], [47.1, 52.0], [47.2, 52.0], [47.3, 52.0], [47.4, 52.0], [47.5, 52.0], [47.6, 52.0], [47.7, 52.0], [47.8, 52.0], [47.9, 52.0], [48.0, 52.0], [48.1, 52.0], [48.2, 52.0], [48.3, 52.0], [48.4, 52.0], [48.5, 52.0], [48.6, 52.0], [48.7, 52.0], [48.8, 52.0], [48.9, 52.0], [49.0, 52.0], [49.1, 52.0], [49.2, 52.0], [49.3, 52.0], [49.4, 52.0], [49.5, 52.0], [49.6, 52.0], [49.7, 52.0], [49.8, 52.0], [49.9, 52.0], [50.0, 52.0], [50.1, 52.0], [50.2, 52.0], [50.3, 52.0], [50.4, 52.0], [50.5, 52.0], [50.6, 53.0], [50.7, 53.0], [50.8, 53.0], [50.9, 53.0], [51.0, 53.0], [51.1, 53.0], [51.2, 53.0], [51.3, 53.0], [51.4, 53.0], [51.5, 53.0], [51.6, 53.0], [51.7, 53.0], [51.8, 53.0], [51.9, 53.0], [52.0, 53.0], [52.1, 53.0], [52.2, 53.0], [52.3, 53.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 53.0], [53.1, 53.0], [53.2, 53.0], [53.3, 53.0], [53.4, 53.0], [53.5, 53.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 53.0], [54.1, 53.0], [54.2, 53.0], [54.3, 53.0], [54.4, 53.0], [54.5, 53.0], [54.6, 53.0], [54.7, 53.0], [54.8, 53.0], [54.9, 53.0], [55.0, 53.0], [55.1, 53.0], [55.2, 53.0], [55.3, 53.0], [55.4, 53.0], [55.5, 53.0], [55.6, 53.0], [55.7, 53.0], [55.8, 53.0], [55.9, 53.0], [56.0, 53.0], [56.1, 53.0], [56.2, 53.0], [56.3, 53.0], [56.4, 53.0], [56.5, 53.0], [56.6, 53.0], [56.7, 53.0], [56.8, 53.0], [56.9, 53.0], [57.0, 53.0], [57.1, 53.0], [57.2, 53.0], [57.3, 53.0], [57.4, 53.0], [57.5, 54.0], [57.6, 54.0], [57.7, 54.0], [57.8, 54.0], [57.9, 54.0], [58.0, 54.0], [58.1, 54.0], [58.2, 54.0], [58.3, 54.0], [58.4, 54.0], [58.5, 54.0], [58.6, 54.0], [58.7, 54.0], [58.8, 54.0], [58.9, 54.0], [59.0, 54.0], [59.1, 54.0], [59.2, 54.0], [59.3, 54.0], [59.4, 54.0], [59.5, 54.0], [59.6, 54.0], [59.7, 54.0], [59.8, 54.0], [59.9, 54.0], [60.0, 54.0], [60.1, 54.0], [60.2, 54.0], [60.3, 54.0], [60.4, 54.0], [60.5, 54.0], [60.6, 54.0], [60.7, 54.0], [60.8, 54.0], [60.9, 54.0], [61.0, 54.0], [61.1, 54.0], [61.2, 54.0], [61.3, 54.0], [61.4, 54.0], [61.5, 54.0], [61.6, 54.0], [61.7, 54.0], [61.8, 54.0], [61.9, 54.0], [62.0, 54.0], [62.1, 54.0], [62.2, 54.0], [62.3, 54.0], [62.4, 54.0], [62.5, 54.0], [62.6, 54.0], [62.7, 54.0], [62.8, 54.0], [62.9, 54.0], [63.0, 54.0], [63.1, 54.0], [63.2, 54.0], [63.3, 54.0], [63.4, 54.0], [63.5, 54.0], [63.6, 54.0], [63.7, 54.0], [63.8, 54.0], [63.9, 54.0], [64.0, 54.0], [64.1, 55.0], [64.2, 55.0], [64.3, 55.0], [64.4, 55.0], [64.5, 55.0], [64.6, 55.0], [64.7, 55.0], [64.8, 55.0], [64.9, 55.0], [65.0, 55.0], [65.1, 55.0], [65.2, 55.0], [65.3, 55.0], [65.4, 55.0], [65.5, 55.0], [65.6, 55.0], [65.7, 55.0], [65.8, 55.0], [65.9, 55.0], [66.0, 55.0], [66.1, 55.0], [66.2, 55.0], [66.3, 55.0], [66.4, 55.0], [66.5, 55.0], [66.6, 55.0], [66.7, 55.0], [66.8, 55.0], [66.9, 55.0], [67.0, 55.0], [67.1, 55.0], [67.2, 55.0], [67.3, 55.0], [67.4, 55.0], [67.5, 55.0], [67.6, 55.0], [67.7, 55.0], [67.8, 55.0], [67.9, 55.0], [68.0, 55.0], [68.1, 55.0], [68.2, 55.0], [68.3, 55.0], [68.4, 55.0], [68.5, 55.0], [68.6, 55.0], [68.7, 55.0], [68.8, 55.0], [68.9, 55.0], [69.0, 55.0], [69.1, 55.0], [69.2, 55.0], [69.3, 55.0], [69.4, 55.0], [69.5, 55.0], [69.6, 55.0], [69.7, 55.0], [69.8, 55.0], [69.9, 55.0], [70.0, 55.0], [70.1, 56.0], [70.2, 56.0], [70.3, 56.0], [70.4, 56.0], [70.5, 56.0], [70.6, 56.0], [70.7, 56.0], [70.8, 56.0], [70.9, 56.0], [71.0, 56.0], [71.1, 56.0], [71.2, 56.0], [71.3, 56.0], [71.4, 56.0], [71.5, 56.0], [71.6, 56.0], [71.7, 56.0], [71.8, 56.0], [71.9, 56.0], [72.0, 56.0], [72.1, 56.0], [72.2, 56.0], [72.3, 56.0], [72.4, 56.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 56.0], [73.0, 56.0], [73.1, 56.0], [73.2, 56.0], [73.3, 56.0], [73.4, 56.0], [73.5, 56.0], [73.6, 56.0], [73.7, 56.0], [73.8, 56.0], [73.9, 56.0], [74.0, 56.0], [74.1, 56.0], [74.2, 56.0], [74.3, 56.0], [74.4, 56.0], [74.5, 56.0], [74.6, 56.0], [74.7, 56.0], [74.8, 56.0], [74.9, 56.0], [75.0, 56.0], [75.1, 56.0], [75.2, 56.0], [75.3, 57.0], [75.4, 57.0], [75.5, 57.0], [75.6, 57.0], [75.7, 57.0], [75.8, 57.0], [75.9, 57.0], [76.0, 57.0], [76.1, 57.0], [76.2, 57.0], [76.3, 57.0], [76.4, 57.0], [76.5, 57.0], [76.6, 57.0], [76.7, 57.0], [76.8, 57.0], [76.9, 57.0], [77.0, 57.0], [77.1, 57.0], [77.2, 57.0], [77.3, 57.0], [77.4, 57.0], [77.5, 57.0], [77.6, 57.0], [77.7, 57.0], [77.8, 57.0], [77.9, 57.0], [78.0, 57.0], [78.1, 57.0], [78.2, 57.0], [78.3, 57.0], [78.4, 57.0], [78.5, 57.0], [78.6, 57.0], [78.7, 57.0], [78.8, 57.0], [78.9, 57.0], [79.0, 57.0], [79.1, 57.0], [79.2, 57.0], [79.3, 57.0], [79.4, 57.0], [79.5, 57.0], [79.6, 57.0], [79.7, 58.0], [79.8, 58.0], [79.9, 58.0], [80.0, 58.0], [80.1, 58.0], [80.2, 58.0], [80.3, 58.0], [80.4, 58.0], [80.5, 58.0], [80.6, 58.0], [80.7, 58.0], [80.8, 58.0], [80.9, 58.0], [81.0, 58.0], [81.1, 58.0], [81.2, 58.0], [81.3, 58.0], [81.4, 58.0], [81.5, 58.0], [81.6, 58.0], [81.7, 58.0], [81.8, 58.0], [81.9, 58.0], [82.0, 58.0], [82.1, 58.0], [82.2, 58.0], [82.3, 58.0], [82.4, 58.0], [82.5, 58.0], [82.6, 58.0], [82.7, 58.0], [82.8, 58.0], [82.9, 58.0], [83.0, 58.0], [83.1, 58.0], [83.2, 58.0], [83.3, 58.0], [83.4, 59.0], [83.5, 59.0], [83.6, 59.0], [83.7, 59.0], [83.8, 59.0], [83.9, 59.0], [84.0, 59.0], [84.1, 59.0], [84.2, 59.0], [84.3, 59.0], [84.4, 59.0], [84.5, 59.0], [84.6, 59.0], [84.7, 59.0], [84.8, 59.0], [84.9, 59.0], [85.0, 59.0], [85.1, 59.0], [85.2, 59.0], [85.3, 59.0], [85.4, 59.0], [85.5, 59.0], [85.6, 59.0], [85.7, 59.0], [85.8, 59.0], [85.9, 59.0], [86.0, 59.0], [86.1, 59.0], [86.2, 59.0], [86.3, 59.0], [86.4, 60.0], [86.5, 60.0], [86.6, 60.0], [86.7, 60.0], [86.8, 60.0], [86.9, 60.0], [87.0, 60.0], [87.1, 60.0], [87.2, 60.0], [87.3, 60.0], [87.4, 60.0], [87.5, 60.0], [87.6, 60.0], [87.7, 60.0], [87.8, 60.0], [87.9, 60.0], [88.0, 60.0], [88.1, 60.0], [88.2, 60.0], [88.3, 60.0], [88.4, 60.0], [88.5, 60.0], [88.6, 60.0], [88.7, 60.0], [88.8, 60.0], [88.9, 61.0], [89.0, 61.0], [89.1, 61.0], [89.2, 61.0], [89.3, 61.0], [89.4, 61.0], [89.5, 61.0], [89.6, 61.0], [89.7, 61.0], [89.8, 61.0], [89.9, 61.0], [90.0, 61.0], [90.1, 61.0], [90.2, 61.0], [90.3, 61.0], [90.4, 61.0], [90.5, 61.0], [90.6, 61.0], [90.7, 61.0], [90.8, 61.0], [90.9, 61.0], [91.0, 62.0], [91.1, 62.0], [91.2, 62.0], [91.3, 62.0], [91.4, 62.0], [91.5, 62.0], [91.6, 62.0], [91.7, 62.0], [91.8, 62.0], [91.9, 62.0], [92.0, 62.0], [92.1, 62.0], [92.2, 62.0], [92.3, 62.0], [92.4, 62.0], [92.5, 63.0], [92.6, 63.0], [92.7, 63.0], [92.8, 63.0], [92.9, 63.0], [93.0, 63.0], [93.1, 63.0], [93.2, 63.0], [93.3, 63.0], [93.4, 63.0], [93.5, 63.0], [93.6, 64.0], [93.7, 64.0], [93.8, 64.0], [93.9, 64.0], [94.0, 64.0], [94.1, 64.0], [94.2, 64.0], [94.3, 64.0], [94.4, 64.0], [94.5, 65.0], [94.6, 65.0], [94.7, 65.0], [94.8, 65.0], [94.9, 65.0], [95.0, 65.0], [95.1, 65.0], [95.2, 66.0], [95.3, 66.0], [95.4, 66.0], [95.5, 66.0], [95.6, 66.0], [95.7, 66.0], [95.8, 67.0], [95.9, 67.0], [96.0, 67.0], [96.1, 67.0], [96.2, 67.0], [96.3, 68.0], [96.4, 68.0], [96.5, 68.0], [96.6, 68.0], [96.7, 69.0], [96.8, 69.0], [96.9, 69.0], [97.0, 70.0], [97.1, 70.0], [97.2, 71.0], [97.3, 71.0], [97.4, 72.0], [97.5, 73.0], [97.6, 73.0], [97.7, 74.0], [97.8, 76.0], [97.9, 77.0], [98.0, 78.0], [98.1, 80.0], [98.2, 82.0], [98.3, 84.0], [98.4, 87.0], [98.5, 90.0], [98.6, 94.0], [98.7, 97.0], [98.8, 100.0], [98.9, 103.0], [99.0, 106.0], [99.1, 109.0], [99.2, 113.0], [99.3, 118.0], [99.4, 125.0], [99.5, 132.0], [99.6, 142.0], [99.7, 158.0], [99.8, 183.0], [99.9, 354.0]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1270388.0, "series": [{"data": [[0.0, 1269069.0], [600.0, 119.0], [700.0, 158.0], [800.0, 56.0], [900.0, 25.0], [1000.0, 3.0], [1100.0, 3.0], [1300.0, 1.0], [1400.0, 54.0], [1500.0, 13.0], [2000.0, 27.0], [2300.0, 14.0], [2400.0, 2.0], [2700.0, 1.0], [2800.0, 32.0], [2900.0, 15.0], [3000.0, 23.0], [3800.0, 14.0], [5100.0, 2.0], [4900.0, 2.0], [5300.0, 3.0], [5200.0, 4.0], [5600.0, 2.0], [5400.0, 3.0], [5500.0, 1.0], [5800.0, 14.0], [5900.0, 8.0], [6200.0, 29.0], [8200.0, 21.0], [8300.0, 4.0], [9200.0, 21.0], [9500.0, 3.0], [9400.0, 22.0], [10200.0, 3.0], [10100.0, 6.0], [10000.0, 4.0], [10700.0, 7.0], [10600.0, 2.0], [10500.0, 5.0], [10400.0, 6.0], [10300.0, 1.0], [10800.0, 11.0], [10900.0, 24.0], [11600.0, 18.0], [11500.0, 1.0], [11300.0, 22.0], [11900.0, 13.0], [12000.0, 6.0], [14500.0, 1.0], [17400.0, 20.0], [17300.0, 1.0], [18600.0, 12.0], [18500.0, 5.0], [19700.0, 2.0], [100.0, 13492.0], [29600.0, 1.0], [29500.0, 1.0], [31800.0, 25.0], [40000.0, 2.0], [39500.0, 4.0], [40300.0, 1.0], [40200.0, 1.0], [40100.0, 2.0], [39900.0, 2.0], [39800.0, 2.0], [39700.0, 4.0], [39600.0, 2.0], [200.0, 438.0], [300.0, 413.0], [400.0, 68.0], [500.0, 72.0]], "isOverall": false, "label": "Get Cart 2", "isController": false}, {"data": [[0.0, 1266401.0], [600.0, 129.0], [700.0, 165.0], [800.0, 62.0], [900.0, 16.0], [1000.0, 3.0], [1100.0, 6.0], [1400.0, 51.0], [1500.0, 5.0], [2000.0, 25.0], [2300.0, 19.0], [2400.0, 6.0], [2800.0, 27.0], [2900.0, 21.0], [3000.0, 20.0], [3800.0, 23.0], [5100.0, 1.0], [4900.0, 4.0], [5300.0, 2.0], [5200.0, 1.0], [5600.0, 1.0], [5400.0, 1.0], [5500.0, 1.0], [5700.0, 3.0], [5800.0, 10.0], [6000.0, 2.0], [5900.0, 17.0], [6200.0, 19.0], [8300.0, 3.0], [8200.0, 17.0], [9200.0, 11.0], [9400.0, 16.0], [9500.0, 4.0], [10200.0, 3.0], [10100.0, 4.0], [10000.0, 2.0], [9900.0, 1.0], [10700.0, 5.0], [10600.0, 5.0], [10400.0, 4.0], [10300.0, 3.0], [10500.0, 3.0], [10800.0, 14.0], [10900.0, 26.0], [11600.0, 18.0], [11300.0, 26.0], [11900.0, 11.0], [12000.0, 7.0], [17400.0, 31.0], [17300.0, 2.0], [18600.0, 19.0], [18500.0, 8.0], [19700.0, 1.0], [100.0, 13495.0], [31800.0, 20.0], [40000.0, 2.0], [40400.0, 5.0], [40300.0, 2.0], [40100.0, 3.0], [39900.0, 5.0], [39800.0, 2.0], [39700.0, 2.0], [39600.0, 1.0], [39500.0, 1.0], [200.0, 424.0], [300.0, 421.0], [400.0, 63.0], [500.0, 61.0]], "isOverall": false, "label": "Get Cart 1", "isController": false}, {"data": [[0.0, 1270388.0], [600.0, 123.0], [700.0, 162.0], [800.0, 76.0], [900.0, 26.0], [1000.0, 6.0], [1100.0, 2.0], [1400.0, 20.0], [1500.0, 4.0], [1900.0, 1.0], [2000.0, 16.0], [2300.0, 15.0], [2400.0, 3.0], [2700.0, 1.0], [2800.0, 21.0], [2900.0, 16.0], [3000.0, 19.0], [3800.0, 21.0], [5100.0, 3.0], [4900.0, 2.0], [5200.0, 3.0], [5600.0, 2.0], [5400.0, 2.0], [5500.0, 1.0], [5800.0, 14.0], [5700.0, 2.0], [5900.0, 17.0], [6000.0, 1.0], [6200.0, 18.0], [8200.0, 13.0], [8300.0, 5.0], [9200.0, 22.0], [9400.0, 17.0], [9500.0, 6.0], [10100.0, 4.0], [10000.0, 2.0], [10200.0, 4.0], [10700.0, 5.0], [10600.0, 3.0], [10500.0, 5.0], [10300.0, 5.0], [10400.0, 5.0], [10800.0, 13.0], [11000.0, 1.0], [10900.0, 23.0], [11600.0, 22.0], [11500.0, 2.0], [11300.0, 17.0], [12000.0, 9.0], [11900.0, 21.0], [14600.0, 1.0], [14500.0, 2.0], [17400.0, 25.0], [17300.0, 1.0], [18600.0, 13.0], [18500.0, 6.0], [100.0, 13412.0], [31800.0, 21.0], [40100.0, 2.0], [40400.0, 4.0], [40500.0, 1.0], [40300.0, 4.0], [40200.0, 4.0], [39800.0, 1.0], [39700.0, 1.0], [39600.0, 1.0], [39500.0, 2.0], [200.0, 440.0], [300.0, 422.0], [400.0, 67.0], [500.0, 60.0]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[0.0, 1253339.0], [600.0, 124.0], [700.0, 168.0], [800.0, 61.0], [900.0, 20.0], [1000.0, 6.0], [1100.0, 2.0], [1400.0, 16.0], [1500.0, 2.0], [1900.0, 2.0], [2000.0, 16.0], [2300.0, 17.0], [2400.0, 1.0], [2800.0, 20.0], [2900.0, 14.0], [3000.0, 21.0], [3800.0, 26.0], [5100.0, 2.0], [4900.0, 1.0], [5200.0, 1.0], [5600.0, 2.0], [5500.0, 3.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 6.0], [6100.0, 1.0], [5900.0, 15.0], [6200.0, 17.0], [8200.0, 18.0], [8300.0, 2.0], [9200.0, 30.0], [9500.0, 2.0], [9400.0, 13.0], [10200.0, 2.0], [10100.0, 3.0], [10000.0, 4.0], [10700.0, 8.0], [10600.0, 3.0], [10500.0, 2.0], [10400.0, 3.0], [10300.0, 2.0], [10800.0, 42.0], [10900.0, 20.0], [11600.0, 22.0], [11300.0, 19.0], [12000.0, 6.0], [11900.0, 11.0], [17400.0, 60.0], [18600.0, 18.0], [18500.0, 2.0], [19700.0, 3.0], [100.0, 13571.0], [26900.0, 4.0], [27000.0, 1.0], [29500.0, 3.0], [31800.0, 17.0], [40100.0, 1.0], [39500.0, 7.0], [39600.0, 2.0], [40300.0, 3.0], [40400.0, 3.0], [40200.0, 2.0], [40000.0, 3.0], [39900.0, 1.0], [39800.0, 1.0], [39700.0, 1.0], [200.0, 439.0], [300.0, 411.0], [400.0, 58.0], [500.0, 62.0]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 40500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1914.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5116835.0, "series": [{"data": [[0.0, 5116835.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1914.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1981.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 249.8273663802314, "minX": 1.64933754E12, "maxY": 250.0, "series": [{"data": [[1.64933754E12, 249.9729218782841], [1.64933784E12, 249.8273663802314], [1.64933772E12, 250.0], [1.64933778E12, 250.0], [1.6493376E12, 250.0], [1.64933766E12, 250.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64933784E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 10466.5, "series": [{"data": [[5.0, 19.0], [9.0, 19.0], [10.0, 29.5], [11.0, 35.5], [12.0, 19.0], [16.0, 15.0], [21.0, 33.0], [23.0, 27.0], [25.0, 34.0], [27.0, 20.75], [30.0, 20.5], [33.0, 41.0], [32.0, 31.0], [34.0, 44.5], [37.0, 40.333333333333336], [36.0, 51.0], [38.0, 42.25], [41.0, 19.0], [40.0, 38.666666666666664], [44.0, 15.666666666666666], [46.0, 17.0], [53.0, 25.25], [52.0, 26.0], [55.0, 23.0], [57.0, 26.0], [58.0, 31.0], [60.0, 28.333333333333332], [62.0, 24.5], [67.0, 26.5], [65.0, 29.333333333333332], [70.0, 27.5], [69.0, 30.0], [75.0, 29.333333333333332], [72.0, 31.0], [79.0, 36.0], [78.0, 31.666666666666668], [83.0, 31.0], [82.0, 36.0], [80.0, 30.0], [87.0, 31.0], [84.0, 37.0], [91.0, 35.5], [89.0, 35.5], [88.0, 36.0], [95.0, 34.666666666666664], [92.0, 35.0], [98.0, 35.5], [97.0, 34.0], [103.0, 35.0], [102.0, 35.0], [100.0, 34.0], [106.0, 38.0], [104.0, 46.0], [112.0, 37.166666666666664], [117.0, 44.333333333333336], [122.0, 47.0], [121.0, 44.0], [120.0, 44.0], [127.0, 45.0], [126.0, 46.0], [124.0, 48.5], [135.0, 47.0], [133.0, 48.0], [130.0, 45.0], [128.0, 45.5], [142.0, 50.0], [139.0, 48.0], [151.0, 54.0], [148.0, 51.333333333333336], [147.0, 48.5], [158.0, 53.0], [155.0, 52.666666666666664], [152.0, 55.0], [166.0, 51.5], [163.0, 53.0], [162.0, 53.0], [160.0, 51.0], [175.0, 54.0], [173.0, 55.0], [171.0, 55.0], [169.0, 53.0], [182.0, 53.0], [181.0, 55.0], [180.0, 55.0], [176.0, 54.0], [191.0, 58.0], [188.0, 55.0], [186.0, 55.0], [184.0, 61.0], [198.0, 60.0], [194.0, 57.0], [207.0, 59.0], [204.0, 57.0], [203.0, 57.0], [201.0, 57.0], [200.0, 57.0], [215.0, 62.4], [214.0, 59.5], [212.0, 60.0], [209.0, 60.5], [221.0, 66.0], [217.0, 59.0], [216.0, 59.0], [228.0, 64.0], [227.0, 66.0], [224.0, 59.0], [234.0, 63.0], [246.0, 60.0], [255.0, 60.0], [253.0, 75.0], [251.0, 62.0], [249.0, 89.0], [269.0, 61.0], [268.0, 60.0], [265.0, 65.5], [263.0, 75.0], [261.0, 85.0], [258.0, 71.0], [257.0, 81.5], [256.0, 97.0], [287.0, 61.0], [280.0, 61.0], [279.0, 62.0], [274.0, 60.0], [272.0, 61.0], [303.0, 62.0], [301.0, 64.0], [296.0, 65.0], [295.0, 63.0], [291.0, 62.5], [290.0, 63.0], [288.0, 64.0], [319.0, 63.0], [310.0, 62.0], [308.0, 62.0], [305.0, 63.0], [331.0, 70.0], [327.0, 64.0], [323.0, 62.0], [320.0, 62.0], [351.0, 63.0], [350.0, 63.0], [348.0, 64.5], [347.0, 66.0], [345.0, 63.0], [342.0, 70.0], [339.0, 63.0], [337.0, 70.0], [365.0, 68.0], [362.0, 69.5], [357.0, 67.0], [356.0, 68.0], [379.0, 65.0], [378.0, 65.0], [376.0, 63.666666666666664], [373.0, 62.0], [372.0, 66.0], [368.0, 64.5], [389.0, 66.0], [386.0, 67.0], [410.0, 65.5], [408.0, 67.0], [403.0, 64.0], [401.0, 67.0], [425.0, 67.0], [423.0, 66.0], [422.0, 67.0], [421.0, 68.0], [420.0, 69.0], [419.0, 66.0], [445.0, 64.75], [440.0, 67.0], [437.0, 70.0], [436.0, 66.0], [432.0, 64.0], [462.0, 76.0], [478.0, 72.0], [477.0, 80.0], [469.0, 73.0], [468.0, 75.0], [464.0, 75.5], [494.0, 70.0], [493.0, 70.0], [487.0, 74.0], [486.0, 73.0], [484.0, 71.0], [481.0, 74.0], [509.0, 72.0], [510.0, 74.0], [508.0, 69.0], [506.0, 72.0], [505.0, 71.0], [504.0, 74.0], [502.0, 68.0], [499.0, 70.0], [496.0, 71.0], [541.0, 63.0], [542.0, 64.0], [540.0, 66.0], [538.0, 65.0], [536.0, 64.0], [520.0, 73.0], [516.0, 72.0], [534.0, 64.0], [532.0, 67.0], [529.0, 65.5], [528.0, 69.0], [574.0, 71.0], [568.0, 68.66666666666667], [552.0, 68.0], [544.0, 68.5], [606.0, 69.0], [603.0, 66.5], [595.0, 68.66666666666667], [592.0, 68.0], [590.0, 68.33333333333333], [576.0, 69.0], [631.0, 68.0], [630.0, 73.0], [627.0, 70.5], [626.0, 69.0], [621.0, 68.0], [616.0, 72.0], [612.0, 73.0], [610.0, 71.5], [669.0, 68.5], [664.0, 68.0], [661.0, 70.0], [660.0, 68.0], [658.0, 68.0], [655.0, 69.5], [652.0, 69.0], [645.0, 65.0], [703.0, 67.5], [701.0, 67.0], [698.0, 67.0], [697.0, 67.0], [696.0, 69.0], [681.0, 68.0], [680.0, 67.0], [679.0, 67.0], [735.0, 68.0], [732.0, 66.0], [728.0, 66.0], [727.0, 66.0], [722.0, 67.0], [721.0, 67.0], [712.0, 68.0], [767.0, 64.0], [755.0, 67.0], [753.0, 65.0], [747.0, 65.66666666666667], [745.0, 68.0], [742.0, 66.5], [737.0, 66.0], [736.0, 66.0], [797.0, 760.0], [778.0, 702.0], [799.0, 696.0], [794.0, 64.5], [770.0, 66.0], [769.0, 67.0], [789.0, 64.5], [788.0, 64.0], [787.0, 64.0], [780.0, 64.5], [779.0, 70.0], [806.0, 754.0], [801.0, 377.5], [805.0, 64.0], [804.0, 65.5], [807.0, 756.0], [808.0, 761.0], [809.0, 63.0], [814.0, 67.0], [813.0, 65.0], [820.0, 779.0], [825.0, 796.0], [828.0, 64.66666666666667], [818.0, 63.0], [815.0, 63.0], [839.0, 808.0], [832.0, 705.0], [842.0, 62.0], [840.0, 64.0], [833.0, 434.5], [836.0, 817.0], [835.0, 62.5], [834.0, 62.0], [852.0, 760.0], [849.0, 62.0], [855.0, 62.0], [854.0, 65.0], [859.0, 771.0], [862.0, 61.0], [858.0, 61.0], [857.0, 61.5], [879.0, 61.0], [890.0, 64.66666666666666], [895.0, 60.0], [888.0, 60.0], [871.0, 62.0], [870.0, 61.75], [869.0, 65.0], [868.0, 61.0], [883.0, 62.0], [881.0, 62.0], [876.0, 60.0], [875.0, 60.0], [873.0, 65.0], [872.0, 60.0], [926.0, 789.0], [897.0, 742.0], [902.0, 739.0], [899.0, 63.333333333333336], [905.0, 419.5], [908.0, 63.0], [896.0, 62.0], [907.0, 62.0], [927.0, 60.0], [914.0, 65.33333333333333], [913.0, 61.0], [925.0, 59.0], [922.0, 61.333333333333336], [918.0, 61.0], [917.0, 61.0], [958.0, 179.83333333333331], [935.0, 777.0], [934.0, 773.5], [933.0, 60.0], [932.0, 69.0], [942.0, 60.0], [941.0, 60.0], [940.0, 59.0], [939.0, 60.0], [938.0, 59.0], [937.0, 60.0], [954.0, 527.0], [959.0, 58.0], [945.0, 58.75], [944.0, 59.0], [957.0, 58.0], [956.0, 65.0], [949.0, 58.25], [948.0, 58.0], [986.0, 435.5], [968.0, 275.75], [972.0, 787.5], [978.0, 295.3333333333333], [980.0, 925.0], [979.0, 57.666666666666664], [981.0, 55.0], [985.0, 296.6666666666667], [984.0, 53.0], [974.0, 56.0], [967.0, 60.0], [966.0, 63.0], [965.0, 62.0], [962.0, 56.0], [961.0, 59.6], [960.0, 59.0], [973.0, 56.0], [987.0, 800.0], [988.0, 55.8], [991.0, 55.0], [990.0, 54.0], [996.0, 762.0], [994.0, 299.1666666666667], [998.0, 176.83333333333334], [1000.0, 58.17908441137658], [999.0, 54.5], [997.0, 54.5625], [995.0, 56.0], [993.0, 52.25], [992.0, 52.714285714285715], [1.0, 10461.0]], "isOverall": false, "label": "Get Cart 2", "isController": false}, {"data": [[999.7593914367686, 58.21033143682684]], "isOverall": false, "label": "Get Cart 2-Aggregated", "isController": false}, {"data": [[135.0, 61.0], [134.0, 61.0], [143.0, 52.0], [147.0, 56.0], [145.0, 59.0], [158.0, 52.0], [152.0, 55.0], [165.0, 53.0], [171.0, 52.0], [181.0, 60.0], [176.0, 57.0], [191.0, 59.0], [188.0, 55.0], [185.0, 58.0], [199.0, 59.0], [207.0, 60.0], [204.0, 58.0], [215.0, 58.0], [211.0, 59.25], [221.0, 61.0], [219.0, 61.0], [218.0, 57.0], [230.0, 64.0], [229.0, 60.5], [226.0, 65.0], [234.0, 65.0], [233.0, 61.0], [232.0, 60.0], [255.0, 80.0], [253.0, 61.0], [249.0, 75.0], [270.0, 61.0], [268.0, 61.0], [264.0, 78.0], [263.0, 76.0], [258.0, 69.0], [257.0, 60.0], [287.0, 61.0], [284.0, 61.25], [283.0, 61.0], [282.0, 63.0], [281.0, 62.0], [279.0, 61.0], [276.0, 62.0], [301.0, 62.0], [297.0, 63.0], [294.0, 63.5], [289.0, 64.0], [288.0, 64.0], [319.0, 64.5], [318.0, 62.0], [317.0, 61.0], [316.0, 62.0], [315.0, 62.0], [335.0, 70.0], [334.0, 65.0], [331.0, 65.66666666666667], [324.0, 62.0], [349.0, 63.0], [347.0, 66.0], [346.0, 65.5], [345.0, 65.0], [344.0, 66.0], [343.0, 64.0], [338.0, 70.0], [362.0, 66.0], [359.0, 66.0], [357.0, 66.0], [354.0, 66.5], [352.0, 66.66666666666667], [380.0, 70.0], [378.0, 69.0], [373.0, 64.0], [372.0, 64.25], [370.0, 71.5], [368.0, 69.0], [394.0, 71.0], [393.0, 63.0], [390.0, 65.0], [387.0, 63.0], [386.0, 80.0], [415.0, 67.0], [414.0, 67.0], [407.0, 66.0], [404.0, 64.0], [402.0, 63.0], [401.0, 67.5], [431.0, 68.0], [424.0, 67.0], [445.0, 64.5], [443.0, 68.0], [440.0, 70.0], [439.0, 68.5], [435.0, 69.0], [461.0, 74.0], [451.0, 66.0], [450.0, 65.0], [478.0, 75.0], [477.0, 73.0], [476.0, 71.0], [474.0, 74.5], [473.0, 76.0], [468.0, 75.0], [467.0, 73.0], [464.0, 75.0], [494.0, 74.0], [493.0, 71.0], [491.0, 73.0], [490.0, 72.0], [488.0, 70.0], [486.0, 75.0], [481.0, 70.5], [511.0, 67.0], [510.0, 74.0], [509.0, 62.0], [503.0, 78.0], [502.0, 69.0], [497.0, 71.0], [543.0, 68.0], [542.0, 64.6], [538.0, 63.0], [532.0, 65.0], [529.0, 70.0], [521.0, 66.0], [520.0, 65.5], [519.0, 67.0], [574.0, 68.5], [568.0, 68.0], [566.0, 70.0], [559.0, 67.0], [558.0, 68.0], [555.0, 67.0], [548.0, 69.0], [590.0, 68.0], [607.0, 68.0], [600.0, 72.0], [580.0, 70.0], [576.0, 67.0], [595.0, 67.0], [592.0, 69.0], [589.0, 68.0], [588.0, 69.0], [585.0, 69.0], [584.0, 68.0], [633.0, 69.0], [632.0, 67.0], [631.0, 69.0], [630.0, 65.0], [626.0, 66.0], [614.0, 69.0], [613.0, 68.0], [610.0, 70.0], [658.0, 67.0], [657.0, 68.0], [655.0, 68.0], [652.0, 67.33333333333333], [649.0, 69.0], [643.0, 67.0], [641.0, 69.0], [700.0, 67.0], [703.0, 67.0], [702.0, 67.0], [701.0, 70.0], [698.0, 68.0], [697.0, 68.0], [696.0, 69.0], [689.0, 67.0], [674.0, 69.0], [672.0, 70.0], [731.0, 67.0], [734.0, 66.0], [735.0, 67.0], [732.0, 66.0], [730.0, 67.0], [708.0, 68.0], [704.0, 67.0], [724.0, 69.0], [722.0, 67.33333333333333], [718.0, 67.0], [715.0, 67.0], [713.0, 68.0], [762.0, 66.0], [761.0, 64.0], [759.0, 67.0], [746.0, 66.0], [742.0, 66.0], [740.0, 66.0], [737.0, 65.0], [799.0, 752.0], [778.0, 710.3333333333334], [779.0, 68.0], [783.0, 67.0], [774.0, 68.0], [782.0, 64.0], [785.0, 813.0], [792.0, 733.0], [797.0, 382.0], [796.0, 65.0], [788.0, 64.0], [787.0, 64.0], [786.0, 64.0], [826.0, 795.0], [806.0, 541.0], [815.0, 63.0], [804.0, 63.0], [802.0, 65.0], [805.0, 64.0], [811.0, 812.0], [809.0, 65.0], [812.0, 63.0], [814.0, 806.5], [816.0, 782.0], [828.0, 447.5], [831.0, 66.25], [827.0, 64.0], [823.0, 62.333333333333336], [819.0, 64.0], [839.0, 829.6666666666666], [833.0, 817.0], [845.0, 63.0], [843.0, 62.0], [840.0, 63.0], [835.0, 802.0], [836.0, 782.0], [852.0, 732.0], [854.0, 62.0], [857.0, 408.0], [856.0, 62.0], [859.0, 732.0], [862.0, 65.0], [858.0, 66.66666666666667], [871.0, 387.0], [869.0, 718.0], [864.0, 61.25], [870.0, 61.0], [895.0, 62.0], [890.0, 64.2], [883.0, 65.0], [881.0, 61.5], [879.0, 61.0], [878.0, 62.0], [876.0, 62.0], [873.0, 62.2], [922.0, 59.0], [898.0, 810.0], [909.0, 62.0], [907.0, 61.0], [905.0, 61.0], [901.0, 304.3333333333333], [903.0, 401.5], [923.0, 805.0], [913.0, 62.0], [917.0, 65.5], [916.0, 61.0], [915.0, 63.0], [914.0, 65.66666666666667], [933.0, 185.16666666666666], [936.0, 425.5], [938.0, 418.25], [942.0, 783.5], [930.0, 69.0], [941.0, 59.6], [940.0, 63.0], [944.0, 412.0], [952.0, 409.0], [934.0, 59.0], [957.0, 294.6666666666667], [958.0, 61.0], [951.0, 64.0], [950.0, 58.0], [949.0, 59.0], [946.0, 58.0], [945.0, 66.0], [988.0, 54.5], [972.0, 788.0], [971.0, 61.5], [968.0, 60.666666666666664], [974.0, 59.0], [973.0, 59.5], [975.0, 807.0], [977.0, 790.0], [979.0, 58.666666666666664], [978.0, 58.0], [983.0, 55.5], [982.0, 60.0], [986.0, 536.3333333333334], [991.0, 55.0], [990.0, 53.0], [987.0, 55.0], [985.0, 63.0], [984.0, 56.0], [967.0, 61.0], [966.0, 61.0], [962.0, 63.0], [961.0, 62.0], [960.0, 58.5], [992.0, 159.42857142857144], [994.0, 187.8181818181818], [997.0, 92.21052631578948], [998.0, 277.8], [1000.0, 58.300719592909026], [999.0, 55.0], [995.0, 55.0], [993.0, 53.36363636363636]], "isOverall": false, "label": "Get Cart 1", "isController": false}, {"data": [[999.8724145571102, 58.33170358373133]], "isOverall": false, "label": "Get Cart 1-Aggregated", "isController": false}, {"data": [[3.0, 10466.5], [249.0, 91.0], [266.0, 95.0], [265.0, 92.0], [461.0, 74.0], [477.0, 75.0], [476.0, 77.0], [468.0, 75.0], [488.0, 70.0], [486.0, 76.0], [511.0, 73.0], [502.0, 71.0], [497.0, 72.0], [542.0, 64.0], [529.0, 70.0], [528.0, 66.0], [574.0, 69.0], [573.0, 67.0], [568.0, 69.0], [566.0, 68.0], [605.0, 68.0], [604.0, 67.0], [595.0, 67.0], [589.0, 69.0], [588.0, 69.0], [577.0, 69.0], [639.0, 69.0], [631.0, 70.0], [626.0, 68.5], [625.0, 66.0], [621.0, 67.0], [619.0, 71.0], [616.0, 69.0], [615.0, 69.0], [610.0, 69.0], [666.0, 68.0], [669.0, 68.5], [670.0, 67.0], [667.0, 71.0], [660.0, 71.0], [658.0, 72.0], [654.0, 68.0], [648.0, 71.0], [645.0, 70.0], [641.0, 67.0], [697.0, 68.0], [703.0, 69.5], [702.0, 70.0], [698.0, 68.0], [689.0, 67.0], [686.0, 68.0], [674.0, 69.0], [684.0, 68.5], [681.0, 67.0], [679.0, 67.0], [676.0, 68.0], [734.0, 67.0], [729.0, 68.0], [727.0, 66.0], [725.0, 66.0], [723.0, 69.0], [722.0, 66.0], [721.0, 66.0], [711.0, 68.5], [766.0, 66.0], [762.0, 67.0], [758.0, 65.0], [757.0, 65.0], [756.0, 65.0], [753.0, 66.33333333333333], [746.0, 66.0], [744.0, 66.0], [742.0, 67.0], [740.0, 65.0], [738.0, 66.0], [736.0, 68.0], [792.0, 64.0], [799.0, 410.5], [777.0, 780.0], [785.0, 393.0], [796.0, 63.0], [789.0, 64.0], [786.0, 65.0], [783.0, 64.0], [772.0, 66.0], [771.0, 64.0], [775.0, 65.0], [774.0, 68.0], [779.0, 65.66666666666667], [829.0, 806.0], [811.0, 440.5], [809.0, 532.6666666666666], [816.0, 779.5], [821.0, 435.5], [830.0, 62.5], [828.0, 64.0], [805.0, 64.0], [801.0, 65.0], [815.0, 64.66666666666667], [814.0, 63.0], [823.0, 61.666666666666664], [818.0, 62.0], [835.0, 473.5], [833.0, 835.75], [839.0, 862.5], [838.0, 62.0], [842.0, 471.25000000000006], [840.0, 63.0], [843.0, 857.0], [846.0, 890.0], [845.0, 62.0], [850.0, 617.8], [851.0, 796.5], [852.0, 756.0], [855.0, 67.0], [857.0, 745.0], [861.0, 63.5], [849.0, 62.0], [859.0, 62.0], [858.0, 62.0], [871.0, 747.0], [870.0, 287.0], [865.0, 63.0], [864.0, 64.0], [895.0, 61.0], [888.0, 61.0], [883.0, 61.0], [881.0, 65.0], [878.0, 61.5], [875.0, 61.0], [873.0, 60.0], [926.0, 773.0], [898.0, 780.5], [899.0, 61.0], [903.0, 62.0], [902.0, 62.0], [908.0, 61.0], [907.0, 63.5], [905.0, 66.0], [927.0, 59.0], [914.0, 63.0], [913.0, 61.0], [925.0, 62.0], [923.0, 63.0], [922.0, 69.0], [921.0, 61.0], [919.0, 70.0], [916.0, 64.0], [934.0, 766.0], [933.0, 430.5], [935.0, 794.0], [936.0, 417.0], [937.0, 61.0], [941.0, 174.66666666666666], [942.0, 423.5], [929.0, 60.0], [931.0, 60.0], [930.0, 60.0], [932.0, 62.0], [952.0, 419.0], [958.0, 420.5], [957.0, 58.0], [956.0, 63.0], [954.0, 65.0], [959.0, 58.0], [944.0, 59.0], [946.0, 58.0], [945.0, 63.0], [949.0, 58.0], [948.0, 58.0], [951.0, 57.0], [950.0, 57.0], [967.0, 55.0], [987.0, 55.0], [960.0, 497.0], [969.0, 414.0], [968.0, 54.0], [971.0, 57.0], [973.0, 61.0], [972.0, 60.0], [975.0, 58.0], [974.0, 59.0], [976.0, 415.5], [981.0, 57.0], [979.0, 59.5], [983.0, 58.0], [982.0, 60.333333333333336], [988.0, 492.0], [989.0, 299.3333333333333], [990.0, 293.6666666666667], [991.0, 55.5], [986.0, 54.0], [985.0, 57.5], [984.0, 58.0], [966.0, 61.0], [965.0, 57.666666666666664], [962.0, 57.0], [961.0, 63.0], [994.0, 197.4], [992.0, 233.5], [997.0, 211.21052631578954], [998.0, 156.71428571428572], [1000.0, 58.10325503449611], [999.0, 55.666666666666664], [996.0, 54.0], [995.0, 56.5], [993.0, 51.714285714285715]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[999.9554048872292, 58.15436045856051]], "isOverall": false, "label": "Get Member 1-Aggregated", "isController": false}, {"data": [[234.0, 69.0], [251.0, 88.0], [249.0, 92.0], [265.0, 92.0], [262.0, 72.0], [261.0, 93.5], [258.0, 69.0], [279.0, 64.0], [300.0, 62.0], [294.0, 65.0], [315.0, 62.0], [312.0, 64.0], [323.0, 64.0], [321.0, 63.0], [320.0, 63.0], [348.0, 65.0], [342.0, 66.0], [338.0, 73.0], [365.0, 65.0], [362.0, 65.25], [352.0, 64.0], [382.0, 63.0], [379.0, 66.0], [376.0, 68.5], [368.0, 64.0], [399.0, 64.0], [398.0, 68.0], [393.0, 65.5], [389.0, 64.0], [385.0, 78.0], [384.0, 66.0], [414.0, 66.0], [408.0, 68.0], [403.0, 79.0], [402.0, 64.0], [401.0, 65.0], [431.0, 66.5], [430.0, 64.5], [428.0, 66.75], [423.0, 68.0], [420.0, 67.0], [418.0, 70.0], [447.0, 66.0], [442.0, 69.25], [439.0, 65.0], [435.0, 68.0], [477.0, 76.0], [476.0, 72.0], [474.0, 73.0], [472.0, 74.0], [465.0, 63.0], [464.0, 75.0], [491.0, 75.0], [487.0, 75.0], [486.0, 75.0], [481.0, 74.0], [508.0, 73.0], [506.0, 71.0], [502.0, 74.0], [500.0, 71.5], [499.0, 73.0], [496.0, 71.33333333333333], [538.0, 64.0], [542.0, 64.66666666666667], [536.0, 66.0], [517.0, 67.0], [515.0, 73.0], [514.0, 71.0], [532.0, 64.0], [530.0, 64.0], [529.0, 70.0], [527.0, 72.0], [526.0, 68.0], [520.0, 73.0], [573.0, 68.0], [574.0, 67.5], [572.0, 69.0], [568.0, 70.0], [567.0, 69.0], [566.0, 69.5], [564.0, 69.0], [562.0, 68.0], [548.0, 68.0], [547.0, 68.0], [606.0, 69.0], [600.0, 68.0], [598.0, 71.0], [597.0, 69.0], [595.0, 69.0], [592.0, 68.0], [589.0, 67.0], [584.0, 68.0], [583.0, 69.0], [582.0, 69.0], [639.0, 69.0], [635.0, 71.0], [630.0, 71.0], [628.0, 67.0], [623.0, 71.0], [621.0, 68.0], [613.0, 69.0], [609.0, 69.0], [645.0, 66.0], [667.0, 68.0], [669.0, 70.0], [664.0, 67.0], [643.0, 65.0], [640.0, 69.0], [661.0, 70.0], [660.0, 70.0], [653.0, 68.0], [652.0, 65.0], [651.0, 69.0], [648.0, 68.5], [696.0, 68.0], [703.0, 67.0], [702.0, 67.0], [697.0, 68.0], [686.0, 68.0], [674.0, 69.0], [684.0, 68.0], [681.0, 69.0], [679.0, 68.0], [678.0, 67.0], [735.0, 68.0], [732.0, 67.0], [722.0, 66.5], [721.0, 67.0], [719.0, 67.0], [717.0, 66.0], [712.0, 68.0], [708.0, 67.0], [763.0, 64.0], [762.0, 68.5], [756.0, 64.0], [755.0, 65.0], [753.0, 69.0], [751.0, 65.0], [748.0, 66.0], [747.0, 70.0], [740.0, 67.0], [797.0, 411.5], [774.0, 753.0], [778.0, 728.0], [780.0, 69.0], [779.0, 68.0], [785.0, 736.0], [787.0, 64.0], [782.0, 384.5], [783.0, 64.0], [769.0, 65.33333333333333], [792.0, 699.0], [799.0, 65.0], [784.0, 67.0], [796.0, 65.0], [793.0, 63.0], [828.0, 306.6666666666667], [806.0, 446.5], [815.0, 65.0], [801.0, 65.0], [804.0, 63.0], [803.0, 65.0], [812.0, 67.0], [809.0, 62.0], [820.0, 781.0], [821.0, 777.0], [825.0, 794.0], [826.0, 737.0], [831.0, 69.0], [824.0, 61.0], [819.0, 63.0], [818.0, 65.0], [845.0, 445.0], [833.0, 462.0], [834.0, 66.0], [835.0, 812.0], [836.0, 807.5], [838.0, 820.0], [839.0, 836.0], [856.0, 61.0], [852.0, 755.0], [849.0, 62.5], [854.0, 62.0], [862.0, 64.0], [858.0, 61.0], [857.0, 283.3333333333333], [840.0, 330.33333333333337], [841.0, 833.0], [843.0, 569.6666666666666], [842.0, 64.0], [846.0, 585.3333333333333], [890.0, 65.33333333333333], [874.0, 744.5], [873.0, 61.0], [895.0, 61.0], [888.0, 61.5], [871.0, 64.0], [870.0, 62.0], [869.0, 64.0], [868.0, 62.0], [887.0, 61.0], [886.0, 62.0], [883.0, 62.0], [879.0, 63.666666666666664], [878.0, 61.0], [898.0, 434.0], [897.0, 533.6666666666666], [910.0, 61.0], [907.0, 63.5], [906.0, 62.0], [905.0, 62.5], [904.0, 66.0], [919.0, 442.5], [923.0, 778.0], [927.0, 59.0], [925.0, 62.5], [922.0, 61.5], [902.0, 63.5], [916.0, 62.0], [914.0, 61.0], [953.0, 770.0], [931.0, 761.0], [934.0, 772.0], [933.0, 61.0], [935.0, 61.0], [942.0, 768.5], [941.0, 61.333333333333336], [940.0, 61.0], [937.0, 59.5], [958.0, 58.0], [948.0, 59.0], [956.0, 63.0], [954.0, 59.0], [951.0, 62.2], [949.0, 60.5], [984.0, 299.0], [966.0, 789.0], [965.0, 56.0], [961.0, 59.16666666666667], [960.0, 61.0], [967.0, 58.5], [972.0, 925.0], [968.0, 62.25], [973.0, 60.0], [975.0, 430.5], [981.0, 789.0], [982.0, 57.666666666666664], [988.0, 416.5], [987.0, 52.0], [985.0, 64.0], [990.0, 425.75], [991.0, 55.0], [976.0, 60.0], [979.0, 59.0], [978.0, 60.0], [989.0, 62.0], [996.0, 533.3333333333334], [994.0, 236.25], [997.0, 90.4], [998.0, 270.8181818181818], [1000.0, 58.8951012617184], [999.0, 56.0], [995.0, 55.5], [993.0, 52.15384615384615], [992.0, 53.1]], "isOverall": false, "label": "Get Member 2", "isController": false}, {"data": [[999.9162675334529, 58.93004836887949]], "isOverall": false, "label": "Get Member 2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 321184.26666666666, "minX": 1.64933754E12, "maxY": 2206758.95, "series": [{"data": [[1.64933754E12, 321184.26666666666], [1.64933784E12, 1119879.2], [1.64933772E12, 1596060.4666666666], [1.64933778E12, 1609540.0], [1.6493376E12, 1593758.9333333333], [1.64933766E12, 1611363.1333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64933754E12, 439877.6666666667], [1.64933784E12, 1533724.4333333333], [1.64933772E12, 2186002.4166666665], [1.64933778E12, 2204398.933333333], [1.6493376E12, 2182574.1], [1.64933766E12, 2206758.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64933784E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 55.244385328436636, "minX": 1.64933754E12, "maxY": 86.21348357818606, "series": [{"data": [[1.64933754E12, 85.39493521116044], [1.64933784E12, 57.4708984535945], [1.64933772E12, 58.278979850378185], [1.64933778E12, 58.53448580946381], [1.6493376E12, 55.94756416853229], [1.64933766E12, 55.244385328436636]], "isOverall": false, "label": "Get Cart 2", "isController": false}, {"data": [[1.64933754E12, 85.28370834682877], [1.64933784E12, 56.92860562016641], [1.64933772E12, 58.29670558316903], [1.64933778E12, 57.366623740625435], [1.6493376E12, 56.38236590629464], [1.64933766E12, 56.85965154231577]], "isOverall": false, "label": "Get Cart 1", "isController": false}, {"data": [[1.64933754E12, 86.21348357818606], [1.64933784E12, 57.32324839017517], [1.64933772E12, 57.26470621815135], [1.64933778E12, 58.09045389766577], [1.6493376E12, 56.345818599346835], [1.64933766E12, 55.957429252836924]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[1.64933754E12, 85.30835362142382], [1.64933784E12, 57.3352729668155], [1.64933772E12, 58.289300836477395], [1.64933778E12, 57.29180550833094], [1.6493376E12, 57.47665764815182], [1.64933766E12, 58.42592945959527]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64933784E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 55.2416578553098, "minX": 1.64933754E12, "maxY": 86.21032997461798, "series": [{"data": [[1.64933754E12, 85.39207267036909], [1.64933784E12, 57.46783310901897], [1.64933772E12, 58.27613620074514], [1.64933778E12, 58.53149306437155], [1.6493376E12, 55.94488543495411], [1.64933766E12, 55.2416578553098]], "isOverall": false, "label": "Get Cart 2", "isController": false}, {"data": [[1.64933754E12, 85.28073618229254], [1.64933784E12, 56.92597286741476], [1.64933772E12, 58.29378106577274], [1.64933778E12, 57.36377168396379], [1.6493376E12, 56.37945270065636], [1.64933766E12, 56.85676688272876]], "isOverall": false, "label": "Get Cart 1", "isController": false}, {"data": [[1.64933754E12, 86.21032997461798], [1.64933784E12, 57.320396230761006], [1.64933772E12, 57.26150561532615], [1.64933778E12, 58.08764960080904], [1.6493376E12, 56.342972889462835], [1.64933766E12, 55.954573369451275]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[1.64933754E12, 85.3055386488136], [1.64933784E12, 57.3324952652824], [1.64933772E12, 58.28637565883617], [1.64933778E12, 57.28934602742755], [1.6493376E12, 57.47361092377725], [1.64933766E12, 58.42330473657271]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64933784E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64933754E12, "maxY": 7.049364604568706E-4, "series": [{"data": [[1.64933754E12, 5.343409476918476E-4], [1.64933784E12, 0.0], [1.64933772E12, 1.0847709777273304E-4], [1.64933778E12, 8.462775328701775E-5], [1.6493376E12, 1.1350566014891919E-4], [1.64933766E12, 1.1582420128004666E-4]], "isOverall": false, "label": "Get Cart 2", "isController": false}, {"data": [[1.64933754E12, 7.049364604568706E-4], [1.64933784E12, 5.439571796908172E-6], [1.64933772E12, 1.310060493969843E-4], [1.64933778E12, 1.060525717748652E-4], [1.6493376E12, 1.0349546344885356E-4], [1.64933766E12, 9.577223065017835E-5]], "isOverall": false, "label": "Get Cart 1", "isController": false}, {"data": [[1.64933754E12, 6.922544419659933E-4], [1.64933784E12, 0.0], [1.64933772E12, 1.408113014389414E-4], [1.64933778E12, 1.3025422560031559E-4], [1.6493376E12, 1.4495573128258714E-4], [1.64933766E12, 1.0549437300549645E-4]], "isOverall": false, "label": "Get Member 1", "isController": false}, {"data": [[1.64933754E12, 6.276628119293926E-4], [1.64933784E12, 1.6468586171877176E-5], [1.64933772E12, 1.3819736887564802E-4], [1.64933778E12, 1.4356416940571826E-4], [1.6493376E12, 1.1107849282353712E-4], [1.64933766E12, 1.5576991226259694E-4]], "isOverall": false, "label": "Get Member 2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64933784E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64933754E12, "maxY": 40561.0, "series": [{"data": [[1.64933754E12, 14643.0], [1.64933784E12, 10959.0], [1.64933772E12, 40561.0], [1.64933778E12, 31861.0], [1.6493376E12, 40495.0], [1.64933766E12, 19798.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64933754E12, 62.0], [1.64933784E12, 63.0], [1.64933772E12, 56.0], [1.64933778E12, 59.0], [1.6493376E12, 56.0], [1.64933766E12, 63.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64933754E12, 68.0], [1.64933784E12, 70.0], [1.64933772E12, 59.0], [1.64933778E12, 65.0], [1.6493376E12, 80.0], [1.64933766E12, 85.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64933754E12, 65.0], [1.64933784E12, 66.0], [1.64933772E12, 57.0], [1.64933778E12, 62.0], [1.6493376E12, 58.0], [1.64933766E12, 69.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64933754E12, 39.0], [1.64933784E12, 1.0], [1.64933772E12, 1.0], [1.64933778E12, 0.0], [1.6493376E12, 1.0], [1.64933766E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64933754E12, 57.0], [1.64933784E12, 55.0], [1.64933772E12, 51.0], [1.64933778E12, 50.0], [1.6493376E12, 47.0], [1.64933766E12, 52.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64933784E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 26.0, "minX": 796.0, "maxY": 769.0, "series": [{"data": [[17371.0, 51.0], [17387.0, 52.0], [17283.0, 52.0], [17275.0, 52.0], [17179.0, 52.0], [17307.0, 48.0], [17379.0, 53.0], [17363.0, 51.0], [16987.0, 58.0], [17131.0, 51.0], [16739.0, 58.0], [16579.0, 52.0], [16979.0, 26.0], [16971.0, 53.0], [16923.0, 55.0], [17883.0, 56.0], [17579.0, 50.0], [17563.0, 51.0], [17555.0, 52.0], [17699.0, 55.0], [17691.0, 52.0], [17779.0, 49.0], [17707.0, 51.0], [18107.0, 46.0], [17651.0, 51.0], [17595.0, 52.0], [17795.0, 46.0], [17851.0, 55.0], [17451.0, 57.0], [17419.0, 52.0], [17427.0, 51.0], [17483.0, 50.0], [17491.0, 52.0], [17515.0, 50.0], [17531.0, 52.0], [9585.0, 104.0], [9869.0, 99.0], [14025.0, 71.0], [15009.0, 53.0], [16273.0, 61.0], [15917.0, 55.0], [17274.0, 58.0], [17362.0, 51.0], [17258.0, 50.0], [17146.0, 49.0], [17322.0, 48.0], [17450.0, 53.0], [17906.0, 54.0], [17802.0, 47.0], [17682.0, 50.0], [17650.0, 51.0], [17642.0, 56.0], [17658.0, 51.0], [17498.0, 49.0], [17458.0, 56.0], [17626.0, 50.0], [17618.0, 47.0], [17762.0, 47.0], [17754.0, 51.0], [796.0, 769.0], [16409.0, 59.0], [17297.0, 52.0], [17129.0, 47.0], [17041.0, 49.0], [17097.0, 54.0], [16937.0, 57.0], [17729.0, 54.0], [17545.0, 55.0], [17561.0, 51.0], [17873.0, 54.0], [17721.0, 50.0], [17745.0, 52.0], [17665.0, 50.0], [17673.0, 51.0], [17689.0, 52.0], [17681.0, 52.0], [17697.0, 51.0], [17641.0, 55.0], [17921.0, 51.0], [17633.0, 56.0], [17601.0, 51.0], [17617.0, 51.0], [17569.0, 51.0], [17817.0, 47.0], [17769.0, 51.0], [17473.0, 51.0], [17417.0, 53.0], [17449.0, 51.0], [17905.0, 51.0], [17481.0, 52.0], [17521.0, 52.0], [17537.0, 51.0], [3204.0, 354.0], [5904.0, 175.0], [6344.0, 155.0], [7652.0, 127.0], [9316.0, 104.0], [15264.0, 65.0], [16116.0, 60.0], [17304.0, 49.0], [17400.0, 50.0], [16912.0, 54.0], [16640.0, 57.0], [17224.0, 51.0], [17288.0, 51.0], [17272.0, 58.0], [17216.0, 53.0], [17312.0, 48.0], [17384.0, 51.0], [17376.0, 51.0], [16824.0, 58.0], [16400.0, 55.0], [16696.0, 55.0], [17488.0, 52.0], [17576.0, 52.0], [17592.0, 57.0], [17624.0, 51.0], [17416.0, 49.0], [17744.0, 51.0], [17720.0, 47.0], [17696.0, 47.0], [17640.0, 46.0], [18000.0, 52.0], [17480.0, 55.0], [17464.0, 51.0], [17424.0, 48.0], [17504.0, 51.0], [17552.0, 51.0], [17568.0, 50.0], [17496.0, 51.0], [17383.0, 52.0], [17375.0, 51.0], [17023.0, 53.0], [17095.0, 52.0], [17159.0, 52.0], [17399.0, 52.0], [17279.0, 52.0], [16823.0, 52.0], [17271.0, 51.0], [17543.0, 51.0], [17591.0, 56.0], [17551.0, 48.0], [17639.0, 51.0], [18103.0, 50.0], [17631.0, 52.0], [17831.0, 54.0], [17415.0, 52.0], [17839.0, 55.0], [17743.0, 51.0], [17751.0, 50.0], [17735.0, 51.0], [17679.0, 50.0], [17799.0, 52.0], [17455.0, 51.0], [17487.0, 51.0], [17479.0, 51.0], [17519.0, 51.0], [17495.0, 53.0], [9819.0, 103.0], [15847.0, 55.0], [16311.0, 51.0], [17326.0, 47.0], [16494.0, 58.0], [16806.0, 59.0], [17246.0, 53.0], [17390.0, 51.0], [17110.0, 47.0], [17054.0, 51.0], [17398.0, 51.0], [16470.0, 53.0], [17438.0, 50.0], [17526.0, 53.0], [17430.0, 51.0], [17830.0, 51.0], [17558.0, 52.0], [17550.0, 52.0], [17542.0, 52.0], [17534.0, 51.0], [17750.0, 49.0], [17734.0, 49.0], [17774.0, 51.0], [17766.0, 50.0], [17678.0, 55.0], [17662.0, 49.0], [18038.0, 50.0], [17958.0, 50.0], [17638.0, 52.0], [17630.0, 48.0], [17494.0, 53.0], [17478.0, 51.0], [17470.0, 51.0], [17454.0, 52.0], [17462.0, 52.0], [17333.0, 56.0], [17341.0, 49.0], [16717.0, 57.0], [17205.0, 52.0], [17285.0, 47.0], [17197.0, 52.0], [16525.0, 55.0], [16709.0, 59.0], [17117.0, 53.0], [17389.0, 51.0], [17381.0, 52.0], [17397.0, 52.0], [17885.0, 50.0], [17829.0, 53.0], [17557.0, 51.0], [17549.0, 53.0], [17629.0, 53.0], [17637.0, 54.0], [17565.0, 54.0], [17789.0, 50.0], [17813.0, 55.0], [17781.0, 52.0], [17877.0, 50.0], [17845.0, 54.0], [17541.0, 56.0], [17525.0, 52.0], [17517.0, 50.0], [17501.0, 51.0], [17437.0, 51.0], [10858.0, 54.0], [15194.0, 68.0], [15290.0, 60.0], [17404.0, 56.0], [17012.0, 56.0], [17068.0, 50.0], [17020.0, 53.0], [17052.0, 53.0], [16668.0, 57.0], [16652.0, 54.0], [17388.0, 55.0], [17180.0, 53.0], [17332.0, 51.0], [16684.0, 50.0], [17156.0, 52.0], [17836.0, 55.0], [17540.0, 50.0], [17556.0, 52.0], [17588.0, 52.0], [17780.0, 55.0], [17820.0, 50.0], [17828.0, 50.0], [17708.0, 51.0], [17668.0, 52.0], [17748.0, 47.0], [17716.0, 51.0], [17732.0, 50.0], [17636.0, 55.0], [17956.0, 51.0], [17612.0, 54.0], [17604.0, 48.0], [17532.0, 51.0], [17508.0, 51.0], [17468.0, 52.0], [17460.0, 55.0], [17452.0, 52.0], [17908.0, 55.0], [17892.0, 54.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 18107.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 26.0, "minX": 796.0, "maxY": 769.0, "series": [{"data": [[17371.0, 51.0], [17387.0, 52.0], [17283.0, 52.0], [17275.0, 52.0], [17179.0, 52.0], [17307.0, 48.0], [17379.0, 53.0], [17363.0, 51.0], [16987.0, 58.0], [17131.0, 51.0], [16739.0, 58.0], [16579.0, 52.0], [16979.0, 26.0], [16971.0, 53.0], [16923.0, 55.0], [17883.0, 56.0], [17579.0, 50.0], [17563.0, 51.0], [17555.0, 52.0], [17699.0, 55.0], [17691.0, 52.0], [17779.0, 49.0], [17707.0, 51.0], [18107.0, 46.0], [17651.0, 51.0], [17595.0, 52.0], [17795.0, 46.0], [17851.0, 55.0], [17451.0, 57.0], [17419.0, 52.0], [17427.0, 51.0], [17483.0, 50.0], [17491.0, 52.0], [17515.0, 50.0], [17531.0, 52.0], [9585.0, 104.0], [9869.0, 99.0], [14025.0, 71.0], [15009.0, 53.0], [16273.0, 61.0], [15917.0, 55.0], [17274.0, 58.0], [17362.0, 51.0], [17258.0, 50.0], [17146.0, 49.0], [17322.0, 48.0], [17450.0, 53.0], [17906.0, 54.0], [17802.0, 47.0], [17682.0, 50.0], [17650.0, 51.0], [17642.0, 56.0], [17658.0, 51.0], [17498.0, 49.0], [17458.0, 56.0], [17626.0, 50.0], [17618.0, 47.0], [17762.0, 47.0], [17754.0, 51.0], [796.0, 769.0], [16409.0, 59.0], [17297.0, 52.0], [17129.0, 47.0], [17041.0, 49.0], [17097.0, 54.0], [16937.0, 57.0], [17729.0, 54.0], [17545.0, 55.0], [17561.0, 51.0], [17873.0, 54.0], [17721.0, 50.0], [17745.0, 52.0], [17665.0, 50.0], [17673.0, 51.0], [17689.0, 52.0], [17681.0, 52.0], [17697.0, 51.0], [17641.0, 55.0], [17921.0, 51.0], [17633.0, 56.0], [17601.0, 51.0], [17617.0, 51.0], [17569.0, 51.0], [17817.0, 47.0], [17769.0, 51.0], [17473.0, 51.0], [17417.0, 53.0], [17449.0, 51.0], [17905.0, 51.0], [17481.0, 52.0], [17521.0, 52.0], [17537.0, 51.0], [3204.0, 354.0], [5904.0, 175.0], [6344.0, 155.0], [7652.0, 127.0], [9316.0, 104.0], [15264.0, 65.0], [16116.0, 60.0], [17304.0, 49.0], [17400.0, 50.0], [16912.0, 54.0], [16640.0, 57.0], [17224.0, 51.0], [17288.0, 51.0], [17272.0, 58.0], [17216.0, 53.0], [17312.0, 48.0], [17384.0, 51.0], [17376.0, 51.0], [16824.0, 58.0], [16400.0, 55.0], [16696.0, 55.0], [17488.0, 52.0], [17576.0, 52.0], [17592.0, 57.0], [17624.0, 51.0], [17416.0, 49.0], [17744.0, 51.0], [17720.0, 47.0], [17696.0, 47.0], [17640.0, 46.0], [18000.0, 52.0], [17480.0, 55.0], [17464.0, 51.0], [17424.0, 48.0], [17504.0, 51.0], [17552.0, 51.0], [17568.0, 50.0], [17496.0, 51.0], [17383.0, 52.0], [17375.0, 51.0], [17023.0, 53.0], [17095.0, 52.0], [17159.0, 52.0], [17399.0, 52.0], [17279.0, 52.0], [16823.0, 52.0], [17271.0, 51.0], [17543.0, 51.0], [17591.0, 56.0], [17551.0, 48.0], [17639.0, 51.0], [18103.0, 50.0], [17631.0, 52.0], [17831.0, 54.0], [17415.0, 52.0], [17839.0, 55.0], [17743.0, 51.0], [17751.0, 50.0], [17735.0, 51.0], [17679.0, 50.0], [17799.0, 52.0], [17455.0, 51.0], [17487.0, 51.0], [17479.0, 51.0], [17519.0, 51.0], [17495.0, 53.0], [9819.0, 103.0], [15847.0, 55.0], [16311.0, 51.0], [17326.0, 47.0], [16494.0, 58.0], [16806.0, 59.0], [17246.0, 53.0], [17390.0, 51.0], [17110.0, 47.0], [17054.0, 51.0], [17398.0, 51.0], [16470.0, 53.0], [17438.0, 50.0], [17526.0, 53.0], [17430.0, 51.0], [17830.0, 51.0], [17558.0, 52.0], [17550.0, 52.0], [17542.0, 52.0], [17534.0, 51.0], [17750.0, 49.0], [17734.0, 49.0], [17774.0, 51.0], [17766.0, 50.0], [17678.0, 55.0], [17662.0, 49.0], [18038.0, 50.0], [17958.0, 50.0], [17638.0, 52.0], [17630.0, 48.0], [17494.0, 53.0], [17478.0, 51.0], [17470.0, 51.0], [17454.0, 52.0], [17462.0, 52.0], [17333.0, 56.0], [17341.0, 49.0], [16717.0, 57.0], [17205.0, 52.0], [17285.0, 47.0], [17197.0, 52.0], [16525.0, 54.0], [16709.0, 59.0], [17117.0, 53.0], [17389.0, 51.0], [17381.0, 52.0], [17397.0, 52.0], [17885.0, 50.0], [17829.0, 53.0], [17557.0, 51.0], [17549.0, 53.0], [17629.0, 53.0], [17637.0, 54.0], [17565.0, 54.0], [17789.0, 50.0], [17813.0, 55.0], [17781.0, 52.0], [17877.0, 50.0], [17845.0, 54.0], [17541.0, 56.0], [17525.0, 52.0], [17517.0, 50.0], [17501.0, 51.0], [17437.0, 51.0], [10858.0, 54.0], [15194.0, 68.0], [15290.0, 60.0], [17404.0, 56.0], [17012.0, 56.0], [17068.0, 50.0], [17020.0, 53.0], [17052.0, 53.0], [16668.0, 57.0], [16652.0, 54.0], [17388.0, 55.0], [17180.0, 53.0], [17332.0, 51.0], [16684.0, 50.0], [17156.0, 52.0], [17836.0, 55.0], [17540.0, 50.0], [17556.0, 52.0], [17588.0, 52.0], [17780.0, 55.0], [17820.0, 50.0], [17828.0, 50.0], [17708.0, 51.0], [17668.0, 52.0], [17748.0, 47.0], [17716.0, 51.0], [17732.0, 50.0], [17636.0, 55.0], [17956.0, 51.0], [17612.0, 54.0], [17604.0, 47.0], [17532.0, 51.0], [17508.0, 51.0], [17468.0, 52.0], [17460.0, 55.0], [17452.0, 52.0], [17908.0, 55.0], [17892.0, 54.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 18107.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3507.8, "minX": 1.64933754E12, "maxY": 17514.816666666666, "series": [{"data": [[1.64933754E12, 3507.8], [1.64933784E12, 12155.95], [1.64933772E12, 17348.45], [1.64933778E12, 17495.016666666666], [1.6493376E12, 17323.466666666667], [1.64933766E12, 17514.816666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64933784E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3491.133333333333, "minX": 1.64933754E12, "maxY": 17514.816666666666, "series": [{"data": [[1.64933754E12, 3491.133333333333], [1.64933784E12, 12172.6], [1.64933772E12, 17348.483333333334], [1.64933778E12, 17495.0], [1.6493376E12, 17323.466666666667], [1.64933766E12, 17514.816666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64933784E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 866.7333333333333, "minX": 1.64933754E12, "maxY": 4460.783333333334, "series": [{"data": [[1.64933754E12, 876.2666666666667], [1.64933784E12, 3036.0833333333335], [1.64933772E12, 4341.616666666667], [1.64933778E12, 4411.5], [1.6493376E12, 4201.233333333334], [1.64933766E12, 4279.816666666667]], "isOverall": false, "label": "Get Member 2-success", "isController": false}, {"data": [[1.64933754E12, 873.35], [1.64933784E12, 3033.9166666666665], [1.64933772E12, 4301.983333333334], [1.64933778E12, 4332.7], [1.6493376E12, 4405.066666666667], [1.64933766E12, 4460.783333333334]], "isOverall": false, "label": "Get Cart 2-success", "isController": false}, {"data": [[1.64933754E12, 866.7333333333333], [1.64933784E12, 3038.633333333333], [1.64933772E12, 4379.383333333333], [1.64933778E12, 4350.466666666666], [1.6493376E12, 4369.15], [1.64933766E12, 4423.616666666667]], "isOverall": false, "label": "Get Member 1-success", "isController": false}, {"data": [[1.64933754E12, 874.7833333333333], [1.64933784E12, 3063.9666666666667], [1.64933772E12, 4325.5], [1.64933778E12, 4400.333333333333], [1.6493376E12, 4348.016666666666], [1.64933766E12, 4350.6]], "isOverall": false, "label": "Get Cart 1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64933784E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3491.133333333333, "minX": 1.64933754E12, "maxY": 17514.816666666666, "series": [{"data": [[1.64933754E12, 3491.133333333333], [1.64933784E12, 12172.6], [1.64933772E12, 17348.483333333334], [1.64933778E12, 17495.0], [1.6493376E12, 17323.466666666667], [1.64933766E12, 17514.816666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64933784E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

